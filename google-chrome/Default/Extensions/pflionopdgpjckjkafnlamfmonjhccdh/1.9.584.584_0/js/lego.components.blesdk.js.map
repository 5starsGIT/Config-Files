{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 6c961be9a9dbd68a5fb2","webpack:///./~/babel-runtime/helpers/classCallCheck.js","webpack:///./~/babel-runtime/helpers/createClass.js","webpack:///./src/scripts/helpers/LDSDKLogger.js","webpack:///./~/core-js/library/modules/_core.js","webpack:///./~/babel-runtime/core-js/object/get-prototype-of.js","webpack:///./~/babel-runtime/helpers/inherits.js","webpack:///./~/babel-runtime/helpers/possibleConstructorReturn.js","webpack:///./~/core-js/library/modules/_wks.js","webpack:///./~/babel-runtime/core-js/map.js","webpack:///./~/core-js/library/modules/_global.js","webpack:///./src/scripts/helpers/UuidHelper.js","webpack:///./~/babel-runtime/core-js/promise.js","webpack:///./~/babel-runtime/helpers/asyncToGenerator.js","webpack:///./~/babel-runtime/regenerator/index.js","webpack:///./~/core-js/library/modules/_descriptors.js","webpack:///./~/core-js/library/modules/_export.js","webpack:///./~/core-js/library/modules/_object-dp.js","webpack:///./src/scripts/io/services/LegoService.js","webpack:///./~/babel-runtime/core-js/json/stringify.js","webpack:///./~/core-js/library/modules/_an-object.js","webpack:///./src/scripts/helpers/StringUtils.js","webpack:///./src/scripts/io/InputFormat.js","webpack:///./~/babel-runtime/helpers/get.js","webpack:///./~/core-js/library/modules/_hide.js","webpack:///./~/core-js/library/modules/_is-object.js","webpack:///./~/core-js/library/modules/_to-iobject.js","webpack:///./src/scripts/device/LegoDeviceImpl.js","webpack:///./src/scripts/helpers/IdHelper.js","webpack:///./~/core-js/library/modules/_ctx.js","webpack:///./~/core-js/library/modules/_has.js","webpack:///./src/scripts/device/LegoDeviceManagerImpl.js","webpack:///./src/scripts/service_definitions/DeviceInfoServiceDefinition.js","webpack:///./~/babel-runtime/core-js/get-iterator.js","webpack:///./~/core-js/library/modules/_fails.js","webpack:///./~/core-js/library/modules/_iterators.js","webpack:///./src/scripts/service_definitions/BaseServiceDefinition.js","webpack:///./src/scripts/service_definitions/BluetoothServiceDefinition.js","webpack:///./src/scripts/service_definitions/CharacteristicDefinition.js","webpack:///./~/core-js/library/modules/_cof.js","webpack:///./~/core-js/library/modules/_set-to-string-tag.js","webpack:///./~/core-js/library/modules/es6.string.iterator.js","webpack:///./~/core-js/library/modules/web.dom.iterable.js","webpack:///./src/scripts/device/ConnectInfo.js","webpack:///./src/scripts/helpers/LDSDKError.js","webpack:///./src/scripts/helpers/SimpleList.js","webpack:///./src/scripts/io/DataFormat.js","webpack:///./src/scripts/service_definitions/DeviceServiceDefinition.js","webpack:///./src/scripts/service_definitions/IOServiceDefinition.js","webpack:///./~/babel-runtime/helpers/typeof.js","webpack:///./~/core-js/library/modules/_classof.js","webpack:///./~/core-js/library/modules/_defined.js","webpack:///./~/core-js/library/modules/_for-of.js","webpack:///./~/core-js/library/modules/_library.js","webpack:///./~/core-js/library/modules/_object-create.js","webpack:///./~/core-js/library/modules/_object-keys.js","webpack:///./~/core-js/library/modules/_property-desc.js","webpack:///./~/core-js/library/modules/_uid.js","webpack:///./src/scripts/bluetooth/ChromeOsBluetoothDeviceWrapper.js","webpack:///./src/scripts/bluetooth/LegoBluetoothDeviceImpl.js","webpack:///./src/scripts/device/DeviceInfo.js","webpack:///./src/scripts/device/Revision.js","webpack:///./src/scripts/helpers/BluetoothHelper.js","webpack:///./src/scripts/io/services/LegoServiceFactory.js","webpack:///./~/core-js/library/modules/_a-function.js","webpack:///./~/core-js/library/modules/_an-instance.js","webpack:///./~/core-js/library/modules/_dom-create.js","webpack:///./~/core-js/library/modules/_enum-bug-keys.js","webpack:///./~/core-js/library/modules/_iter-define.js","webpack:///./~/core-js/library/modules/_meta.js","webpack:///./~/core-js/library/modules/_object-gopd.js","webpack:///./~/core-js/library/modules/_object-pie.js","webpack:///./~/core-js/library/modules/_redefine-all.js","webpack:///./~/core-js/library/modules/_shared-key.js","webpack:///./~/core-js/library/modules/_shared.js","webpack:///./~/core-js/library/modules/_to-integer.js","webpack:///./~/core-js/library/modules/_to-length.js","webpack:///./~/core-js/library/modules/_to-object.js","webpack:///./~/core-js/library/modules/_to-primitive.js","webpack:///./~/core-js/library/modules/_wks-define.js","webpack:///./~/core-js/library/modules/_wks-ext.js","webpack:///./src/scripts/bluetooth/BluetoothDeviceCallback.js","webpack:///./src/scripts/bluetooth/ChromeOsBluetoothAdapterWrapper.js","webpack:///./src/scripts/bluetooth/LegoBluetoothDeviceManagerImpl.js","webpack:///./src/scripts/device/LegoDeviceManager.js","webpack:///./src/scripts/helpers/StorageHelper.js","webpack:///./src/scripts/helpers/TimerUtil.js","webpack:///./src/scripts/io/InputCommands.js","webpack:///./src/scripts/io/OutputCommand.js","webpack:///./src/scripts/io/services/CurrentSensor.js","webpack:///./src/scripts/io/services/GenericService.js","webpack:///./src/scripts/io/services/MotionSensor.js","webpack:///./src/scripts/io/services/PiezoTonePlayer.js","webpack:///./src/scripts/io/services/RGBLight.js","webpack:///./src/scripts/io/services/SimpleMotor.js","webpack:///./src/scripts/io/services/TiltSensor.js","webpack:///./src/scripts/io/services/VoltageSensor.js","webpack:///./src/scripts/service_definitions/BatteryServiceDefinition.js","webpack:///./~/core-js/library/modules/_html.js","webpack:///./~/core-js/library/modules/_ie8-dom-define.js","webpack:///./~/core-js/library/modules/_iobject.js","webpack:///./~/core-js/library/modules/_is-array.js","webpack:///./~/core-js/library/modules/_iter-step.js","webpack:///./~/core-js/library/modules/_object-gopn.js","webpack:///./~/core-js/library/modules/_object-gops.js","webpack:///./~/core-js/library/modules/_object-gpo.js","webpack:///./~/core-js/library/modules/_object-keys-internal.js","webpack:///./~/core-js/library/modules/_object-sap.js","webpack:///./~/core-js/library/modules/_redefine.js","webpack:///./~/core-js/library/modules/_set-species.js","webpack:///./~/core-js/library/modules/_task.js","webpack:///./~/core-js/library/modules/core.get-iterator-method.js","webpack:///./~/arraybuffer-equal/index.js","webpack:///./src/scripts/bluetooth/BluetoothIO.js","webpack:///./src/scripts/helpers/ArrayHelper.js","webpack:///./src/scripts/helpers/ByteUtils.js","webpack:///./src/scripts/helpers/ChromeShim.js","webpack:///./src/scripts/helpers/DebugHelper.js","webpack:///./src/scripts/helpers/IoCallbackHelper.js","webpack:///./src/scripts/io/IO.js","webpack:///./src/scripts/io/services/LegoServiceCallbackHelper.js","webpack:///./src/scripts/main.js","webpack:///./~/babel-runtime/core-js/is-iterable.js","webpack:///./~/babel-runtime/core-js/object/create.js","webpack:///./~/babel-runtime/core-js/object/define-property.js","webpack:///./~/babel-runtime/core-js/object/get-own-property-descriptor.js","webpack:///./~/babel-runtime/core-js/object/is.js","webpack:///./~/babel-runtime/core-js/object/set-prototype-of.js","webpack:///./~/babel-runtime/core-js/symbol.js","webpack:///./~/babel-runtime/core-js/symbol/iterator.js","webpack:///./~/babel-runtime/helpers/slicedToArray.js","webpack:///./~/core-js/library/fn/get-iterator.js","webpack:///./~/core-js/library/fn/is-iterable.js","webpack:///./~/core-js/library/fn/json/stringify.js","webpack:///./~/core-js/library/fn/map.js","webpack:///./~/core-js/library/fn/object/create.js","webpack:///./~/core-js/library/fn/object/define-property.js","webpack:///./~/core-js/library/fn/object/get-own-property-descriptor.js","webpack:///./~/core-js/library/fn/object/get-prototype-of.js","webpack:///./~/core-js/library/fn/object/is.js","webpack:///./~/core-js/library/fn/object/set-prototype-of.js","webpack:///./~/core-js/library/fn/promise.js","webpack:///./~/core-js/library/fn/symbol/index.js","webpack:///./~/core-js/library/fn/symbol/iterator.js","webpack:///./~/core-js/library/modules/_add-to-unscopables.js","webpack:///./~/core-js/library/modules/_array-from-iterable.js","webpack:///./~/core-js/library/modules/_array-includes.js","webpack:///./~/core-js/library/modules/_array-methods.js","webpack:///./~/core-js/library/modules/_array-species-constructor.js","webpack:///./~/core-js/library/modules/_array-species-create.js","webpack:///./~/core-js/library/modules/_collection-strong.js","webpack:///./~/core-js/library/modules/_collection-to-json.js","webpack:///./~/core-js/library/modules/_collection.js","webpack:///./~/core-js/library/modules/_enum-keys.js","webpack:///./~/core-js/library/modules/_invoke.js","webpack:///./~/core-js/library/modules/_is-array-iter.js","webpack:///./~/core-js/library/modules/_iter-call.js","webpack:///./~/core-js/library/modules/_iter-create.js","webpack:///./~/core-js/library/modules/_iter-detect.js","webpack:///./~/core-js/library/modules/_keyof.js","webpack:///./~/core-js/library/modules/_microtask.js","webpack:///./~/core-js/library/modules/_object-dps.js","webpack:///./~/core-js/library/modules/_object-gopn-ext.js","webpack:///./~/core-js/library/modules/_same-value.js","webpack:///./~/core-js/library/modules/_set-proto.js","webpack:///./~/core-js/library/modules/_species-constructor.js","webpack:///./~/core-js/library/modules/_string-at.js","webpack:///./~/core-js/library/modules/_to-index.js","webpack:///./~/core-js/library/modules/core.get-iterator.js","webpack:///./~/core-js/library/modules/core.is-iterable.js","webpack:///./~/core-js/library/modules/es6.array.iterator.js","webpack:///./~/core-js/library/modules/es6.map.js","webpack:///./~/core-js/library/modules/es6.object.create.js","webpack:///./~/core-js/library/modules/es6.object.define-property.js","webpack:///./~/core-js/library/modules/es6.object.get-own-property-descriptor.js","webpack:///./~/core-js/library/modules/es6.object.get-prototype-of.js","webpack:///./~/core-js/library/modules/es6.object.is.js","webpack:///./~/core-js/library/modules/es6.object.set-prototype-of.js","webpack:///./~/core-js/library/modules/es6.promise.js","webpack:///./~/core-js/library/modules/es6.symbol.js","webpack:///./~/core-js/library/modules/es7.map.to-json.js","webpack:///./~/core-js/library/modules/es7.symbol.async-iterator.js","webpack:///./~/core-js/library/modules/es7.symbol.observable.js","webpack:///./~/process/browser.js","webpack:///./~/regenerator-runtime/runtime-module.js","webpack:///./~/regenerator-runtime/runtime.js"],"names":["LDSDKLoggerLevel","ERROR","WARN","INFO","DEBUG","TRACE","DISABLED","LDSDKLogger","logger","level","isLoggerSet","log","setLevel","console","setLogger","maxLevel","date","Date","hours","getFixedLengthString","getHours","minutes","getMinutes","seconds","getSeconds","millis","getMilliseconds","val","length","repeat","slice","caller","getTime","args","error","concatArgs","warn","arguments","info","debug","offset","separator","message","i","type","o","cache","hasOwnProperty","toString","key","value","indexOf","push","includeCaller","UuidHelper","shorthandUuid","legoGattPostfix","substring","toLowerCase","specGattPostfix","wrappedDevice","getUuids","getInstance","getServiceUUID","characteristicOrService","uuid","isTraceEnabled","trace","LDSDKError","LegoService","newInputFormat","_inputFormat","_dataFormat","dataFormatForInputFormat","valueData","_valueData","_cachedNumberFromValueData","connectInfo","io","callbackHelper","ioCallbackListenerId","undefined","Error","FIRST_INTERNAL_HUB_INDEX","registerCallbackListener","device","validDataFormats","legoDevice","getHubIndex","dataBuffer","getServiceName","Int8Array","dataFormat","inputFormat","msg","ErrorCode","INTERNAL_ERROR","verifyDataForDataFormat","byteLength","getDataSetSize","getDataSetCount","getModeName","getUnit","isErrorEnabled","getMode","getNumberOfBytes","newFormat","getConnectId","getConnectInfo","getType","getTypeEnum","isWarnEnabled","isDebugEnabled","writeInputFormat","getInputFormat","getDefaultInputFormat","newMode","updateInputFormat","inputFormatBySettingMode","splice","data","dataset","valuesAsNumbers","getNumbersFromValueDataSet","dataSet","isInfoEnabled","results","currentIndex","dataSetBytes","RAW","PERCENTAGE","getIntegerFromData","getFloatFromData","ldsdkError","DataView","buffer","getFloat32","getInt8","getInt16","getInt32","readValueForConnectId","resetStateForConnectId","writeData","equals","handleUpdatedInputFormat","oldFormat","performDidUpdateInputFormatCallback","sendReadValueRequest","get","isArrayBuffersEqual","getArrayBufferString","handleUpdatedValueData","verifyData","e","oldData","performDidUpdateValueDataCallback","listener","getDevice","listenerId","unregisterCallbackListener","constructor","name","callbackListeners","size","self","simpleService","deviceId","getDeviceId","isInternalService","serviceName","serviceData","getSimpleServiceData","numberValue","getNumberFromValueData","defaultInputFormat","getSimpleInputFormat","getSimpleConnectInfo","StringUtils","str","utf8","charcode","charCodeAt","unescape","encodeURIComponent","arr","arrayBuffer","result","c","c2","Uint8Array","String","fromCharCode","c3","param","characteristic","valueString","getInstanceString","uuidStr","instanceIdStr","instanceId","getName","getAddress","InputFormatUnit","SI","UNKNOWN","fromInteger","parseInt","InputFormat","connectId","typeId","mode","deltaInterval","unit","notificationsEnabled","FORMAT_DATA_SIZE","revision","getUint8","getUint32","numberOfBytes","inputFormatUnit","ArrayBuffer","setUint8","setUint32","other","getRevision","getDeltaInterval","isNotificationsEnabled","INPUT_FORMAT_PACKAGE_SIZE","simpleInputFormat","StateEnum","DisconnectedAdvertising","DisconnectedNotAdvertising","Connecting","Interrogating","InterrogationFinished","DeviceCategoryEnum","DeviceCategoryWeDo","DeviceCategoryDuplo","DeviceCategorySystem","DeviceCategoryTechnic","DeviceCategoryMindStorms","DeviceCategoryUnknown","DeviceFunctionEnum","DeviceFunctionCentralMode","DeviceFunctionPeripheralMode","DeviceFunctionIOPorts","DeviceFunctionActsAsRemoteController","DeviceFunctionUnknown","DeviceCallbackHelper","legoDeviceAddress","legoDeviceManager","_legoDeviceAddress","_legoDeviceManager","requiredCallbackFunctions","callback","checkCallbackListener","callbackId","generateID","has","set","deleted","delete","deviceInfo","resolve","reject","setTimeout","legoBluetoothDevice","cachedListener","forEach","callbackListener","didUpdateDeviceInfo","getSimpleDevice","getSimpleDeviceInfo","buttonPressed","didChangeButtonState","lowVoltage","didUpdateLowVoltageState","batteryLevel","didUpdateBatteryLevel","oldName","newName","didChangeNameFrom","didFailToAddServiceWithError","service","simpleDevice","getSimpleService","didRemoveService","didAddService","requiredFuncName","requiredFunc","LegoDeviceImpl","connectState","UNDEFINED_DEVICE_ID","deviceName","_batteryLevel","category","supportedFunctions","lastConnectedNetworkId","services","getFilteredServices","cachedDevice","getConnectState","isButtonPressed","getBatteryLevel","getDeviceInfo","internalOnly","filteredServices","values","simpleDeviceObj","isLowVoltage","getCategory","getSupportedFunctions","getLastConnectedNetworkId","simpleDeviceInfo","getServiceInstances","deviceCallbackHelper","getDeviceCallbackHelper","setDeviceCallbackHelper","Math","max","min","IdHelper","timestamp","id","replace","r","random","floor","DeviceManagerCallbackHelper","counter","onDeviceAppeared","onDeviceDisappeared","onWillStartConnectingToDevice","onDidStartInterrogatingDevice","onDidFinishInterrogatingDevice","autoReconnect","onDidDisconnectFromDevice","onDidFailToConnectToDevice","LegoDeviceManagerConfig","_fireDeviceInfoUpdateOnTheOnDeviceEvents","_automaticReconnectOnConnectionLostEnabled","_startStopRepeatedScanning","_registerForBatteryLevelNotifications","_registerForCurrentNotifications","_registerForVoltageNotifications","_listenForConnectionsAllTheTime","_disconnectOnOperationFailedBLEError","_filterFallbackEnabled","_usePreviouslySeenCacheAsFallbackFilter","_connectRequestTimeoutInterval","DEFAULT_CONNECT_REQUEST_TIMEOUT","_startStopScanningInterval","START_STOP_SCANNING_INTERVAL","_batteryPollingInterval","_disableAdvertisingWindowSizeMillis","_updateAdvertisingDevicesIntervalMillis","REFRESH_DEVICE_LIST_DEFAULT_INTERVAL","_handleUpdatedInputRetryDelay","_synchronousOperationsQueuePollDelay","_startCharacteristicNotificationsWhenConnectedRetryDelay","_startCharacteristicNotificationsWhenConnectedRetryMax","_lookupServicesWhenConnectedRetryDelay","_lookupServicesWhenConnectedRetryMaxCount","MAX_RETRIES","_serviceCountComplete","_waitForAddServicesBeforePollingMillis","fireDeviceInfoUpdateOnTheOnDeviceEvents","automaticReconnectOnConnectionLostEnabled","startStopRepeatedScanning","registerForCurrentNotifications","registerForVoltageNotifications","LegoDeviceManagerImpl","instance","registerDisconnectListener","config","listenForConnectionsAllTheTime","registerConnectListener","_config","_deviceCallbackHelpers","_bluetoothDeviceManager","scanListenerCallbackId","connectListenerCallbackId","getBluetoothAdapter","address","deviceCallbackHelpers","bluetoothDeviceManager","scan","stopScanning","isScanning","restoreScanning","getLegoBluetoothDeviceWithAddress","connectToDevice","err","disconnectListenerCallbackId","proxyDisconnectListener","timeoutInterval","connectRequestTimeoutInterval","enabled","cancelDeviceConnection","connectionState","simple","devicesInStateList","devicesInState","simpleDevices","add","devices","allBluetoothDevices","allDevices","serviceConnectId","getDeviceServiceWithConnectId","fullService","getService","setName","getDeviceString","performDeviceAppearedCallback","updateConnectionStateUponConnectionStateChange","performDeviceDisappearedCallback","performWillStartConnectingToDeviceCallback","performDidFailToConnectToDevice","unregisterConnectListener","performDidDisconnectFromDevice","performDidStartInterrogatingDevice","performDidFinishInterrogratingDevice","DeviceInfoServiceDefinition","firmwareRevision","hardwareRevision","softwareRevision","manufacturerName","serviceUUID","getSpecUuid","DEVICE_INFO_SERVICE_UUID","DEVICE_INFO_FIRMWARE_REVISION_CHARACTERISTIC_UUID","DEVICE_INFO_HARDWARE_REVISION_CHARACTERISTIC_UUID","DEVICE_INFO_SOFTWARE_REVISION_CHARACTERISTIC_UUID","DEVICE_INFO_MANUFACTURER_NAME_CHARACTERISTIC_UUID","characteristicDefinitions","init","BaseServiceDefinition","characteristicUUIDs","definition","getCharacteristics","getUuid","isEqualToDefinition","BluetoothServiceDefinition","ioServiceDefinition","deviceServiceDefinition","deviceInfoServiceDefinition","batteryServiceDefinition","CharacteristicDefinition","serviceDefinition","mandatory","mandatoryProperties","recommendedProperties","permissions","getProperties","errorMessage","toStringShort","stringsFromProperties","deviceError","BLUETOOTH_INVALID_CHARACTERISTIC_PROPERTIES","arrayOfStringsFromCharacteristicProperties","properties","IOType","IO_TYPE_MOTOR","IO_TYPE_VOLTAGE","IO_TYPE_CURRENT","IO_TYPE_PIEZO_TONE_PLAYER","IO_TYPE_RGB_LIGHT","IO_TYPE_TILT_SENSOR","IO_TYPE_MOTION_SENSOR","IO_TYPE_GENERIC","ConnectInfo","hubIndex","hardwareVersion","firmwareVersion","populateValidTypes","validTypes","ioType","typeStrings","getHardwareVersion","getFirmwareVersion","BLUETOOTH_CONNECTION_TIMEOUT","BLUETOOTH_CONNECTION_ERROR","BLUETOOTH_UNSUPPORTED_FIRMWARE_VERSION","BLUETOOTH_UNKNOWN_SERVICE_UUID","BLUETOOTH_MISSING_CHARACTERISTICS","ExtendableError","errorCode","getErrorCode","LDKSDKInternalError","LDKSDKBluetoothConnectionTimeout","LDKSDKBluetoothConnectionError","LDKSDKBluetoothUnsupportedFirmwareVersion","LDKSDKBluetoothUnknownServiceUuid","LDKSDKBluetoothMissingCharacteristics","LDKSDKBluetoothInvalidCharacteristicProperties","SimpleList","simpleList","item","copyFrom","idx","start","deleteCount","idxToRemove","compareFunction","sort","DataFormat","modeName","numberOfDataSets","dataSetSize","dataSetCount","DeviceServiceDefinition","attachedIO","deviceButton","lowVoltageAlert","disconnect","getLegoUuid","HUB_SERVICE_16_BIT_UUID","HUB_CHARACTERISTIC_NAME_UUID","HUB_CHARACTERISTIC_ATTACHED_IO","HUB_CHARACTERISTIC_BUTTON_STATE","HUB_CHARACTERISTIC_LOW_VOLTAGE_ALERT","HUB_CHARACTERISTIC_DISCONNECT","getShortServiceUUID","HUB_CHARACTERISTIC_COLOR","IOServiceDefinition","inputValue","inputCommand","outputCommand","INPUT_SERVICE_UUID","CHARACTERISTIC_INPUT_VALUE_UUID","CHARACTERISTIC_INPUT_FORMAT_UUID","CHARACTERISTIC_INPUT_COMMAND_UUID","CHARACTERISTIC_OUTPUT_COMMAND_UUID","window","previouslySeenLegoDevices","ChromeOsBluetoothDeviceWrapper","bluetoothDevice","chromeBluetoothDevice","rssi","pairing","connectCallback","inquiryRssi","isLEGODevice","usePreviouslySeenCacheAsFallbackFilter","getFromLocalStorage","then","getFromSyncStorage","catch","chrome","runtime","lastError","filterFallbackEnabled","inquiryTxPower","deviceClass","filterLegoDevice","uuids","nativeDevice","paired","connected","connecting","connectable","autoConnect","bluetoothGattCallback","bluetoothLowEnergy","connect","saveToLocalStorage","saveToSyncStorage","legoBluetoothDeviceImpl","isPairing","getConnecting","getConnected","onConnectionStateChange","getServices","Array","isArray","getCharacteristicString","startCharacteristicNotificationsTimer","startTimer","startCharacteristicNotifications","stopTimer","stopCharacteristicNotificationsTimer","stopCharacteristicNotifications","characteristics","element","isConnected","writeCharacteristicValue","errMsg","disconnectOnOperationFailedBLEError","readCharacteristicValue","getPaired","getRssi","SynchronousQueueElement","descriptor","promise","LegoBluetoothDeviceImpl","_deviceNativeServices","bluetoothDeviceWrapper","updateWrapper","setDevice","bluetoothGatt","maxRetries","retryCount","startNotificationsRetryCount","bluetoothIO","nameCharacteristic","ioCharacteristic","disconnectCharacteristic","buttonCharacteristic","lowVoltageAlertCharacteristic","batteryLevelCharacteristic","batteryIntervalId","firmwareRevisionCharacteristic","hardwareRevisionCharacteristic","softwareRevisionCharacteristic","manufacturerCharacteristic","characteristicListenersRegistered","interrogationFinished","_advertising","rssiValues","averageRSSI","synchronousOperationsQueue","messagesHandled","userInitiatedDisconnect","operationExecuting","executeNextOperationQueueTimer","characteristicNotifications","resetState","updateWithAdvertisementDataAndRSSI","cachedWrapper","getBluetoothWrapper","updateNativeDevice","isAdvertising","setAdvertising","advertisingUpdatedTimestamp","updateAdvertising","clearServices","resetQueue","clearInterval","getQueueSize","getMessagesHandled","delayMs","setQueuePollDelay","synchronousOperationsQueuePollDelay","getQueuePollDelay","advertising","updateConnectionStateUponAdvertisingChange","dataToWrite","from","trim","toUtf8Bytes","addWriteOfCharacteristicToQueue","getBluetoothDevice","legoBluetoothDeviceManager","bluetoothAdapter","getWrappedDevice","performDidChangeNameCallback","calculateAverageRSSI","buttonState","updateButtonState","oldButtonPressedState","performDidChangeButtonStateCallback","newRSSI","NUMBER_OF_RSSI_VALUES_TO_AVERAGE","rssiIndex","sortedRSSIValues","addAll","lhs","rhs","middleIndex","newDeviceState","updateDeviceState","getRSSIValue","addService","removeService","cachedConnectId","servicesArray","lhsConnectID","rhsConnectID","connectGatt","handleUpdatedInputServiceCharacteristic","characteristicUuid","count","handleUpdatedInputRetryDelay","handleReadOrUpdatedCharacteristic","matchesService","handleUpdatedDeviceServiceCharacteristic","handleUpdatedDeviceInfoServiceCharacteristic","handleUpdatedBatteryLevelCharacteristic","userInitiated","writeCharacteristic","setCharacteristicNotification","clear","getErrorReason","deviceNativeServices","deviceDidDisconnect","retry","res","retryMax","startCharacteristicNotificationsWhenConnectedRetryMax","endsWith","startCharacteristicNotificationsWithRetries","startCharacteristicNotificationsWhenConnectedRetryDelay","discoverCharacteristicsForService","serviceDefinitionWithUUID","discoverCharacteristicsForDeviceInfo","discoverCharacteristicsForDevice","discoverCharacteristicsForIO","discoverCharacteristicsForBattery","create","registerForBatteryLevelNotifications","addReadOfCharacteristicToQueue","setInterval","batteryPollingInterval","getDeviceName","getAttachedIO","getDisconnect","getDeviceButton","getLowVoltageAlert","getFirmwareRevision","getHardwareRevision","getSoftwareRevision","getManufacturerName","cleanCharacteristic","getCleanCharacteristic","addOperationToSynchronousQueue","fromCharacteristic","fromDescriptor","fromPromise","executeNextOperationQueue","readCharacteristic","setExecutingFlag","props","setValue","schedulePollQueueIfNotEmpty","clearTimeout","executing","registerOnCharacteristicValueChangedListener","deviceAddress","timerId","startCharacteristicNotification","enable","registerOnCharacteristicListeners","stopCharacteristicTimer","stopCharacteristicNotification","scanRecord","newState","updateConnectionStateUponServicesDiscovered","matchesCharacteristic","decodeUtf8","handleAttachedIOData","newStateInt","handleUpdatedLowVoltageAlertCharacteristic","SIZE_OF_ATTACHED_IO_DATA","performDidFailToAddServiceWithErrorCallback","dataView","connectID","attached","serviceWithConnectID","performDidRemoveServiceCallback","typedDataArray","hwRevision","fwRevision","createFromData","createdService","performDidAddServiceCallback","performDidUpdateDeviceInfoCallback","setFirmwareRevisionString","setHardwareRevisionString","setSoftwareRevisionString","setManufacturerName","isComplete","firmwareRevisionTestedWithSDK","createFromString","deviceFirmwareRevision","getMajorVersion","map","discoverServices","ioServiceDef","localeCompare","serviceDef","serviceDefName","getMinorVersion","performDidUpdateBatteryLevelCallback","performDidUpdateLowVoltageStateCallback","idToFind","cachedService","close","nativeDeviceString","checkedValue","now","diff","disableAdvertisingWindowSizeMillis","CHARACTERISTIC_UPDATE_NOTIFICATION_DESCRIPTOR_UUID","DeviceInfo","Revision","revisionString","revisionDataBuffer","revisionStringOrBuffer","parseRevision","parseRevisionBuffer","bufferOrTypedArray","majorVersion","minorVersion","bugFixVersion","buildNumber","view","matches","match","versionComponents","split","toBuffer","bufferView","getBugFixVersion","getBuildNumber","BluetoothHelper","characteristicUUID","characteristicsForService","LegoServiceFactory","servicesForDeviceMap","getCallbackHelper","checkOrRegisterAsCallbackListener","createService","servicesMap","deviceToServices","oldServiceInstance","getIo","BluetoothDeviceCallback","closeGatt","onServicesDiscovered","discoverCharacteristicsForServiceStart","status","onCharacteristicRead","ChromeOsBluetoothAdapterWrapper","wrappers","scanning","bluetooth","startDiscovery","isLegoDevice","listenerRegistered","onDeviceAdded","addListener","onDeviceChanged","onDeviceRemoved","onServiceListenerRegistered","onServiceAdded","getConnectCallback","onServiceChanged","onServiceRemoved","onCharacteristicValueChangedListenerRegistered","onCharacteristicValueChanged","stopDiscovery","getAdapterState","adapter","available","isBluetoothEnabledOnDevice","discovering","powered","registerOnDeviceListeners","registerOnServiceListener","BluetoothDeviceManagerCallbackHelper","callbackIdKey","generatedCallbackId","onDeviceDidAppear","onDeviceDidDisappear","BaseBluetoothGattCallback","deviceManagerImpl","retries","pollGetServicesRetry","errorCallback","cachedNativeDevice","lookupServicesWhenConnectedRetryMaxCount","lookupServicesWhenConnectedRetryDelay","lookupServicesWhenConnected","bailOut","deviceDidConnect","startTs","awaitOnServiceAdded","serviceCountComplete","waitForAddServicesBeforePollingMillis","pollGetServices","performDidFailToConnectToDeviceCallback","discoveredServices","deviceInterrogationFinished","deviceDidFailToConnect","DeviceConnectTimeoutCountDownTimer","legoBluetoothDeviceManagerImplRef","millisInFuture","onFinish","removeConnectTimeoutTimerForDevice","DeviceCallbackListener","newDevice","deviceWithWrapper","performDeviceDidAppearCallback","performDeviceDidChangeCallback","deviceIdentifierToLastSeenTimeStamp","shouldUpdateOnTheOnDeviceEvents","performUpdateDeviceInfo","onDevice","updatedWrappedDevice","LegoBluetoothDeviceManagerImpl","lhsRSSI","rhsRSSI","bluetoothAdapterWrapper","_devices","deviceToConnectTimerDic","deviceToReconnectCount","primaryServiceUUIds","stopScanningTimeoutHandle","startScanningTimeoutHandle","connectCallbackListener","appeared","newDeviceAddress","devicesToRemove","updateAdvertisingDevicesIntervalMillis","lastSeenDateInMillis","lastAdvertisingPackageTooOld","performDeviceDidDisappearCallback","cleanUpListOfDiscoveredDevicesTimeoutId","cleanUpListOfDiscoveredDevices","isBluetoothAvailable","isBluetoothEnabled","shouldStartStopRepeatedScanning","startRepeatingScanning","startScan","startRepeatingCleanUpListOfDiscoveredDevices","stopRepeatingDeviceDisappearanceDiscovery","stopRepeatingScanning","stopScan","addConnectTimeoutTimerForDevice","cleanUp","shouldAttemptReconnect","shouldAllowReconnectToDevice","performDidDisconnectFromDeviceCallback","performReconnect","reconnectToDevice","resetReconnectCountForDevice","disconnectGatt","performDidStartInterrogatingDeviceCallback","performDidFinishInterrogatingDeviceCallback","timeout","timer","cancel","interval","REFRESH_DEVICE_LIST_MINIMUM_INTERVAL","rssiComparatorDescending","allDevicesList","reconnectCount","reconnectAttempt","shouldAutomaticallyReconnectOnConnectionLost","hasUserInitiatedDisconnect","advertisedData","startLeScan","stopLeScan","clearStopScanningTimeoutHandle","stopScanBackground","startStopScanningInterval","clearStartScanningTimeoutHandle","startScanBackground","LegoDeviceManager","StorageHelper","obj","prop","items","_isEmpty","myValue","storage","local","sync","_checkItemsAndKey","TimerUtil","timerKey","timers","elapsed","elapsedTime","InputCommand","commandId","commandType","payloadData","commandBytes","HEADER_SIZE","payloadBytes","format","COMMAND_ID_INPUT_FORMAT","COMMAND_TYPE_WRITE","writeFormatData","COMMAND_TYPE_READ","COMMAND_ID_INPUT_VALUE","OutputCommand","tempDataArray","power","WRITE_MOTOR_POWER_COMMAND_ID","frequency","duration","payloadBuffer","setUint16","PLAY_PIEZO_TONE_COMMAND_ID","red","green","blue","WRITE_RGB_COMMAND_ID","index","WRITE_DIRECT_ID","STOP_PIEZO_TONE_COMMAND_ID","COMMAND_PAYLOAD_SIZE_PIEZO","COMMAND_PAYLOAD_SIZE_RGB_LIGHT","CurrentSensor","SERVICE_CURRENT_SENSOR_NAME","getValueAsFloat","performDidUpdateMilliAmps","getValueAsMilliAmps","valueAsMilliAmps","GenericService","SERVICE_GENERIC_NAME","MotionSensorMode","MOTION_SENSOR_MODE_DETECT","MOTION_SENSOR_MODE_COUNT","MOTION_SENSOR_MODE_UNKNOWN","asString","MotionSensor","addValidDataFormats","SERVICE_MOTION_SENSOR_NAME","addValidDataFormat","getMotionSensorMode","number","getInputFormatMode","motionSensorMode","updateCurrentInputFormatWithNewMode","oldDistance","getDistance","newDistance","performDidUpdateMotionSensorDistanceCallback","newCount","getCount","performDidUpdateMotionSensorCountCallback","superService","setMotionSensorMode","superServiceData","MAX_DISTANCE","MIN_DISTANCE","PiezoTonePlayerNote","PIEZO_NOTE_C","PIEZO_NOTE_CIS","PIEZO_NOTE_D","PIEZO_NOTE_DIS","PIEZO_NOTE_E","PIEZO_NOTE_F","PIEZO_NOTE_FIS","PIEZO_NOTE_G","PIEZO_NOTE_GIS","PIEZO_NOTE_A","PIEZO_NOTE_AIS","PIEZO_NOTE_B","PiezoTonePlayer","SERVICE_PIEZO_TONE_PLAYER_NAME","round","PIEZO_TONE_MAX_FREQUENCY","PIEZO_TONE_MAX_DURATION","writePiezoToneFrequency","note","octave","base","octavesAboveMiddle","halfStepsAwayFromBase","pow","playFrequency","writePiezoToneStop","playNote","stopPlaying","RGBLightMode","RGB_LIGHT_MODE_DISCRETE","RGB_LIGHT_MODE_ABSOLUTE","RGB_LIGHT_MODE_UNKNOWN","RGBColor","getColor","RGBLight","SERVICE_RGB_LIGHT_NAME","color","getDefaultColor","colorIndex","rgbColor","getRGBMode","writeColor","getRed","getGreen","getBlue","writeColorIndex","rgbMode","setColor","setColorIndex","getDefaultColorIndex","oldColor","colorFromData","performRGBLightDidUpdateValueCallback","oldColorIndex","performRGBLightDidUpdateColorIndexCallback","setRGBMode","switchOff","switchToDefaultColor","defaultColor","getColorIndex","defaultColorIndex","MotorDirection","MOTOR_DIRECTION_DRIFTING","MOTOR_DIRECTION_LEFT","MOTOR_DIRECTION_RIGHT","MOTOR_DIRECTION_BRAKING","SimpleMotor","mostRecentSendPower","MOTOR_POWER_BRAKE","SERVICE_MOTOR_NAME","isBraking","isDrifting","abs","getDirectionForPower","MOTOR_POWER_DRIFT","direction","checkedPower","MOTOR_MAX_SPEED","drift","sendPower","convertUnsignedMotorPowerToSigned","directionForPower","writeMotorPower","absolutePower","MOTOR_POWER_OFFSET","getData","resultPower","directionEnum","getPower","run","brake","MOTOR_MIN_SPEED","TiltSensorDirection","NEUTRAL","BACKWARD","RIGHT","LEFT","FORWARD","TiltSensorMode","ANGLE","TILT","CRASH","TiltSensorAngle","x","y","TiltSensorCrash","z","TiltSensor","angle1","angle2","acceptableDiff","crash1","crash2","SERVICE_TILT_SENSOR_NAME","directionInt","dataSetNumbers","tiltSensorAngleMake","tiltSensorCrashMake","tiltSensorMode","oldDirection","getDirection","oldAngle","getAngle","oldCrash","getCrash","getTiltSensorMode","performDidUpdateTiltDirection","performDidUpdateTiltAngle","performDidUpdateTiltCrash","setTiltSensorMode","angle","crash","VoltageSensor","SERVICE_VOLTAGE_SENSOR_NAME","performDidUpdateMilliVolts","getValueAsMilliVolts","valueAsMilliVolts","BatteryServiceDefinition","BATTERY_SERVICE_UUID","BATTERY_LEVEL_CHARACTERISTIC_UUID","BluetoothIO","associatedDevice","getInputValue","inputValueCharacteristic","inputFormatCharacteristic","getInputCommand","inputCommandCharacteristic","getOutputCommand","outputCommandCharacteristic","inputFormats","receivedMessagesCounter","writeInputCommand","commandReadValueForConnectId","resetBytes","commandWriteInputFormat","commandReadInputFormatForConnectId","command","isDeviceConnected","bytesToHex","isPositive","actualPower","actualResultInt","commandWriteMotorPower","writeOutputCommand","commandWritePiezoToneFrequency","commandWritePiezoToneStopForConnectId","commandWriteRGBLight","commandWriteRGBLightIndex","commandWithDirectWriteThroughData","handleUpdatedInputFormatData","handleUpdatedInputValueData","inputFormatFromBuffer","anyFormat","next","ioCallbackHelper","performDidReceiveInputFormatCallback","incrementReceivedMessages","valueFormatRevision","hasMoreValues","idToValue","valueConnectId","readInputFormatForConnectId","payload","performDidReceiveValueDataCallback","ArrayHelper","buffer1","buffer2","ByteUtils","hex","bytes","substr","join","isPrimary","getCharacteristic","global","cbAdapter","getDevices","devicesCallback","deviceCallback","toUpperCase","resultFunc","serviceInstanceId","getIncludedServices","callbackWithCharacteristics","characteristicIinstanceId","replyFunc","getDescriptor","descriptorUuid","callbackFunc","debugDeviceServices","startDebugPollingServices","debugPollingServicesId","stopDebugPollingServices","addDebugServiceLister","prefix","listenerAdded","IoCallbackHelper","entries","didRequestConnectInfo","didReceiveValueData","didReceiveInputFormat","IO","ioCallbackListener","unregisterIOCallbackListener","LegoServiceCallbackHelper","legoService","previousFormat","currentFormat","didUpdateInputFormat","didUpdateValueData","motionSensor","didUpdateDistance","didUpdateCount","rgbLight","didReadInitialColor","didUpdateRGBValue","newColorIndex","didUpdateRGBColorIndex","tiltSensor","didUpdateDirection","didUpdateAngle","didUpdateCrash","voltageSensor","milliVolts","didUpdateMilliVolts","currentSensor","milliAmps","didUpdateMilliAmps","ChromeShim","require","DebugHelper","module","exports"],"mappings":"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A;AACA;AACA;AACA;AACA,iBAAgB,mBAAmB;AACnC;AACA;AACA,kCAAiC,2BAA2B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,G;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD;AACjD,EAAC;AACD;AACA,sBAAqB;AACrB;AACA,UAAS;AACT,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG,UAAU;AACb;AACA,G;;;;;;ACfA,eAAc,sB;;;;;;ACAd;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,G;;;;;;ACNA;AACA;AACA;AACA;AACA,G;;;;;;ACJA;AACA;AACA,oDAAmD;AACnD;AACA,wCAAuC;AACvC,G;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACLA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,G;;;;;;ACLA;AACA;AACA;AACA;AACA,G;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,sBAAsB;AAChF,iFAAgF,sBAAsB;AACtG,G;;;;;;ACRA,oC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA;;;;;KAKqBS,uB;AACjB;;;;;AAKA,sCAAYjjB,mBAAZ,EAA+D;AAAA,aAA9ByS,qBAA8B,uEAAN,IAAM;AAAA;;AAC3D;;;;AAIA,cAAKzS,mBAAL,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A,0CAAyBtyB,QAAzB,CAAkCgE,IAAlC;AACH;AACD,oBAAOsuB,yBAAyBtyB,QAAhC;AACH;;;qCA1BL;;;;;AAOqBsyB,yB,CAEVC,oB,GAAuB,M;AAFbD,yB,CAGVE,iC,GAAoC,M;AAH1BF,yB,CAKVtyB,Q,GAAW,I;mBALDsyB,wB;;;;;;ACPrB,+E;;;;;;ACAA;AACA,sEAAsE,gBAAgB,UAAU,GAAG;AACnG,EAAC,E;;;;;;ACFD;AACA;AACA;AACA;AACA,G;;;;;;ACJA;AACA;AACA;AACA;AACA,G;;;;;;ACJA;AACA,WAAU;AACV,G;;;;;;ACFA;AACA;AACA;;AAEA;AACA;AACA,G;;;;;;ACNA,0C;;;;;;ACAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,G;;;;;;ACZA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA,oDAAmD,OAAO,EAAE;AAC5D,G;;;;;;ACTA,0C;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAoB,aAAa;AACjC,IAAG;AACH,G;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACPA;AACA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CL;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA,EAAC,G;;;;;;AClDD;AACA;AACA,2C;;;;;;ACFA;AACA;AACA,2C;;;;;;ACFA;AACA,wCAAuC,0BAA0B;AACjE,yCAAwC;AACxC;AACA,G;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;ACLA;AACA;AACA;AACA;AACA,G;;;;;;ACJA;AACA;AACA;AACA;AACA,G;;;;;;ACJA;AACA;AACA;AACA;AACA,G;;;;;;ACJA;AACA,+D;;;;;;ACDA;AACA,mD;;;;;;ACDA;AACA,+D;;;;;;ACDA;AACA;AACA;AACA;AACA,iD;;;;;;ACJA;AACA;AACA;AACA;AACA,gD;;;;;;ACJA;AACA;AACA,wD;;;;;;ACFA,6BAA4B,e;;;;;;ACA5B;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,WAAW,eAAe;AAC/B;AACA,MAAK;AACL;AACA,G;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,eAAe;AACxB;AACA;AACA;AACA,uCAAsC;AACtC;AACA,+BAA8B;AAC9B,8BAA6B;AAC7B,gCAA+B;AAC/B,oCAAmC;AACnC,UAAS,+BAA+B;AACxC;AACA;AACA;AACA;AACA,G;;;;;;AC3CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,G;;;;;;ACfA;AACA;;AAEA;AACA;AACA,G;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAsB,OAAO;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,2BAA0B;AAC1B,2BAA0B;AAC1B,sBAAqB;AACrB;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,8DAA6D,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,sBAAqB;AACrB,2BAA0B;AAC1B,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,G;;;;;;AC7IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,G;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,G;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,G;;;;;;ACfA;AACA;AACA;AACA;;AAEA;AACA;AACA,G;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,G;;;;;;ACXA;AACA;AACA;AACA;AACA;;AAEA;AACA,2FAAgF,aAAa,EAAE;;AAE/F;AACA,sDAAqD,0BAA0B;AAC/E;AACA,G;;;;;;ACZA;AACA;;AAEA;AACA;AACA,gCAA+B,qBAAqB;AACpD,gCAA+B,SAAS,EAAE;AAC1C,EAAC,UAAU;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,SAAS,mBAAmB;AACvD,gCAA+B,aAAa;AAC5C;AACA,IAAG,UAAU;AACb;AACA,G;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,wCAAuC,oBAAoB,EAAE;AAC7D;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,G;;;;;;ACnEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACZA;AACA;AACA;AACA,mBAAkB;;AAElB;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA,G;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,QAAO,UAAU,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,GAAG;AACR;AACA,G;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACRA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC,eAAc;AACd,kBAAiB;AACjB;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;AACA,6B;;;;;;ACjCA;AACA;;AAEA;AACA;AACA,yBAAwB,mEAAmE;AAC3F,EAAC;AACD;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,EAAC,gB;;;;;;AChBD;AACA;AACA,+BAA8B,gCAAoC,E;;;;;;ACFlE;AACA;AACA,sEAAuE,0CAA0C,E;;;;;;ACFjH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC,E;;;;;;ACRD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC,E;;;;;;ACRD;AACA;AACA,+BAA8B,6BAA6B,E;;;;;;ACF3D;AACA;AACA,+BAA8B,6CAA4C,E;;;;;;ACF1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA,gDAA+C,sDAAiD,oBAAoB;AACpH;AACA;AACA,IAAG,UAAU;AACb,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,YAAW;AACX,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,oBAAmB,gCAAgC;AACnD,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,gBAAe,qCAAqC;AACpD;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA,wBAAuB,wBAAwB;AAC/C;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH,mBAAkB,uBAAuB,KAAK;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,kBAAiB;AACjB,yBAAwB;AACxB,iBAAgB;AAChB,qBAAoB;AACpB,yBAAwB;AACxB,iBAAgB;AAChB,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2DAA0D,kBAAkB;AAC5E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA,EAAC,E;;;;;;AC1SD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAsB;AACtB,qBAAoB,uBAAuB,SAAS,IAAI;AACxD,IAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD;AACA,MAAK;AACL;AACA,uBAAsB,iCAAiC;AACvD,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D,8BAA8B;AAC5F;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2DAA0D,gBAAgB;;AAE1E;AACA;AACA;AACA,qBAAoB,oBAAoB;;AAExC,2CAA0C,oBAAoB;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH,yBAAwB,eAAe,EAAE;AACzC,yBAAwB,gBAAgB;AACxC,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,KAAK,QAAQ,iCAAiC;AAClG,EAAC;AACD;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;AC1OA;AACA;;AAEA,wCAAuC,wCAAgD,E;;;;;;ACHvF,0C;;;;;;ACAA,uC;;;;;;ACAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;ACnLtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd,MAAK;AACL,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,YAAW;AACX;;AAEA;AACA;AACA,yCAAwC,WAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,UAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAY;AACZ;AACA;;AAEA;AACA,aAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA,YAAW;AACX;AACA;AACA;;AAEA,YAAW;AACX;AACA;AACA;;AAEA,YAAW;AACX;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,+CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA,MAAK;;AAEL;AACA,+CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,+CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA","file":"lego.components.blesdk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LEGO_BLE_SDK\"] = factory();\n\telse\n\t\troot[\"LEGO_BLE_SDK\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6c961be9a9dbd68a5fb2","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/classCallCheck.js\n// module id = 1\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/createClass.js\n// module id = 2\n// module chunks = 0","/**\n * Created by frj on 22/02/16.\n */\n\n/**\n * The supported logger levels\n * @property {number} ERROR - Error level\n * @property {number} WARN - Warning level\n * @property {number} INFO - Info level\n * @property {number} DEBUG - Debug level\n * @property {number} TRACE - Trace level\n *\n */\nexport const LDSDKLoggerLevel = {\n    ERROR: 4,\n    WARN: 3,\n    INFO: 2,\n    DEBUG: 1,\n    TRACE: 0,\n    /**\n     * @ignore\n     */\n    DISABLED: 99\n};\n\nexport default class LDSDKLogger {\n    static logger = null;\n    static level = LDSDKLoggerLevel.ERROR;\n    static maxLevel = LDSDKLoggerLevel.ERROR;\n    static includeCaller = true;\n\n    /**\n     * Set the logger to log to\n     * @param {{trace: function, debug: function, info: function, warn: function, error: function}} logger - The logger object the LDSDKLogger will forward the calls to - it should have the functions specified - otherwise nothing happens when using the api.\n     */\n    static setLogger(logger) {\n        LDSDKLogger.logger = logger;\n    }\n\n    /**\n     * Set the logger level. Messages logged at a level below this value will not be logged.\n     * @param {number} level - See {@link LDSDKLoggerLevel} for valid values\n     */\n    static setLevel(level) {\n        LDSDKLogger.level = level;\n    }\n\n    /**\n     * Disable the logger (by setting a level that no messages are logged at) - the logger instance within the LDSDKLogger is also cleared.\n     * To restart logging later on, the logger must be set using setLogger.\n     * @param {number} [level = 4] If called without a level parameter the default is 4 (ERROR) level.\n     */\n    static disable() {\n        if (LDSDKLogger.isLoggerSet()) {\n            if (LDSDKLogger.logger.log) {\n                LDSDKLogger.logger.log('Disabled BLE SDK logger');\n            }\n        }\n        LDSDKLogger.setLevel(LDSDKLoggerLevel.DISABLED);\n        LDSDKLogger.logger = null;\n    }\n\n    /**\n     * Enable logging at the specified level and set a logger\n     * @param {number} [level = 4] If called without a level parameter the default is 4 (ERROR) level. See {@link LDSDKLoggerLevel} for valid level values.\n     * @param {object} [logger = console] If called without a logger parameter the default is to use the console.\n     */\n    static enable(level = LDSDKLoggerLevel.ERROR, logger = console) {\n        LDSDKLogger.setLevel(level);\n        LDSDKLogger.setLogger(logger);\n        if (LDSDKLogger.isLoggerSet()) {\n            if (LDSDKLogger.logger.log) {\n                LDSDKLogger.logger.log('Enabled BLE SDK logger - level: ' + level);\n            }\n        }\n        return LDSDKLogger.level;\n    }\n\n    /**\n     * Check if a logger has been set. If no logger set, nothing will be logged.\n     * @return {boolean}\n     */\n    static isLoggerSet() {\n        return (LDSDKLogger.logger && LDSDKLogger.logger !== null);\n    }\n\n    /**\n     * Check if TRACE level is enabled\n     * @return {boolean}\n     */\n    static isTraceEnabled() {\n        return LDSDKLogger.isLoggerSet() && LDSDKLogger.level <= LDSDKLoggerLevel.TRACE;\n    }\n\n    /**\n     * Check if DEBUG level is enabled\n     * @return {boolean}\n     */\n    static isDebugEnabled() {\n        return LDSDKLogger.isLoggerSet() && LDSDKLogger.level <= LDSDKLoggerLevel.DEBUG;\n    }\n\n    /**\n     * Check if INFO level is enabled\n     * @return {boolean}\n     */\n    static isInfoEnabled() {\n        return LDSDKLogger.isLoggerSet() && LDSDKLogger.level <= LDSDKLoggerLevel.INFO;\n    }\n\n    /**\n     * Check if WARN level is enabled\n     * @return {boolean}\n     */\n    static isWarnEnabled() {\n        return LDSDKLogger.isLoggerSet() && LDSDKLogger.level <= LDSDKLoggerLevel.WARN;\n    }\n\n    /**\n     * Check if ERROR level is enabled\n     * @return {boolean}\n     */\n    static isErrorEnabled() {\n        return LDSDKLogger.isLoggerSet() && LDSDKLogger.level <= LDSDKLoggerLevel.ERROR;\n    }\n\n    /**\n     * Check if the level is enabled. Level should be in the 0-4 range. Where 0 = TRACE and 4 = ERROR. See {@link LDSDKLoggerLevel} for valid values\n     * @param {number} level\n     */\n    static isLevelEnabled(level) {\n        return LDSDKLogger.isLoggerSet() && level >= LDSDKLogger.level && level <= LDSDKLogger.maxLevel;\n    }\n\n    /**\n     * @ignore\n     * Return a string representation of the time\n     * @return {string}\n     */\n    static getTime() {\n        const date = new Date();\n        const hours = LDSDKLogger.getFixedLengthString(date.getHours());\n        const minutes = LDSDKLogger.getFixedLengthString(date.getMinutes());\n        const seconds = LDSDKLogger.getFixedLengthString(date.getSeconds());\n        const millis = LDSDKLogger.getFixedLengthString(date.getMilliseconds(), 3);\n        // return `${hours}:${minutes}:${seconds}.${millis} :: `;\n        return `${hours}:${minutes}:${seconds}.${millis} :: LDSDK :: `;\n    }\n\n    /**\n     * @ignore\n     * @param val\n     * @param length\n     * @return {*}\n     */\n    static getFixedLengthString(val, length = 2) {\n        if ((val+'').length > length) return val;\n        return ('0'.repeat(length) + val).slice(-1*length);\n    }\n\n    /**\n     * Log a message at the error level - if the ERROR level is not enabled the call is ignored.\n     * @param {object|Array} args - The arguments to concatenate into a message\n     */\n    static error(...args) {\n        const level = 4;\n        if (!LDSDKLogger.isLoggerSet() || LDSDKLogger.level > level || LDSDKLogger.maxLevel < level) {\n            return;\n        }\n        const caller = LDSDKLogger.getTime();\n        LDSDKLogger.logger.error(caller + 'ERROR :: ' + LDSDKLogger.concatArgs(args));\n    }\n\n    /**\n     * Log a message at the warn level - if the WARN level is not enabled the call is ignored.\n     * @param {object|Array} args - The arguments to concatenate into a message\n     */\n    static warn(...args) {\n        const level = 3;\n        if (!LDSDKLogger.isLoggerSet() || LDSDKLogger.level > level || LDSDKLogger.maxLevel < level) {\n            return;\n        }\n        const caller = LDSDKLogger.getTime();\n        if (LDSDKLogger.logger.warn) {\n            LDSDKLogger.logger.warn(caller + 'WARN :: ' + LDSDKLogger.concatArgs(args));\n        } else LDSDKLogger.error(arguments);\n\n    }\n\n    /**\n     * Log a message at the info level - if the INFO level is not enabled the call is ignored.\n     * @param {object|Array} args - The arguments to concatenate into a message\n     */\n    static info(...args) {\n        const level = 2;\n        if (!LDSDKLogger.isLoggerSet() || LDSDKLogger.level > level || LDSDKLogger.maxLevel < level) {\n            return;\n        }\n        const caller = LDSDKLogger.getTime();\n        if (LDSDKLogger.logger.info) {\n            LDSDKLogger.logger.info(caller + 'INFO :: ' + LDSDKLogger.concatArgs(args));\n        } else LDSDKLogger.log(arguments);\n    }\n\n    /**\n     * Log a message at the level specified - if the level is not enabled the call is ignored.\n     * @param {number} level - The level to log the message at. See {@link LDSDKLoggerLevel} for valid values.\n     * @param {object|Array} args - The arguments to concatenate into a message\n     */\n    static logAtLevel(level, ...args) {\n        if (!LDSDKLogger.isLoggerSet() || LDSDKLogger.level > level || LDSDKLogger.maxLevel < level) {\n            return;\n        }\n        const caller = LDSDKLogger.getTime();\n        if (LDSDKLogger.logger.warn) {\n            LDSDKLogger.logger.warn(caller + 'INFO :: ' + LDSDKLogger.concatArgs(args));\n        } else LDSDKLogger.log(arguments);\n    }\n\n    /**\n     * Log a message at the debug level - if DEBUG level is not enabled the call is ignored.\n     * @param {object|Array} args - The arguments to concatenate into a message\n     */\n    static debug(...args) {\n        const level = 1;\n        if (!LDSDKLogger.isLoggerSet() || LDSDKLogger.level > level || LDSDKLogger.maxLevel < level) {\n            return;\n        }\n        const caller = LDSDKLogger.getTime();\n        if (LDSDKLogger.logger.debug) {\n            LDSDKLogger.logger.debug(caller + 'DEBUG :: ' + LDSDKLogger.concatArgs(args));\n        }\n        else {\n            // console.log('no debug method: ', args);\n            LDSDKLogger.log(caller, arguments);\n        }\n\n    }\n\n    /**\n     * Log a message at the trace level - if TRACE level is not enabled the call is ignored.\n     * @param {object|Array} args - The arguments to concatenate into a message\n     */\n    static trace(...args) {\n        const level = 0;\n        if (!LDSDKLogger.isLoggerSet() || LDSDKLogger.level > level || LDSDKLogger.maxLevel < level) {\n            return;\n        }\n        const caller = LDSDKLogger.getTime();\n        if (LDSDKLogger.logger.debug) {\n            LDSDKLogger.logger.debug(caller + 'TRACE :: ' + LDSDKLogger.concatArgs(args));\n        }\n        else {\n            // console.log('no trace method: ', args);\n            LDSDKLogger.log(caller, arguments);\n        }\n\n    }\n\n    /**\n     * Log a message\n     * @param caller - The caller to use as message prefix - if not set the time is used as prefix for the message\n     * @param {object|Array} args - The arguments to log\n     */\n    static log(caller = null, ...args) {\n        if (!LDSDKLogger.isLoggerSet()) {\n            return;\n        }\n        if (caller === null) {\n            caller = LDSDKLogger.getTime();\n        }\n        if (LDSDKLogger.logger.log) {\n            LDSDKLogger.logger.log(caller + 'LOG :: ' + LDSDKLogger.concatArgs(arguments, 1));\n        }\n    }\n\n    /**\n     * @ignore\n     * Get a message to print by the logger\n     *\n     * @param {object|Array} args - The arguments to log\n     * @param {number} [offset = 0] - The number of arguments to skip - by default no arguments are skipped\n     * @param {string} [separator = ' '] The separator to use between the args - by default a space is used\n     * @return {string}\n     */\n    static concatArgs(args, offset = 0, separator = ' ') {\n\n        let message = '';\n        for (let i = offset; i < args.length; i++) {\n            if (i > offset) {\n                message += separator;\n            }\n            const type = typeof args[i];\n            if (args[i] !== null) {\n                if (type === 'object') {\n                    const o = {};\n                    o.o = args[i];\n                    let cache = [];\n                    if (args[i].hasOwnProperty('toString') && typeof args[i].toString === 'function') {\n                        message += args[i].toString();\n                    } else {\n                        // message += JSON.stringify(args[i]);\n                        message += JSON.stringify(o, function(key, value) {\n                            if (typeof value === 'object' && value !== null) {\n                                if (cache.indexOf(value) !== -1) {\n                                    // Circular reference found, ignore key\n                                    return;\n                                }\n                                // Store value in our collection\n                                cache.push(value);\n                            }\n                            return value;\n                        }, '\\t');\n                    }\n                    cache = null;\n\n                } else {\n                    message += args[i];\n                }\n            } else {\n                message += 'null';\n            }\n        }\n\n        return message;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/LDSDKLogger.js","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_core.js\n// module id = 4\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/get-prototype-of\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/get-prototype-of.js\n// module id = 5\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _create = require(\"../core-js/object/create\");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(superClass)));\n  }\n\n  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/inherits.js\n// module id = 6\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/possibleConstructorReturn.js\n// module id = 7\n// module chunks = 0","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_wks.js\n// module id = 8\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/map\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/map.js\n// module id = 9\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_global.js\n// module id = 10\n// module chunks = 0","import DeviceServiceDefinition from '../service_definitions/DeviceServiceDefinition';\nimport LDSDKLogger from './LDSDKLogger';\n/**\n * Created by frj on 20/02/16.\n * @ignore Internal use only\n */\nexport default class UuidHelper {\n    static getLegoUuid(shorthandUuid) {\n        const legoGattPostfix = '-1212-efde-1523-785feabcd123';\n        return (('00000000' + shorthandUuid).substring(shorthandUuid.length) + legoGattPostfix).toLowerCase();\n    };\n\n    static getSpecUuid(shorthandUuid) {\n        const specGattPostfix = '-0000-1000-8000-00805f9b34fb';\n        return (('00000000' + shorthandUuid).substring(shorthandUuid.length) + specGattPostfix).toLowerCase();\n    };\n\n    static isLEGODevice(wrappedDevice) {\n        return wrappedDevice.getUuids() && wrappedDevice.getUuids().indexOf(DeviceServiceDefinition.getInstance().getServiceUUID()) >= 0;\n    }\n\n    static getUuid(characteristicOrService = {}) {\n        if (characteristicOrService && characteristicOrService !== null && characteristicOrService.hasOwnProperty('uuid')) {\n            return characteristicOrService.uuid;\n        }\n        if (LDSDKLogger.isTraceEnabled()) {\n            LDSDKLogger.trace('Param to get uuid field from was not set');\n        }\n        return null;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/UuidHelper.js","module.exports = { \"default\": require(\"core-js/library/fn/promise\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/promise.js\n// module id = 12\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _promise = require(\"../core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new _promise2.default(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return _promise2.default.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/asyncToGenerator.js\n// module id = 13\n// module chunks = 0","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/regenerator/index.js\n// module id = 14\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_descriptors.js\n// module id = 15\n// module chunks = 0","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_export.js\n// module id = 16\n// module chunks = 0","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-dp.js\n// module id = 17\n// module chunks = 0","/**\n * Created by frj on 15/02/16.\n */\n\n// 'use strict';\n\nimport { InputFormatUnit } from '../InputFormat';\nimport LDSDKLogger from '../../helpers/LDSDKLogger';\nimport * as LDSDKError from '../../helpers/LDSDKError';\nimport LegoServiceCallbackHelper from './LegoServiceCallbackHelper';\nimport ArrayHelper from '../../helpers/ArrayHelper';\n\n/**\n * Base class for the different LegoService implementations\n * @abstract - Don't instantiate this class directly - use one of the inheriting classes.\n */\nexport default class LegoService {\n\n    /**\n     * @private\n     * @type {LegoServiceCallbackHelper}\n     */\n    callbackHelper = new LegoServiceCallbackHelper();\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    ioCallbackListenerId = null;\n\n    /**\n     * @private\n     * @type {InputFormat|null}\n     */\n    _inputFormat = null;\n\n    /**\n     *\n     * @type {DataFormat|null}\n     * @private\n     */\n    _dataFormat = null;\n\n    /**\n     * @private\n     * @param {InputFormat} newInputFormat - The inputformat to set for the service. Setting inputformat will automatically update the dataFormat also.\n     */\n    set inputFormat(newInputFormat) {\n        this._inputFormat = newInputFormat;\n        this._dataFormat = this.dataFormatForInputFormat(newInputFormat);\n    }\n\n    /**\n     * @private\n     * @type {InputFormat}\n     */\n    get inputFormat() {\n        return this._inputFormat;\n    }\n\n    set valueData(valueData) {\n        this._valueData = valueData;\n        this._cachedNumberFromValueData = null;\n    }\n\n    get valueData() {\n        return this._valueData;\n    }\n\n    /**\n     * @abstract\n     * @param {ConnectInfo} connectInfo - The connectinfo for the service\n     * @param {BluetoothIO} io - The bluetoothIO instance being used by the service\n     */\n    constructor(connectInfo, io) {\n        if (io === undefined || io === null) {\n            throw new Error('IO must be set');\n        }\n        /**\n         * @private\n         * @type {number}\n         */\n        this.FIRST_INTERNAL_HUB_INDEX = 50;\n\n        /**\n         * @private\n         * @type {ConnectInfo}\n         */\n        this.connectInfo = connectInfo;\n\n        /**\n         * @private\n         * @type {BluetoothIO}\n         */\n        this.io = io;\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this.ioCallbackListenerId = this.io.registerCallbackListener(this);\n        /**\n         * @private\n         * @type {LegoBluetoothDeviceImpl}\n         */\n        this.device = null;\n\n        /**\n         * @private\n         * @type {ArrayBuffer}\n         */\n        this.valueData = null;\n\n        /**\n         * @private\n         * @type {Array<DataFormat>}\n         */\n        this.validDataFormats = [];\n    }\n\n    /**\n     * @private\n     * @param {ConnectInfo} connectInfo - The connectinfo for the service\n     * @param {BluetoothIO} io - The bluetoothIO instance being used by the service\n     * @return {LegoService}\n     */\n    static createService(connectInfo, io) {\n        return new LegoService(connectInfo, io);\n    }\n\n    /**\n     * @private\n     * Set the device that the service is connected to\n     * @param {LegoBluetoothDeviceImpl} legoDevice\n     */\n    setDevice(legoDevice) {\n        this.device = legoDevice;\n    }\n\n    /**\n     * Get the Lego device the sensor is connected to\n     * @return {LegoBluetoothDeviceImpl}\n     */\n    getDevice() {\n        return this.device;\n    }\n\n    /**\n     * Get the ConnectInfo for the service\n     * @return {ConnectInfo|*}\n     */\n    getConnectInfo() {\n        return this.connectInfo;\n    }\n\n    /**\n     * @private\n     * Get the Bluetooth IO - should not be used for anything by clients\n     * @return {BluetoothIO|*}\n     */\n    getIo() {\n        return this.io;\n    }\n\n    /**\n     * Check if a service is internal or an external\n     * @return {boolean}\n     */\n    isInternalService() {\n        return this.connectInfo.getHubIndex() >= this.FIRST_INTERNAL_HUB_INDEX;\n    }\n\n    /**\n     * Get the Connect Info for the service\n     * @param {BluetoothIO} io\n     * @return {ConnectInfo}\n     */\n    didRequestConnectInfo(io) {\n        return this.connectInfo;\n    }\n\n    /**\n     * @private\n     * Verify if the data is valid for the service using the inputformat that has been set\n     * @param {DataBuffer} dataBuffer\n     */\n    verifyData(dataBuffer = null) {\n        /**\n         *  No data is always ok\n         *  No InputDataFormats defined - means that all received data is accepted\n         */\n        if (dataBuffer !== null && this.validDataFormats !== undefined && this.validDataFormats.length !== 0) {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.debug( this.getServiceName() + ' verifyData ' + new Int8Array(dataBuffer));\n            }\n            /**\n             * If one or more InputDataFormats are defined, we look at the latest received InputFormat from the device\n             * For a received value to be accepted, there:\n             * 1. Must exists a DataFormat that matches the latest received InputFormat from device\n             * 2. The received valueData length must match this DataFormat */\n            const dataFormat = this.dataFormatForInputFormat(this.inputFormat);\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.debug( this.getServiceName() + ' dataFormat ' + (dataFormat !== null ? dataFormat.toString() : 'null'));\n            }\n            if (dataFormat === null) {\n                const msg = this.getServiceName() + ' Did not find a valid input data format.\\nThe input format' +\n                ' received from device' +\n                ' is:' + this.inputFormat.toString() +\n                        '\\nSupported formats: ' + this.validDataFormats.toString();\n                LDSDKLogger.error(msg);\n                throw new Error(msg, LDSDKError.ErrorCode.INTERNAL_ERROR);\n            }\n            this.verifyDataForDataFormat(dataBuffer, dataFormat);\n        }\n    }\n\n    /**\n     * @private\n     * Verify the data for a specific data format\n     * @param {DataBuffer} dataBuffer\n     * @param {DataFormat} dataFormat\n     */\n    verifyDataForDataFormat(dataBuffer, dataFormat) {\n        if (!(dataBuffer.byteLength === (dataFormat.getDataSetSize() * dataFormat.getDataSetCount()))) {\n            const msg = 'Value for service ' + this.getServiceName() + ' in mode ' + dataFormat.getModeName() + ' unit ' + dataFormat.getUnit() + ' is expected to have' +\n                    ' ' + dataFormat.getDataSetCount() + ' data sets each' +\n                    ' with size ' + dataFormat.getDataSetSize() + ' bytes, but did receive package with' +\n                    ' length ' + dataBuffer.byteLength;\n            if (LDSDKLogger.isErrorEnabled()) {\n                LDSDKLogger.error(msg);\n            }\n            throw new Error(msg, LDSDKError.ErrorCode.INTERNAL_ERROR);\n        }\n    }\n\n    /**\n     * @private\n     * Get the DataFormat for the given InputFormat or null if no dataformat matching the input format is found\n     * @param {InputFormat} inputFormat\n     * @return {DataFormat|null}\n     */\n    dataFormatForInputFormat(inputFormat = null) {\n        if (inputFormat !== null) {\n            for (let i = 0; i < this.validDataFormats.length; i++) {\n                const dataFormat = this.validDataFormats[i];\n                if (dataFormat.getMode() === inputFormat.getMode() && dataFormat.getUnit() === inputFormat.getUnit()) {\n                    if (typeof inputFormat.getNumberOfBytes() !== 'undefined' && (dataFormat.getDataSetSize() * dataFormat.getDataSetCount()) !== inputFormat.getNumberOfBytes()) {\n                        LDSDKLogger.error(\n                                this.getServiceName() + ' in mode ' + dataFormat.getModeName() + ' (' + dataFormat.getUnit() + '): expected data' +\n                                ' length is ' + dataFormat.getDataSetCount() + ' data sets of ' + dataFormat.getDataSetSize() + ' bytes' +\n                                ' input format received from device says ' + inputFormat.getNumberOfBytes() + ' number of bytes'\n                        );\n                        return null;\n                    }\n                    if (LDSDKLogger.isTraceEnabled()) {\n                        LDSDKLogger.debug(`${this.getServiceName()} got ${dataFormat.toString()} for ${inputFormat.toString()}`);\n                    }\n                    return dataFormat;\n                }\n            }\n        }\n        return null;\n    }\n\n    // Abstract functions that classes inheriting from LegoService should override\n\n    /**\n     * @abstract\n     * Get the service name for the service\n     * @return {string}\n     */\n    getServiceName() {\n        return 'Undefined';\n    }\n\n    /**\n     * Get the default input format stored for the service\n     * @return {null|InputFormat}\n     */\n    getDefaultInputFormat() {\n        return null;\n    }\n\n    /**\n     * Return the active input format stored for the service\n     * @return {null|InputFormat} Returns null if no input format has been set, otherwise the active input format is returned\n     */\n    getInputFormat() {\n        return this.inputFormat;\n    }\n\n    /**\n     * Update the active input format for the service\n     * @param {InputFormat} newFormat - the new input format to set\n     */\n    updateInputFormat(newFormat) {\n        if (newFormat && newFormat !== null &&\n                (newFormat.getConnectId() !== this.getConnectInfo().getConnectId() || newFormat.getType() !== this.getConnectInfo().getTypeEnum())\n        ) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Ignoring updateInputFormat call with inputFormat:', newFormat, 'It does not match' +\n                                 ' the connectId or type of this service. \"'+ this.getServiceName() +'\" ConnectId: ' + this.getConnectInfo().getConnectId() +', Type: ' + this.getConnectInfo().getTypeEnum());\n            }\n            return;\n        } else {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('updateInputFormat :: ' + this.toString() + ' :: newFormat: ' + newFormat.toString());\n            }\n        }\n        this.io.writeInputFormat(newFormat, this.connectInfo.getConnectId());\n    }\n\n    /**\n     * Get the mode for the current input format. If no input format has been set the default input format (if such a format exists for the service) is used.\n     *\n     * If neither an input format is set and no default input format is available for the service, 0 is returned.\n     * @return {number}\n     */\n    getInputFormatMode() {\n        if (this.getInputFormat() !== null) {\n            return this.getInputFormat().getMode();\n        } else if (this.getDefaultInputFormat() !== null) {\n            return this.getDefaultInputFormat().getMode();\n        }\n        if (LDSDKLogger.isErrorEnabled()) {\n            LDSDKLogger.error(this.getServiceName() + ' No input format set, returning mode 0');\n        }\n        return 0;\n    }\n\n    /**\n     * Update the current input format with a new mode\n     * @param {number} newMode\n     */\n    updateCurrentInputFormatWithNewMode(newMode) {\n        if (this.getInputFormat() !== null) {\n            this.updateInputFormat(this.getInputFormat().inputFormatBySettingMode(newMode));\n        }\n        else if (this.getDefaultInputFormat() !== null) {\n            this.updateInputFormat(this.getDefaultInputFormat().inputFormatBySettingMode(newMode));\n        } else {\n            if (LDSDKLogger.isErrorEnabled()) {\n                LDSDKLogger.error(this.getServiceName() + ' Tried to update input format with new mode, but no current inputFormat or defaultInputFormat is' +\n                                  ' set');\n            }\n        }\n    }\n\n    /**\n     * Get the array of valid data formats for the service. The array can have length 0 if no data formats has been set for the service.\n     * @see {@link addValidDataFormat}\n     * @return {Array<DataFormat>}\n     */\n    getValidDataFormats() {\n        return this.validDataFormats;\n    }\n\n    /**\n     * Add a valid data format for the service.\n     * @param {DataFormat} dataFormat\n     */\n    addValidDataFormat(dataFormat) {\n\n        // assert dataFormat != null : 'DataFormat cannot be null';\n\n        if (this.validDataFormats === null || this.validDataFormats === undefined) {\n            this.validDataFormats = [];\n        }\n        this.validDataFormats.push(dataFormat);\n    }\n\n    /**\n     * Remove a data format from the array of valid data formats\n     * @param {DataFormat} dataFormat\n     */\n    removeValidDataFormat(dataFormat) {\n    // assert dataFormat != null : 'DateFormat cannot be null';\n\n        if (this.validDataFormats === null || this.validDataFormats === undefined) {\n            return;\n        }\n        const indexOf = this.validDataFormats.indexOf(dataFormat);\n        if (indexOf >= 0) {\n            this.validDataFormats.splice(indexOf, 1);\n        }\n\n    }\n\n    /**\n     * Get the value data for the service as a typed array or null if no valueData has been set.\n     * @return {ArrayBuffer<number>|null}\n     */\n    getValueData() {\n        return (!this.valueData || this.valueData === null) ? null : this.valueData.slice();\n    }\n\n    /**\n     * Get the numeric value for the value data or null if the number could not be parsed from the the value data\n     * @param {ArrayBuffer<number>} data\n     * @return {number|null}\n     */\n    getNumberFromValueData(data = null) {\n        let dataset = data;\n        if (data === null) {\n            // getNumberFrom this.valueData - check if we have a cached number and use that\n            if (this._cachedNumberFromValueData !== null) {\n                return this._cachedNumberFromValueData;\n            }\n            dataset = this.valueData;\n        }\n        const valuesAsNumbers = this.getNumbersFromValueDataSet(dataset);\n        if (valuesAsNumbers === null) {\n            return null;\n        }\n\n        if (valuesAsNumbers.length !== 1) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Cannot get value from service '+ this.getServiceName() +' as as a number, the active data' +\n                                 ' format is ' + this.dataFormatForInputFormat(this.inputFormat));\n            }\n            return null;\n        }\n\n        if (data === null) {\n            // Value is calculated for this.valueData - we can cache it until this.valueData is updated\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.debug('Calculated new getNumberFromValueData for this.valueData - caching value: ' + valuesAsNumbers[0]);\n            }\n            this._cachedNumberFromValueData = valuesAsNumbers[0];\n        }\n\n        return valuesAsNumbers[0];\n    }\n\n    /**\n     * Get an array of numbers from the value data set or null if no numbers could be parsed\n     * @param {ArrayBuffer} [dataSet=null]\n     * @return {Array<number>|null}\n     */\n    getNumbersFromValueDataSet(dataSet = null) {\n\n        if (dataSet === null) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info(this.getServiceName() + ' getNumbersFromValueDataSet - dataSet is null - returning null');\n            }\n\n            return null;\n        }\n        const dataFormat = this._dataFormat;\n        if (dataFormat === null) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info(this.getServiceName() + ' getNumbersFromValueDataSet - dataFormat is null -' +\n                                 ' inputFormat: ' + this.inputFormat + ' - returning null');\n            }\n            return null;\n        }\n\n        try {\n            this.verifyDataForDataFormat(dataSet, dataFormat);\n            const results = [];\n            for (let i = 0; i < dataFormat.getDataSetCount(); ++i) {\n                const currentIndex = i * dataFormat.getDataSetSize();\n                const dataSetBytes = dataSet.slice(currentIndex, currentIndex+dataFormat.getDataSetSize());\n\n                if (dataFormat.getUnit() === InputFormatUnit.RAW || dataFormat.getUnit() === InputFormatUnit.PERCENTAGE) {\n                    results.push(this.getIntegerFromData(dataSetBytes));\n                } else {\n                    results.push(this.getFloatFromData(dataSetBytes));\n                }\n            }\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.getServiceName() + ' getNumbersFromValueDataSet returning ' + results.length + ' values: ' + results);\n            }\n           return results;\n        } catch (ldsdkError) {\n            LDSDKLogger.error(this.getServiceName() + ' - getNumbersFromValueDataSet failed: ' + ldsdkError);\n            return null;\n        }\n    }\n\n    /**\n     * Get a float numeric value from the typed array buffer\n     * @param {ArrayBuffer} dataBuffer\n     * @return {number}\n     */\n    getFloatFromData(dataBuffer) {\n        if (!dataBuffer || dataBuffer === null) {\n            return 0.0;\n        }\n        const data = new DataView(dataBuffer);\n        if (data.byteLength > 4) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('getFloatFromData Buffer is too big - expected 4 bytes - got ' + dataBuffer.byteLength + ' - cannot be' +\n                                 ' parsed as float32 - raw values: ' + new Int8Array(data.buffer));\n            }\n            return 0;\n        } else if (data.byteLength % 4 !== 0) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('getFloatFromData Buffer has wrong size - ' + dataBuffer.byteLength + ' - cannot be' +\n                                 ' parsed as float32' +\n                                 ' (maybe you are using the wrong dataformat?) - falling back to parsing value as int');\n            }\n            return this.getIntegerFromData(dataBuffer);\n        }\n        return data.getFloat32(0, true);\n    }\n\n    /**\n     * Get an integer numeric value from the typed array buffer\n     * @param {ArrayBuffer} dataBuffer\n     * @return {number}\n     */\n    getIntegerFromData(dataBuffer) {\n        if (!dataBuffer || dataBuffer === null) {\n            return 0;\n        }\n\n        const data = new DataView(dataBuffer);\n\n        if (data.byteLength === 1) {\n            return data.getInt8(0);\n        } else if (data.byteLength === 2) {\n            return data.getInt16(0, true);\n        } else if (data.byteLength === 4) {\n            return data.getInt32(0, true);\n        } else {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Cannot parse service value '+ new Int8Array(data.buffer) +' as signed int, data with' +\n                                 ' size '+data.byteLength+' too big');\n            }\n            return 0;\n        }\n    }\n\n    /**\n     * Helper method - get the integer value of the current valueData\n     * @return {number}\n     */\n    getValueAsInteger() {\n        return this.getIntegerFromData(this.valueData);\n    }\n\n    /**\n     * Helper method - get the float value of the current valueData\n     * @return {number}\n     */\n    getValueAsFloat() {\n        return this.getFloatFromData(this.valueData);\n    }\n\n    /**\n     * Send a read value request for this service to the hub.\n     *\n     * The response will be sent using the registered callback handler.\n     *\n     * @see {@link LegoServiceCallbackHelper#registerCallbackListener}\n     */\n    sendReadValueRequest() {\n        this.io.readValueForConnectId(this.connectInfo.getConnectId());\n    }\n\n    /**\n     * Send a reset state request for this service to the hub\n     */\n    sendResetStateRequest() {\n        this.io.resetStateForConnectId(this.connectInfo.getConnectId());\n    }\n\n    /**\n     * @ignore\n     * Write data to this service on the hub\n     * @param {TypedArray} data\n     */\n    writeData(data) {\n        this.io.writeData(data, this.inputFormat.getConnectId());\n    }\n\n    /**\n     * @ignore\n     *\n     * @param {BluetoothIO} io\n     * @param {InputFormat} inputFormat\n     */\n    didReceiveInputFormat(io, inputFormat) {\n        if (this.inputFormat === null || !this.inputFormat.equals(inputFormat)) {\n            this.handleUpdatedInputFormat(inputFormat);\n        }\n    }\n\n    /**\n     * @ignore\n     *\n     * Handle the updated input format - ignores that format if it is does not match this service type or its connect id\n     * @param {InputFormat} inputFormat\n     */\n    handleUpdatedInputFormat(inputFormat) {\n        if (inputFormat && inputFormat !== null &&\n                (inputFormat.getType() !== this.getConnectInfo().getTypeEnum() || inputFormat.getConnectId() !== this.getConnectInfo().getConnectId())\n        ) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Ignoring updateInputFormat call with inputFormat:', inputFormat, 'It does not match' +\n                                 ' the connectId or type of this service. \"'+ this.getServiceName() +'\" ConnectId: ' + this.getConnectInfo().getConnectId() +', Type: ' + this.getConnectInfo().getTypeEnum());\n            }\n            return;\n        }\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('handleUpdatedInputFormat - performDidUpdateInputFormatCallback - sendReadValueRequest');\n        }\n        const oldFormat = this.inputFormat;\n        this.inputFormat = inputFormat;\n\n        this.callbackHelper.performDidUpdateInputFormatCallback(this, oldFormat, this.inputFormat);\n\n        // After having received a new input format, we want the newest update value according to that format\n        this.sendReadValueRequest();\n    }\n\n    /**\n     * @ignore\n     *\n     * @param {BluetoothIO} io\n     * @param {ArrayBuffer} valueData\n     */\n    didReceiveValueData(io, valueData) {\n        const inputFormat = this.getInputFormat();\n        if (inputFormat && inputFormat !== null && inputFormat.get)\n        if (LDSDKLogger.isTraceEnabled()) {\n            LDSDKLogger.trace(this.getServiceName() + ' didReceiveValueData called with args. ValueData: ' + new Int8Array(valueData) + ', this.inputFormat: ' + (this.inputFormat !== null ? this.inputFormat.toString() : 'null'));\n        }\n        if (this.inputFormat !== null && valueData !== null && !ArrayHelper.isArrayBuffersEqual(this.valueData, valueData)) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('didReceiveValueData for ' + this.getServiceName() + ' received updated valueData: ' + this.getArrayBufferString(valueData) + ', old valueData: ' + this.getArrayBufferString(this.valueData));\n            }\n            this.handleUpdatedValueData(valueData);\n        }\n    }\n\n    /**\n     * @ignore\n     *\n     */\n    getArrayBufferString(buffer = null) {\n        return buffer && buffer !== null ? '[' + new Int8Array(buffer).toString() + ']' : 'null';\n    }\n\n    /**\n     * Handle the updated value received from the service.\n     * @param {ArrayBuffer} valueData\n     */\n    handleUpdatedValueData(valueData = null) {\n        try {\n            this.verifyData(valueData); // Throws Error if unable to verify data\n        } catch (e) {\n            LDSDKLogger.error(this.getServiceName() + ' handleUpdatedValueData - verify failed: ' + e);\n        }\n        const oldData = this.valueData;\n        try {\n            this.valueData = valueData.slice();\n        } catch (e) {\n            LDSDKLogger.error(this.getServiceName() + ' handleUpdatedValueData - valueData.slice failed: ' + e);\n        }\n        this.callbackHelper.performDidUpdateValueDataCallback(this, oldData, this.valueData);\n    }\n\n    /**\n     * Registers a listener that will receive callbacks about service values\n     * @param {object} listener - An object with functions that can be called to signal value updates, inputformat\n     * changes etc.\n     * @return {string} Returns the Id of the registered listener. This id is needed if you want to unregister for\n     * service calls\n     */\n    registerCallbackListener(listener) {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Registering callback listener for service: ' + this.getServiceName() + ' on device: ' + this.getDevice());\n        }\n        return this.callbackHelper.registerCallbackListener(listener);\n    }\n\n    /**\n     * Unregisters a listener so no further callbacks about service values will be sent\n     * @param {string} listenerId\n     * @return {boolean} Indicating whether a listener was unregistered\n     */\n    unregisterCallbackListener(listenerId) {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Unregistering callback listener for service: ' + this.getServiceName() + ' on device:' +\n                              ' ' + this.getDevice());\n        }\n        return this.callbackHelper.unregisterCallbackListener(listenerId);\n    }\n\n    /**\n     * Check if it is the same service - by checking the connectInfo\n     * @param {LegoService} o - A service instance to compare to the current instance\n     * @return {boolean}\n     */\n    equals(o) {\n        if (this === o) return true;\n        if (o === null || this.constructor.name !== o.constructor.name) {\n            return false;\n        }\n\n        if (this.connectInfo !== null ? !this.connectInfo.equals(o.connectInfo) : o.connectInfo !== null) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Get a string with details about the service - can be used for logging\n     * @return {string}\n     */\n    toString() {\n        return this.constructor.name + '[ ' + this.getServiceName() + ', ' + this.getConnectInfo().toString() + ', ' + (this.getInputFormat() !== null ? this.getInputFormat().toString() : 'InputFormat: null') + ', callbackHelper listeners: ' + this.callbackHelper.callbackListeners.size + ' ]';\n    }\n\n    /**\n     * Get a simple service representation\n     *\n     * @return {{deviceId: string, isInternalService: boolean, serviceName: string, serviceData: ({}|*), numberValue: number, updateInputFormat: simpleService.updateInputFormat, handleUpdatedInputFormat: simpleService.handleUpdatedInputFormat}}\n     */\n    getSimpleService() {\n        const self = this;\n        const simpleService = {\n            deviceId: this.getDevice().getDeviceId(),\n            isInternalService: this.isInternalService(),\n            serviceName: this.getServiceName(),\n            serviceData: this.getSimpleServiceData(),\n            numberValue: this.getNumberFromValueData(),\n            updateInputFormat: function(newFormat) {\n                self.updateInputFormat(newFormat);\n            },\n            handleUpdatedInputFormat: function(inputFormat) {\n                self.handleUpdatedInputFormat(inputFormat);\n            }\n        };\n        const defaultInputFormat = this.getDefaultInputFormat();\n        if (defaultInputFormat && defaultInputFormat !== null) {\n            simpleService['defaultInputFormat'] = this.getDefaultInputFormat().getSimpleInputFormat();\n        }\n\n        const inputFormat = this.getInputFormat();\n        if (inputFormat && inputFormat !== null) {\n            simpleService['inputFormat'] = this.getInputFormat().getSimpleInputFormat();\n        }\n\n        const connectInfo = this.getConnectInfo();\n        if (connectInfo && connectInfo !== null) {\n            simpleService['connectInfo'] = connectInfo.getSimpleConnectInfo();\n        }\n        return simpleService;\n    }\n\n    /**\n     * Get the simple service data - this function should be overridden by the service implementations that have\n     * data to return.\n     * @return {object}\n     */\n    getSimpleServiceData() {\n        return {};\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/services/LegoService.js","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/json/stringify.js\n// module id = 19\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_an-object.js\n// module id = 20\n// module chunks = 0","/**\n * Created by frj on 19/02/16.\n */\n\nimport LDSDKLogger from './LDSDKLogger';\n\n/**\n * @ignore Internal use only\n */\nexport default class StringUtils {\n\n    static toUtf8Bytes(str) {\n        const utf8 = [];\n        for (let i=0; i < str.length; i++) {\n            let charcode = str.charCodeAt(i);\n            if (charcode < 0x80) utf8.push(charcode);\n            else if (charcode < 0x800) {\n                utf8.push(0xc0 | (charcode >> 6),\n                          0x80 | (charcode & 0x3f));\n            }\n            else if (charcode < 0xd800 || charcode >= 0xe000) {\n                utf8.push(0xe0 | (charcode >> 12),\n                          0x80 | ((charcode>>6) & 0x3f),\n                          0x80 | (charcode & 0x3f));\n            }\n            // surrogate pair\n            else {\n                i++;\n                // UTF-16 encodes 0x10000-0x10FFFF by\n                // subtracting 0x10000 and splitting the\n                // 20 bits of 0x0-0xFFFFF into two halves\n                charcode = 0x10000 + (((charcode & 0x3ff)<<10)\n                        | (str.charCodeAt(i) & 0x3ff));\n                utf8.push(0xf0 | (charcode >>18),\n                          0x80 | ((charcode>>12) & 0x3f),\n                          0x80 | ((charcode>>6) & 0x3f),\n                          0x80 | (charcode & 0x3f));\n            }\n        }\n        return utf8;\n    }\n\n    static toUtf8BytesOld(str) {\n        const utf8 = unescape(encodeURIComponent(str));\n\n        const arr = [];\n        for (let i = 0; i < utf8.length; i++) {\n            arr.push(utf8.charCodeAt(i));\n        }\n        return arr;\n    }\n\n    static decodeUtf8(arrayBuffer) {\n        let result = '';\n        let i = 0;\n        let c = 0;\n        // const c1 = 0;\n        let c2 = 0;\n\n        const data = new Uint8Array(arrayBuffer);\n\n        // Skip BOM if it is there\n        if (data.length >= 3 && data[0] === 0xef && data[1] === 0xbb && data[2] === 0xbf) {\n            i = 3;\n        }\n\n        while (i < data.length) {\n            c = data[i];\n\n            if (c < 128) {\n                result += String.fromCharCode(c);\n                i++;\n            } else if (c > 191 && c < 224) {\n                if( i+1 >= data.length ) {\n                    throw 'UTF-8 Decode failed. Two byte character was truncated.';\n                }\n                c2 = data[i+1];\n                result += String.fromCharCode( ((c&31)<<6) | (c2&63) );\n                i += 2;\n            } else {\n                if (i+2 >= data.length) {\n                    throw 'UTF-8 Decode failed. Multi byte character was truncated.';\n                }\n                c2 = data[i+1];\n                c3 = data[i+2];\n                result += String.fromCharCode( ((c&15)<<12) | ((c2&63)<<6) | (c3&63) );\n                i += 3;\n            }\n        }\n        return result;\n    }\n\n    static asBoolean(param) {\n        if (typeof param === 'boolean') {\n            return param;\n        } else if (typeof param === 'string') {\n            return param.toLowerCase() === 'true';\n        } else {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Param is not parseable as a boolean. Param type: ' + (typeof param) + ' param' +\n                                  ' value: ', param , ' returning false');\n            }\n            return false;\n        }\n    }\n\n    /**\n     * Get a loggable string representation of a characteristic\n     * @param {NativeCharacteristic} characteristic\n     * @param {ArrayBuffer|null} [value=null]\n     * @return {string}\n     */\n    static getCharacteristicString(characteristic, value = null) {\n        let valueString = '';\n        if (characteristic && characteristic !== null) {\n            if (characteristic.value === null || characteristic.value === undefined) {\n                if (value !== null) {\n                    valueString = ', Value: ' + new Int8Array(value);\n                }\n            } else {\n                valueString = ', Value: ' + new Int8Array(characteristic.value);\n            }\n        } else {\n            if (value !== null) {\n                valueString = ' (null characteristic) Value: ' + new Int8Array(value);\n            }\n        }\n        return `Characteristic[ ${this.getInstanceString(characteristic)}${valueString} ]`;\n    }\n\n    /**\n     * Get a loggable string representation of a characteristic or service\n     * @param {NativeCharacteristic|NativeService} characteristicOrService\n     * @return {string}\n     */\n    static getInstanceString(characteristicOrService) {\n        let uuidStr = '', instanceIdStr = '';\n        if (characteristicOrService !== undefined && characteristicOrService !== null) {\n            if (characteristicOrService.uuid) {\n                uuidStr = `uuid: ${characteristicOrService.uuid}`;\n            }\n            if (characteristicOrService.instanceId) {\n                instanceIdStr = `instanceId: ${characteristicOrService.instanceId}`;\n            }\n        }\n\n        if (uuidStr !== '' && instanceIdStr !== '') {\n            return `${uuidStr}, ${instanceIdStr}`;\n        } else if (uuidStr !== '' && instanceIdStr === '') {\n            return `${uuidStr}`;\n        } else if (uuidStr === '' && instanceIdStr !== '') {\n            return `${instanceIdStr}`;\n        }\n\n        return '';\n    }\n\n    /**\n     *\n     * @param {LegoBluetoothDeviceImpl} device\n     * @return {string}\n     */\n    static getDeviceString(device) {\n        return device.getName() + ' ['+device.getAddress()+']';\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/StringUtils.js","import LDSDKLogger from '../helpers/LDSDKLogger';\nimport {IOType} from '../device/ConnectInfo';\n/**\n * Created by frj on 11/02/16.\n */\n\n/**\n *\n * @type {object} InputFormatUnit\n * @property {number} RAW\n * @property {number} PERCENTAGE\n * @property {number} SI\n * @property {number} UNKNOWN\n */\nexport const InputFormatUnit = {\n    RAW: 0,\n\n    PERCENTAGE: 1,\n\n    SI: 2,\n\n    UNKNOWN: 3,\n\n    /**\n     * Helper for getting the enum  - if the value is not one of the supported values - UNKNOWN is\n     * returned\n     * @param {number} val\n     * @return {number}\n     */\n    fromInteger: function (val) {\n        switch (parseInt(val)) {\n            case 0:\n                return this.RAW;\n            case 1:\n                return this.PERCENTAGE;\n            case 2:\n                return this.SI;\n            case 3:\n                return this.UNKNOWN;\n            default:\n            {\n                throw new Error('Unknown InputFormatUnit value \\'' + val + '\\'');\n            }\n        }\n    }\n};\n\n\nexport default class InputFormat {\n\n    static INPUT_FORMAT_PACKAGE_SIZE = 11;\n    static FORMAT_DATA_SIZE = 8;\n\n    /**\n     *\n     * @param {number} connectId\n     * @param {number} typeId\n     * @param {number} mode\n     * @param {number} deltaInterval\n     * @param {number} unit\n     * @param {bool} notificationsEnabled\n     * @param {ArrayBuffer} dataBuffer\n     */\n    constructor(connectId = null, typeId = null, mode = null, deltaInterval = null, unit = null, notificationsEnabled = null, dataBuffer = null) {\n        this.FORMAT_DATA_SIZE = 8;\n        if (dataBuffer === null) {\n            this.connectId = connectId;\n            this.typeId = typeId;\n            this.mode = mode;\n            this.deltaInterval = deltaInterval;\n            this.unit = unit;\n            this.notificationsEnabled = notificationsEnabled;\n        }\n        else {\n            const data = new DataView(dataBuffer);\n\n            this.revision = data.getUint8(0);\n            this.connectId = data.getUint8(1);\n            this.typeId = data.getUint8(2);\n            this.mode = data.getUint8(3);\n            this.deltaInterval = data.getUint32(4, true);// true === parse as little endian\n            this.unit = data.getUint8(8);\n            this.notificationsEnabled = data.getUint8(9) === 1;\n            this.numberOfBytes = data.getUint8(10);\n        }\n        if (LDSDKLogger.isTraceEnabled()) {\n            LDSDKLogger.trace('InputFormat instance created: ' + this.toString());\n        }\n    }\n\n    /**\n     *\n     * @param {ArrayBuffer} dataBuffer\n     * @return {InputFormat}\n     */\n    static inputFormatFromBuffer(dataBuffer) {\n        if (dataBuffer === null || dataBuffer === undefined) {\n            LDSDKLogger.error('Cannot instantiate InputFormat with null data');\n            return null;\n        }\n\n        // First byte is for the revision number, the rest of the bytes should be one or more input format sub-packages.\n        if (dataBuffer.byteLength !== InputFormat.INPUT_FORMAT_PACKAGE_SIZE) {\n            LDSDKLogger.error('Cannot create InputFormat from package with size ' + dataBuffer.byteLength + ', expected size to' +\n                     ' be ' + InputFormat.INPUT_FORMAT_PACKAGE_SIZE + ' - Buffer received: ' + new Int8Array(dataBuffer));\n            return null;\n        }\n\n        return new InputFormat(null, null, null, null, null, null, dataBuffer);\n    }\n\n    /**\n     * Create a new instance of an InputFormat.\n     *\n     * @param connectId            The connectId of the service, see {@link LegoService#connectInfo}\n     * @param type                 The type of the IO, see {@link LegoService#connectInfo}\n     * @param mode                 The mode of the IO (Inputs/Senors may support a number of different modes)\n     * @param deltaInterval        The delta interval\n     * @param unit                 The unit the sensor should return values in\n     * @param notificationsEnabled true if the device should send updates when the value changes, otherwise false\n     *\n     * @return {InputFormat}\n     */\n    static inputFormat(connectId,\n                       type,\n                       mode,\n                       deltaInterval,\n                       unit,\n                       notificationsEnabled) {\n        return new InputFormat(connectId, type, mode, deltaInterval, unit, notificationsEnabled);\n    }\n\n    /**\n     * Creates a copy of this input format with a new mode\n     *\n     * @param {number} mode The new mode\n     *\n     * @return {InputFormat}\n     */\n    inputFormatBySettingMode(mode) {\n        return new InputFormat(this.connectId, this.typeId, mode, this.deltaInterval, this.unit, this.notificationsEnabled);\n    }\n\n    /**\n     * Creates a copy of this input format with a new mode and unit\n     *\n     * @param {number} mode The new mode\n     * @param {InputFormatUnit} inputFormatUnit The new unit\n     *\n     * @return {InputFormat}\n     */\n    inputFormatBySettingModeAndUnit(mode, inputFormatUnit) {\n        return new InputFormat(this.connectId, this.typeId, mode, this.deltaInterval, inputFormatUnit, this.notificationsEnabled);\n    }\n\n    /**\n     * Creates a copy of this input format with a new delta interval\n     *\n     * @param {number} deltaInterval The new delta interval\n     *\n     * @return {InputFormat}\n     */\n    inputFormatBySettingDeltaInterval(deltaInterval) {\n        return new InputFormat(this.connectId, this.typeId, this.mode, deltaInterval, this.unit, this.notificationsEnabled);\n    }\n\n    /**\n     * Creates a copy of this input format with a new value for notifications enabled\n     *\n     * @param {bool} notificationsEnabled true if the sensor should send updates when the value changes, otherwise false\n     */\n    inputFormatBySettingNotificationsEnabled(notificationsEnabled) {\n        return new InputFormat(this.connectId, this.typeId, this.mode, this.deltaInterval, this.unit, notificationsEnabled);\n    }\n\n    /**\n     *\n     * @return {number}\n     */\n    getRevision() {\n        return this.revision;\n    }\n\n    /**\n     *\n     * @return {number}\n     */\n    getConnectId() {\n        return this.connectId;\n    }\n\n    /**\n     * Get the IOType for the service\n     * @return {number} - See {@link IOType} for the values that can be returned\n     */\n    getType() {\n        return IOType.fromInteger(this.typeId);\n    }\n\n    /**\n     * The input format mode\n     * @return {number}\n     */\n    getMode() {\n        return this.mode;\n    }\n\n    /**\n     * Get the delta interval for the input format\n     * @return {number}\n     */\n    getDeltaInterval() {\n        return this.deltaInterval;\n    }\n\n    /**\n     * Get the unit set for the input format.\n     * @return {InputFormatUnit}\n     */\n    getUnit() {\n        return InputFormatUnit.fromInteger(this.unit);\n    }\n\n    /**\n     *\n     * @return {boolean|*|bool}\n     */\n    isNotificationsEnabled() {\n        return this.notificationsEnabled;\n    }\n\n    /**\n     *\n     * @return {number}\n     */\n    getNumberOfBytes() {\n        return this.numberOfBytes;\n    }\n\n    /**\n     *\n     * @return {ArrayBuffer}\n     */\n    writeFormatData() {\n        const writeData = new DataView(new ArrayBuffer(this.FORMAT_DATA_SIZE));\n        writeData.setUint8(0, this.typeId);\n        writeData.setUint8(1, this.mode);\n        writeData.setUint32(2, this.deltaInterval, true); // true -> little endian\n        writeData.setUint8(6, this.unit);\n        writeData.setUint8(7, (this.notificationsEnabled ? 1 : 0));\n\n        return writeData.buffer;\n    }\n\n    toString() {\n        return 'InputFormat{' +\n                'revision=' + this.revision +\n                ', connectId=' + this.connectId +\n                ', typeId=' + this.typeId +\n                ', mode=' + this.mode +\n                ', deltaInterval=' + this.deltaInterval +\n                ', unit=' + this.unit +\n                ', notificationsEnabled=' + this.notificationsEnabled +\n                ', numberOfBytes=' + this.numberOfBytes +\n                '}';\n    }\n\n    equals(other) {\n        if (this === other) return true;\n        if (other === null || other === undefined || other.constructor.name !== this.constructor.name) return false;\n\n        if (this.connectId !== other.connectId) return false;\n        if (this.deltaInterval !== other.deltaInterval) return false;\n        if (this.mode !== other.mode) return false;\n        if (this.notificationsEnabled !== other.notificationsEnabled) return false;\n        if (this.numberOfBytes !== other.numberOfBytes) return false;\n        if (this.revision !== other.revision) return false;\n        if (this.typeId !== other.typeId) return false;\n        if (this.unit !== other.unit) return false;\n\n        return true;\n    }\n\n    /**\n     * Create an InputFormat from the simple input format returned from the api.\n     *\n     * This can be used when updating the input format to e.g. the default input format returned.\n     * @param {obj} simpleInputFormat\n     * @return {InputFormat}\n     */\n    static fromSimpleInputFormat(simpleInputFormat) {\n        return InputFormat.inputFormat(\n                simpleInputFormat.connectId,\n                simpleInputFormat.typeId,\n                simpleInputFormat.mode,\n                simpleInputFormat.deltaInterval,\n                simpleInputFormat.unit,\n                simpleInputFormat.notificationsEnabled\n        );\n    }\n\n    /**\n     * Get simple representation of the input format for use in the callback handlers.\n     * @return {{revision: number, connectId: number, typeId: IOType, mode: number, deltaInterval: number, unit: InputFormatUnit, notificationsEnabled: boolean}}\n     */\n    getSimpleInputFormat() {\n        return {\n            revision: this.getRevision(),\n            connectId: this.getConnectId(),\n            typeId: this.getType(),\n            mode: this.getMode(),\n            deltaInterval: this.getDeltaInterval(),\n            unit: this.getUnit(),\n            notificationsEnabled: this.isNotificationsEnabled()\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/InputFormat.js","\"use strict\";\n\nexports.__esModule = true;\n\nvar _getPrototypeOf = require(\"../core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _getOwnPropertyDescriptor = require(\"../core-js/object/get-own-property-descriptor\");\n\nvar _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = (0, _getOwnPropertyDescriptor2.default)(object, property);\n\n  if (desc === undefined) {\n    var parent = (0, _getPrototypeOf2.default)(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/get.js\n// module id = 23\n// module chunks = 0","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_hide.js\n// module id = 24\n// module chunks = 0","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-object.js\n// module id = 25\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-iobject.js\n// module id = 26\n// module chunks = 0","import LDSDKLogger from '../helpers/LDSDKLogger';\nimport DeviceInfo from './DeviceInfo';\nimport IdHelper from '../helpers/IdHelper';\nimport LegoServiceFactory from '../io/services/LegoServiceFactory';\n\n/**\n * @type {object} StateEnum represents the connected state of a device\n * @property {number} DisconnectedAdvertising - The Device is disconnected and no connection attempt is in progress\n * @property {number} DisconnectedNotAdvertising - The Device is disconnected and no longer advertising - the device\n * also returns to this state after a successful connection has been closed\n * @property {number} Connecting - A connection attempt is in progress\n * @property {number} Interrogating - Connected and interrogating Device for required services\n * @property {number} InterrogationFinished - Connected and interrogation complete - device is ready for use\n */\nexport const StateEnum = {\n    /**\n     * The Device is disconnected and no connection attempt is in progress\n     * @constructor\n     */\n    DisconnectedAdvertising: 1,\n\n    /**\n     * The Device is disconnected and no longer advertising - the device also returns to this state after a\n     * successful connection has been closed\n     */\n    DisconnectedNotAdvertising: 2,\n\n    /**\n     * A connection attempt is in progress\n     */\n    Connecting: 3,\n\n    /**\n     * Connected and interrogating Device for required services\n     */\n    Interrogating: 4,\n\n    /**\n     * Connected and interrogation complete - device is ready for use\n     */\n    InterrogationFinished: 5\n};\n\n/**\n * @type {object} DeviceCategoryEnum specifies the category of this device\n * @property {number} DeviceCategoryWeDo - WeDo device\n * @property {number} DeviceCategoryDuplo - Duplo device\n * @property {number} DeviceCategorySystem - System device\n * @property {number} DeviceCategoryTechnic - Technic device\n * @property {number} DeviceCategoryMindStorms - Mindstorms device\n * @property {number} DeviceCategoryUnknown - Unknown device\n */\nexport const DeviceCategoryEnum = {\n    /**\n     * WeDo\n     */\n    DeviceCategoryWeDo: 0,\n\n    /**\n     * Duplo\n     */\n    DeviceCategoryDuplo: 1,\n\n    /**\n     * System\n     */\n    DeviceCategorySystem: 2,\n\n    /**\n     * Technic\n     */\n    DeviceCategoryTechnic: 3,\n\n    /**\n     * MINDSTORMS\n     */\n    DeviceCategoryMindStorms: 4,\n\n    /**\n     * Unknown\n     */\n    DeviceCategoryUnknown: 5,\n\n    /**\n     * Helper for getting the enum  - if the value is not one of the supported values - DeviceCategoryUnknown is\n     * returned\n     * @param {number} value\n     * @return {number}\n     */\n    fromInteger: function (value) {\n        switch (parseInt(value)) {\n            case 0:\n                return this.DeviceCategoryWeDo;\n            case 1:\n                return this.DeviceCategoryDuplo;\n            case 2:\n                return this.DeviceCategorySystem;\n            case 3:\n                return this.DeviceCategoryTechnic;\n            case 4:\n                return this.DeviceCategoryMindStorms;\n            case 5:\n            default:\n                return this.DeviceCategoryUnknown;\n        }\n    }\n};\n\n/**\n * @type {object} The Function a Device will support.\n * @property {number} DeviceFunctionCentralMode - Central Mode\n * @property {number} DeviceFunctionPeripheralMode - Peripheral Mode\n * @property {number} DeviceFunctionIOPorts - Device IO Ports mode\n * @property {number} DeviceFunctionActsAsRemoteController - Device acts as a remocte controller\n * @property {number} DeviceFunctionUnknown - Unknown\n */\nexport const DeviceFunctionEnum = {\n    /**\n     * Central Mode\n     */\n    DeviceFunctionCentralMode: 0,\n\n    /**\n     * Peripheral Mode\n     */\n    DeviceFunctionPeripheralMode: 1,\n\n    /**\n     * Device IO Ports mode\n     */\n    DeviceFunctionIOPorts: 2,\n\n    /**\n     * Device acts as a remocte controller\n     */\n    DeviceFunctionActsAsRemoteController: 3,\n\n    /**\n     * Unknown\n     */\n    DeviceFunctionUnknown: 4,\n\n    /**\n     * Helper for getting the enum  - if the value is not one of the supported values - DeviceFunctionUnknown is\n     * returned\n     * @param {number} value\n     * @return {number}\n     */\n    fromInteger: function (value) {\n        switch (parseInt(value)) {\n            case 0:\n                return this.DeviceFunctionCentralMode;\n            case 1:\n                return this.DeviceFunctionPeripheralMode;\n            case 2:\n                return this.DeviceFunctionIOPorts;\n            case 3:\n                return this.DeviceFunctionActsAsRemoteController;\n            case 4:\n            default:\n                return this.DeviceFunctionUnknown;\n        }\n    }\n};\n\n\n/**\n * This class can be used to offload the main thread and execute the callbacks on a different thread (currently\n * however all the callbacks are simply postponed slightly using setTimeout(callback, timeInMillis).\n *\n * As a user of the SDK you are not supposed to use this class directly, instead you should use the\n * registerCallbackListener and unregisterCallbackListener methods of the {@link LegoDeviceImpl} class\n *\n * Created by frj on 18/02/16.\n */\nexport class DeviceCallbackHelper {\n\n    /**\n     *\n     * @param {string} legoDeviceAddress\n     * @param {LegoDeviceManagerImpl} legoDeviceManager\n     */\n    constructor(legoDeviceAddress, legoDeviceManager) {\n        this._legoDeviceAddress = legoDeviceAddress;\n        this._legoDeviceManager = legoDeviceManager;\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.warn('Creating new ' + this.constructor.name + ' for device address '+ legoDeviceAddress +' ::' +\n                             ' Initializing to empty list of listeners');\n        }\n        this.callbackListeners = new Map();\n\n        const requiredCallbackFunctions = [];\n        requiredCallbackFunctions.push('didUpdateDeviceInfo');\n        requiredCallbackFunctions.push('didChangeButtonState');\n        requiredCallbackFunctions.push('didUpdateLowVoltageState');\n        requiredCallbackFunctions.push('didUpdateBatteryLevel');\n        requiredCallbackFunctions.push('didChangeNameFrom');\n        requiredCallbackFunctions.push('didFailToAddServiceWithError');\n        requiredCallbackFunctions.push('didRemoveService');\n        requiredCallbackFunctions.push('didAddService');\n\n        this.requiredCallbackFunctions = requiredCallbackFunctions;\n\n    }\n\n    get legoDeviceManager() {\n        return this._legoDeviceManager;\n    }\n\n    get legoBluetoothDevice() {\n        return this.legoDeviceManager.getDevice(this._legoDeviceAddress, false);\n    }\n\n    /**\n     * Registers a callback\n     * @param callback\n     * @returns {string} A unique callback id that can be used to unregister the callback later.s\n     */\n    registerCallbackListener(callback) {\n        if (!callback || callback === null) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Cannot register undefined or null as callbacks');\n            }\n            return null;\n        }\n        this.checkCallbackListener(callback);\n\n        let callbackId = IdHelper.generateID();\n        while(this.callbackListeners.has(callbackId)) {\n            // in case the map already has a key === callbackId we generate a new one\n            callbackId = IdHelper.generateID();\n        }\n        this.callbackListeners.set(callbackId, callback);\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Registered listener of type ' + callback.constructor.name + ' (Id: '+callbackId+') with ' + this.constructor.name + ' :: Total listeners registered: ' + this.callbackListeners.size);\n        }\n        return callbackId;\n    }\n\n    /**\n     *  Unregisters a callback\n     *\n     * @param callbackId - A unique callback id that was returned when registering the listener.\n     * @returns {boolean} - Returns true if a callback existed with that id, or false if no callback was found with\n     * that id.\n     */\n    unregisterCallbackListener(callbackId) {\n        const deleted = this.callbackListeners.delete(callbackId);\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Unregistered listener with id ' + callbackId+ ' from ' + this.constructor.name + ' :: Total listeners registered: ' + this.callbackListeners.size);\n        }\n        return deleted;\n    }\n\n    performDidUpdateDeviceInfoCallback(device, deviceInfo, error) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                if (this.callbackListeners.size === 0) {\n                    if (this.legoBluetoothDevice.cachedListener && this.legoBluetoothDevice.cachedListener !== null) {\n                        this.registerCallbackListener(this.legoBluetoothDevice.cachedListener);\n                    }\n\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug(this.constructor.name+'.performDidUpdateDeviceInfoCallback :: No callback' +\n                        ' listeners' +\n                        ' found - unable to' +\n                                          ' call didUpdateDeviceInfo function');\n                    }\n                }\n                this.callbackListeners.forEach((callbackListener, key) => {\n                    if (callbackListener !== null && typeof callbackListener.didUpdateDeviceInfo === 'function') {\n                        callbackListener.didUpdateDeviceInfo(device.getSimpleDevice(), device.getSimpleDeviceInfo(), error);\n                    } else {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('Callback listener does not have a didUpdateDeviceInfo function -' +\n                                              ' unable to' +\n                                             ' call back');\n                        }\n                    }\n                });\n                return resolve();\n            }, 0);\n        });\n    }\n\n    performDidChangeButtonStateCallback(device, buttonPressed) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                if (this.callbackListeners.size === 0) {\n                    if (this.legoBluetoothDevice.cachedListener && this.legoBluetoothDevice.cachedListener !== null) {\n                        this.registerCallbackListener(this.legoBluetoothDevice.cachedListener);\n                    }\n\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug(this.constructor.name+'.performDidChangeButtonStateCallback :: No callback listeners found - unable to' +\n                                          ' call didChangeButtonState function');\n                    }\n                }\n\n                this.callbackListeners.forEach((callbackListener, key) => {\n                    if (callbackListener !== null && typeof callbackListener.didChangeButtonState === 'function') {\n                        callbackListener.didChangeButtonState(device.getSimpleDevice(), buttonPressed);\n                    } else {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('Callback listener does not have a didChangeButtonState function - unable' +\n                                          ' to' +\n                                             ' call back');\n                        }\n                    }\n                });\n                return resolve();\n            }, 0);\n        });\n    }\n\n    performDidUpdateLowVoltageStateCallback(device, lowVoltage) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                if (this.callbackListeners.size === 0) {\n                    if (this.legoBluetoothDevice.cachedListener && this.legoBluetoothDevice.cachedListener !== null) {\n                        this.registerCallbackListener(this.legoBluetoothDevice.cachedListener);\n                    }\n\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug(this.constructor.name+'.performDidUpdateLowVoltageStateCallback :: No callback listeners found - unable to' +\n                                          ' call didUpdateLowVoltageState function');\n                    }\n                }\n\n                this.callbackListeners.forEach((callbackListener, key) => {\n                    if (callbackListener !== null && typeof callbackListener.didUpdateLowVoltageState === 'function') {\n                        callbackListener.didUpdateLowVoltageState(device.getSimpleDevice(), lowVoltage);\n                    } else {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('Callback listener does not have a didUpdateLowVoltageState function -' +\n                                          ' unable to' +\n                                             ' call back');\n                        }\n                    }\n                });\n                return resolve();\n            }, 0);\n        });\n    }\n\n    performDidUpdateBatteryLevelCallback(device, batteryLevel) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                if (this.callbackListeners.size === 0) {\n                    if (this.legoBluetoothDevice.cachedListener && this.legoBluetoothDevice.cachedListener !== null) {\n                        this.registerCallbackListener(this.legoBluetoothDevice.cachedListener);\n                    }\n\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug(this.constructor.name+'.performDidUpdateBatteryLevelCallback :: No callback listeners found - unable to' +\n                                          ' call didUpdateBatteryLevel function');\n                    }\n                }\n\n                this.callbackListeners.forEach((callbackListener, key) => {\n                    if (callbackListener !== null && typeof callbackListener.didUpdateBatteryLevel === 'function') {\n                        callbackListener.didUpdateBatteryLevel(device.getSimpleDevice(), batteryLevel);\n                    } else {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('Callback listener of type ', callbackListener.constructor.name,' does' +\n                                            ' not' +\n                                             ' have a didUpdateBatteryLevel function - unable to call back');\n                        }\n                    }\n                });\n                return resolve();\n            }, 0);\n        });\n    }\n\n    performDidChangeNameCallback(device, oldName, newName) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                if (this.callbackListeners.size === 0) {\n                    if (this.legoBluetoothDevice.cachedListener && this.legoBluetoothDevice.cachedListener !== null) {\n                        this.registerCallbackListener(this.legoBluetoothDevice.cachedListener);\n                    }\n\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug(this.constructor.name+'.performDidChangeNameCallback :: No callback listeners found - unable to' +\n                                          ' call didChangeNameFrom function');\n                    }\n                }\n\n                this.callbackListeners.forEach((callbackListener, key) => {\n                    if (callbackListener !== null && typeof callbackListener.didChangeNameFrom === 'function') {\n                        if (device && device.getSimpleDevice) {\n                            callbackListener.didChangeNameFrom(device.getSimpleDevice(), oldName, newName);\n                        } else {\n                            LDSDKLogger.warn('performDidChangeNameCallback - device has no getSimpleDevice function - device: ' + JSON.stringify(device) + ', oldName: ' + oldName + ', newName: ' + newName);\n                            callbackListener.didChangeNameFrom(device, oldName, newName);\n                        }\n\n                    } else {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('Callback listener of type ', callbackListener.constructor.name,' does not have a didChangeNameFrom function - unable to' +\n                                             ' call back');\n                        }\n                    }\n                });\n                return resolve();\n            }, 0);\n        });\n    }\n\n    performDidFailToAddServiceWithErrorCallback(device, error) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                if (this.callbackListeners.size === 0) {\n                    if (this.legoBluetoothDevice.cachedListener && this.legoBluetoothDevice.cachedListener !== null) {\n                        this.registerCallbackListener(this.legoBluetoothDevice.cachedListener);\n                    }\n\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug(this.constructor.name+'.performDidFailToAddServiceWithErrorCallback :: No callback listeners found - unable to' +\n                                          ' call didFailToAddServiceWithError function');\n                    }\n                }\n                this.callbackListeners.forEach((callbackListener, key) => {\n                    if (callbackListener !== null && typeof callbackListener.didFailToAddServiceWithError === 'function') {\n                        callbackListener.didFailToAddServiceWithError(device.getSimpleDevice(), error);\n                    } else {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('Callback listener of type ', callbackListener.constructor.name,' does not have a didFailToAddServiceWithError function - unable to' +\n                                             ' call back');\n                        }\n                    }\n                });\n                return resolve();\n            }, 0);\n        });\n    }\n\n    performDidRemoveServiceCallback(device, service) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                if (this.callbackListeners.size === 0) {\n                    if (this.legoBluetoothDevice.cachedListener && this.legoBluetoothDevice.cachedListener !== null) {\n                        this.registerCallbackListener(this.legoBluetoothDevice.cachedListener);\n                    }\n\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug(this.constructor.name+'.performDidRemoveServiceCallback :: No callback listeners found - unable to' +\n                                          ' call didRemoveService function');\n                    }\n                }\n                const simpleDevice = device.getSimpleDevice();\n                const simpleService = service.getSimpleService();\n                this.callbackListeners.forEach((callbackListener, key) => {\n                    if (callbackListener !== null && typeof callbackListener.didRemoveService === 'function') {\n                        callbackListener.didRemoveService(simpleDevice, simpleService);\n                    } else {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('Callback listener of type ', callbackListener.constructor.name,' does not have a didRemoveService function - unable to' +\n                                             ' call back');\n                        }\n                    }\n                });\n                return resolve();\n            }, 0);\n        });\n    }\n\n    performDidAddServiceCallback(device, service) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                if (this.callbackListeners.size === 0) {\n                    if (LDSDKLogger.isInfoEnabled()) {\n                        LDSDKLogger.info('performDidAddServiceCallback - no listeners found - adding cachedListener:' +\n                                         ' ' + this.legoBluetoothDevice.cachedListener);\n                    }\n                    if (this.legoBluetoothDevice.cachedListener && this.legoBluetoothDevice.cachedListener !== null) {\n                        this.registerCallbackListener(this.legoBluetoothDevice.cachedListener);\n                    }\n                }\n                const simpleDevice = device.getSimpleDevice();\n                const simpleService = service.getSimpleService();\n                this.callbackListeners.forEach((callbackListener, key) => {\n                    if (callbackListener !== null && typeof callbackListener.didAddService === 'function') {\n                        if (LDSDKLogger.isTraceEnabled()) {\n                            LDSDKLogger.debug(`performDidAddServiceCallback :: calling back didAddService ${service.getServiceName()} [${service.getConnectInfo().toString()}] for device: ${device.getName()}`);\n                        }\n                        callbackListener.didAddService(simpleDevice, simpleService);\n                    } else {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('Callback listener of type ', callbackListener.constructor.name,' does not have a didAddService function - unable to call back');\n                        }\n                    }\n                });\n                return resolve();\n            }, 0);\n        });\n    }\n\n    checkCallbackListener(callbackListener) {\n        if (callbackListener === null || callbackListener === undefined) {\n            LDSDKLogger.warn(`Attempt to add undefined callback listener to ${this.constructor.name} ignored`);\n            return;\n        }\n\n        for (let i = 0; i < this.requiredCallbackFunctions.length; i++) {\n            const requiredFuncName = this.requiredCallbackFunctions[i];\n            const requiredFunc = callbackListener[requiredFuncName];\n            if (typeof requiredFunc !== 'function') {\n                LDSDKLogger.warn(`The added callbacklistener of type ${callbackListener.constructor.name} does not have an implementation of the required callback method ${requiredFuncName}`);\n            }\n        }\n\n    }\n}\n\nexport default class LegoDeviceImpl {\n    static UNDEFINED_DEVICE_ID = 'Undefined';\n\n    constructor(legoDeviceManager) {\n        this.instanceId = IdHelper.generateID();\n        this._legoDeviceManager = legoDeviceManager;\n\n        this.connectState = StateEnum.DisconnectedNotAdvertising;\n        this.deviceId = LegoDeviceImpl.UNDEFINED_DEVICE_ID;\n        this.deviceName = '';\n        this.buttonPressed = false;\n        this._batteryLevel = 0;\n        this.deviceInfo = new DeviceInfo();\n\n        this.lowVoltage = false;\n        this.category = DeviceCategoryEnum.DeviceCategoryUnknown;\n        this.supportedFunctions = DeviceFunctionEnum.DeviceFunctionUnknown;\n        this.lastConnectedNetworkId = -1;\n\n    }\n\n    get services() {\n        return LegoServiceFactory.getServiceInstances(this.getDeviceId());\n    }\n\n    get legoDeviceManager() {\n        return this._legoDeviceManager;\n        // return LegoDeviceManagerImpl.getInstance();\n    }\n\n    get callbackHelper() {\n        let deviceCallbackHelper = this.legoDeviceManager.getDeviceCallbackHelper(this.getAddress());\n        if (deviceCallbackHelper === null) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('Creating a new device callback helper for device with address: ' + this.getAddress());\n            }\n            deviceCallbackHelper = new DeviceCallbackHelper(this.getAddress(), this.legoDeviceManager);\n            this.legoDeviceManager.setDeviceCallbackHelper(this.getAddress(), deviceCallbackHelper);\n        } else {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.debug('Found cached device callback helper with ' + deviceCallbackHelper.callbackListeners.size + ' callback listeners');\n            }\n        }\n        return deviceCallbackHelper;\n    }\n\n    get batteryLevel() {\n        return this._batteryLevel;\n    }\n\n    set batteryLevel(value) {\n        this._batteryLevel = Math.max(0, Math.min(100, value));\n    }\n\n    getServices() {\n        return this.services;\n    }\n\n    getInternalServices() {\n        return this.getFilteredServices(true);\n    }\n\n    getExternalServices() {\n        return this.getFilteredServices(false);\n    }\n\n    /**\n     *\n     * @return {number}\n     */\n    getConnectState() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.getConnectState();\n            }\n        }\n\n        return this.connectState;\n    }\n\n    /**\n     *\n     * @return {string} - The mac address for the device\n     */\n    getDeviceId() {\n        return this.deviceId;\n    }\n\n    /**\n     *\n     * @return {string} - The name of the device\n     */\n    getName() {\n        return this.deviceName;\n    }\n\n    /**\n     *\n     * @return {boolean} - True means pressed, false is not pressed\n     */\n    isButtonPressed() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.isButtonPressed();\n            }\n        }\n\n        return this.buttonPressed;\n    }\n\n    /**\n     *\n     * @return {number} - Battery level in percent (0-100)\n     */\n    getBatteryLevel() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.getBatteryLevel();\n            }\n        }\n\n        return this.batteryLevel;\n    }\n\n    /**\n     *\n     * @return {DeviceInfo}\n     */\n    getDeviceInfo() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.getDeviceInfo();\n            }\n        }\n\n        return this.deviceInfo;\n    }\n\n\n    registerCallbackListener(listener) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.registerCallbackListener(listener);\n            }\n        }\n\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Registering ' + this.callbackHelper.constructor.name +' listener of type: ' + listener.constructor.name + ' - keeping reference as cachedListener');\n        }\n        this.cachedListener = listener;\n        return this.callbackHelper.registerCallbackListener(listener);\n    }\n\n    unregisterCallbackListener(listenerId) {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Unregistering ' + this.callbackHelper.constructor.name +' with listenerId: ' + listenerId);\n        }\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.callbackHelper.unregisterCallbackListener(listenerId);\n            }\n        }\n\n        return this.callbackHelper.unregisterCallbackListener(listenerId);\n    }\n\n    getFilteredServices(internalOnly) {\n        const filteredServices = [];\n\n        for (const service of this.services.values()) {\n            if (service.isInternalService()) {\n                if (internalOnly) {\n                    filteredServices.push(service);\n                }\n            } else {\n                if (!internalOnly) {\n                    filteredServices.push(service);\n                }\n            }\n        }\n        return filteredServices;\n    }\n\n    /**\n     * Get a simple representation of a device\n     * @return {{deviceId: string, deviceName: string, isButtonPressed: boolean, batteryLevel: number, isLowVoltage: boolean, connectState: number, category: number, supportedFunctions: number, lastConnectedNetworkId: number, instanceId: string}}\n     */\n    getSimpleDevice() {\n        const simpleDeviceObj = {\n            'deviceId': this.getDeviceId(),\n            'deviceName': this.getName(),\n            'isButtonPressed': this.isButtonPressed(),\n            'batteryLevel': this.getBatteryLevel(),\n            'isLowVoltage': this.isLowVoltage(),\n            'connectState': this.getConnectState(),\n            'category': this.getCategory(),\n            'supportedFunctions': this.getSupportedFunctions(),\n            'lastConnectedNetworkId': this.getLastConnectedNetworkId(),\n            'instanceId': this.instanceId\n        };\n        const simpleDeviceInfo = this.getSimpleDeviceInfo();\n        if (simpleDeviceInfo !== null) {\n            simpleDeviceObj['deviceInfo'] = simpleDeviceInfo;\n        }\n        return simpleDeviceObj;\n    }\n\n    /**\n     * Get simple device info representation or null if no device info available\n     * @return {{firmwareRevision: string, hardwareRevision: string, softwareRevision: string, manufacturerName: string}|null}\n     */\n    getSimpleDeviceInfo() {\n        if (this.getDeviceInfo() && this.getDeviceInfo() !== null) {\n            return this.getDeviceInfo().getSimpleDeviceInfo();\n        }\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/device/LegoDeviceImpl.js","/**\n * @ignore Internal use only\n */\nexport default class IdHelper {\n\n    static generateID() {\n        let timestamp = new Date().getTime();\n        const id = 'xxxxxxxxxxxx'.replace(/[x]/g, function (c) {\n            const r = (timestamp + Math.random() * 16) % 16 | 0;\n            timestamp = Math.floor(timestamp / 16);\n            return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return id;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/IdHelper.js","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ctx.js\n// module id = 29\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_has.js\n// module id = 30\n// module chunks = 0","/**\n * @ignore\n * The functions in this class is used for firing the callbacks in relation to scanning for devices, and connecting to them.\n *\n * As a user of the SDK you are not supposed to use this class directly, instead you should use the\n * registerCallbackListener and unregisterCallbackListener methods of the {@link LegoDeviceManagerImpl} class\n *\n * Created by frj on 18/02/16.\n */\nimport LegoBluetoothDeviceManagerImpl, {BaseBluetoothGattCallback} from '../bluetooth/LegoBluetoothDeviceManagerImpl';\nimport LegoBluetoothDeviceImpl from '../bluetooth/LegoBluetoothDeviceImpl';\nimport LegoDeviceManager from './LegoDeviceManager';\nimport LDSDKLogger from '../helpers/LDSDKLogger';\nimport SimpleList from '../helpers/SimpleList';\nimport ChromeOsBluetoothAdapterWrapper from '../bluetooth/ChromeOsBluetoothAdapterWrapper';\nimport IdHelper from '../helpers/IdHelper';\nimport {StateEnum} from './LegoDeviceImpl';\nimport StringUtils from '../helpers/StringUtils';\n\n\n\nexport class DeviceManagerCallbackHelper {\n\n\n    constructor() {\n        this.counter = 0;\n        this.callbackListeners = new Map();\n\n        const requiredCallbackFunctions = [];\n\n        // These calls are used while connecting\n        requiredCallbackFunctions.push('onWillStartConnectingToDevice');\n        requiredCallbackFunctions.push('onDidStartInterrogatingDevice');\n        requiredCallbackFunctions.push('onDidFinishInterrogatingDevice');\n        requiredCallbackFunctions.push('onDidDisconnectFromDevice');\n        requiredCallbackFunctions.push('onDidFailToConnectToDevice');\n\n        // These calls are used while scanning\n        requiredCallbackFunctions.push('onDeviceDisappeared');\n        requiredCallbackFunctions.push('onDeviceAppeared');\n\n        // TODO: Split the scanning and connecting calls into two separate implementations\n\n        this.requiredCallbackFunctions = requiredCallbackFunctions;\n    }\n\n    /**\n     * Registers a callback that while scanning can get calls on its onDeviceAppeared, and onDeviceDisappeared\n     * functions. And while connecting to a device the following functions can be called:\n     *\n     *\n     *\n     * @param callback\n     * @returns {string} A unique callback id that can be used to unregister the callback later.s\n     */\n    registerCallbackListener(callback) {\n        this.checkCallbackListener(callback);\n\n        let callbackId = IdHelper.generateID();\n        while(this.callbackListeners.has(callbackId)) {\n            // in case the map already has a key === callbackId we generate a new one\n            callbackId = IdHelper.generateID();\n        }\n        this.callbackListeners.set(callbackId, callback);\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Registered callbacklistener for ' + this.constructor.name + ' - Id: ' + callbackId + ' - callback name: ' + callback.constructor.name + ' - callbacklistener count: ' + this.callbackListeners.size);\n        }\n        return callbackId;\n    }\n\n    /**\n     *  Unregisters a callback\n     *\n     * @param callbackId - A unique callback id that was returned when registering the listener.\n     * @returns {boolean} - Returns true if a callback existed with that id, or false if no callback was found with\n     * that id.\n     */\n    unregisterCallbackListener(callbackId) {\n        const result = this.callbackListeners.delete(callbackId);\n        if (LDSDKLogger.isTraceEnabled()) {\n            LDSDKLogger.trace('Unregistered callbacklistener for ' + this.constructor.name + ' - Id: ' + callbackId + ' - callbacklistener count: ' + this.callbackListeners.size);\n        }\n        return result;\n    }\n\n    /**\n     * @ignore\n     * <b>Not to be called directly by a client.</b>\n     *\n     * This function is used internally to notify the client listeners about device appeared events.\n     *\n     * @param legoDevice\n     */\n    performDeviceAppearedCallback(legoDevice) {\n        setTimeout(() => {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' - Calling onDeviceAppeared on this.callbackListeners with length: ' + this.callbackListeners.size);\n            }\n            const simpleDevice = legoDevice.getSimpleDevice();\n            this.callbackListeners.forEach((callbackListener, key) => {\n                if (callbackListener !== null && typeof callbackListener.onDeviceAppeared === 'function') {\n                    callbackListener.onDeviceAppeared(simpleDevice);\n                } else {\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('Callback does not have a onDeviceAppeared function - unable to call back.' +\n                                          ' Callback type: ', callbackListener.constructor.name);\n                    }\n                }\n            });\n        }, 0);\n    }\n\n    /**\n     * @ignore\n     * <b>Not to be called directly by a client.</b>\n     *\n     * This function is used internally to notify the client listeners about device disappeared events.\n     *\n     * @param legoDevice\n     */\n    performDeviceDisappearedCallback(legoDevice) {\n        setTimeout(() => {\n            if (this.callbackListeners.size === 0) {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info(this.constructor.name + '.performDeviceDisappearedCallback - ' + 'No listeners' +\n                                      ' registered to call onDeviceDisappeared on');\n                }\n                return;\n            }\n            const simpleDevice = legoDevice.getSimpleDevice();\n            this.callbackListeners.forEach((callbackListener, key) => {\n                if (callbackListener !== null && typeof callbackListener.onDeviceDisappeared === 'function') {\n                    if (LDSDKLogger.isTraceEnabled()) {\n                        LDSDKLogger.trace(this.constructor.name + '.performDeviceDisappearedCallback calling' +\n                                          ' onDeviceDisappeared on ' + callbackListener.constructor.name);\n                    }\n                    callbackListener.onDeviceDisappeared(simpleDevice);\n                } else {\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('Callback does not have a onDeviceDisappeared function - unable to call' +\n                                          ' back');\n                    }\n                }\n            });\n        }, 0);\n    }\n\n    /**\n     * @ignore\n     * <b>Not to be called directly by a client.</b>\n     *\n     * This function is used internally to notify the client listeners about the sdk starts connecting to a device events.\n     *\n     * @param legoDevice\n     */\n    performWillStartConnectingToDeviceCallback(legoDevice) {\n        setTimeout(() => {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' - Calling onWillStartConnectingToDevice on this.callbackListeners with length: ' + this.callbackListeners.size);\n            }\n            const simpleDevice = legoDevice.getSimpleDevice();\n            this.callbackListeners.forEach((callbackListener, key) => {\n                if (callbackListener !== null && typeof callbackListener.onWillStartConnectingToDevice === 'function') {\n                    callbackListener.onWillStartConnectingToDevice(simpleDevice);\n                } else {\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('Callback does not have a onWillStartConnectingToDevice function - unable' +\n                                          ' to call back');\n                    }\n                }\n            });\n        }, 0);\n    }\n\n    /**\n     * @ignore\n     * <b>Not to be called directly by a client.</b>\n     *\n     * This function is used internally to notify the client listeners about the sdk starts interrogating a device for services\n     * and characteristics.\n     *\n     * @param legoDevice\n     */\n    performDidStartInterrogatingDevice(legoDevice) {\n        setTimeout(async () => {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' - Calling onDidStartInterrogatingDevice on this.callbackListeners with length: ' + this.callbackListeners.size);\n            }\n            const simpleDevice = legoDevice.getSimpleDevice();\n            for (const callbackListener of this.callbackListeners.values()) {\n                // this.callbackListeners.forEach((callbackListener, key) => {\n                if (callbackListener !== null && typeof callbackListener.onDidStartInterrogatingDevice === 'function') {\n                    await callbackListener.onDidStartInterrogatingDevice(simpleDevice);\n                } else {\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('Callback does not have a onDidStartInterrogatingDevice function - unable' +\n                                          ' to call back');\n                    }\n                }\n            }\n            // });\n        }, 0);\n    }\n\n    /**\n     * @ignore\n     * <b>Not to be called directly by a client.</b>\n     *\n     * This function is used internally to notify the client listeners that the sdk has completed interrogating the device for\n     * services and characteristics - and the device is now ready for use.\n     *\n     * @param legoDevice\n     */\n    performDidFinishInterrogratingDevice(legoDevice) {\n        setTimeout(() => {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' - Calling onDidFinishInterrogatingDevice on this.callbackListeners with length: ' + this.callbackListeners.size);\n            }\n            const simpleDevice = legoDevice.getSimpleDevice();\n            this.callbackListeners.forEach((callbackListener, key) => {\n                if (callbackListener !== null && typeof callbackListener.onDidFinishInterrogatingDevice === 'function') {\n                    if (LDSDKLogger.isTraceEnabled()) {\n                        LDSDKLogger.debug(this.constructor.name + ' - Calling' +\n                                          ' callbackListener.onDidFinishInterrogatingDevice' + legoDevice.getName() + ' ['+legoDevice.getAddress()+']');\n                    }\n                    callbackListener.onDidFinishInterrogatingDevice(simpleDevice);\n                } else {\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('Callback does not have a onDidFinishInterrogatingDevice function - unable to' +\n                                      ' call back');\n                    }\n                }\n            });\n        }, 0);\n    }\n\n    /**\n     * @ignore\n     * <b>Not to be called directly by a client.</b>\n     *\n     * This function is used internally to notify the client listeners that the sdk has disconnected from the device.\n     *\n     * @param legoDevice\n     * @param {Boolean} autoReconnect\n     * @param {string} error\n     */\n    performDidDisconnectFromDevice(legoDevice, autoReconnect, error) {\n        setTimeout(() => {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' - Calling onDidDisconnectFromDevice on this.callbackListeners with length: ' + this.callbackListeners.size);\n            }\n            const simpleDevice = legoDevice.getSimpleDevice();\n            this.callbackListeners.forEach((callbackListener, key) => {\n                if (callbackListener !== null && typeof callbackListener.onDidDisconnectFromDevice === 'function') {\n                    callbackListener.onDidDisconnectFromDevice(simpleDevice, autoReconnect, error);\n                } else {\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('Callback does not have a onDidDisconnectFromDevice function - unable to' +\n                                         ' call back');\n                    }\n                }\n            });\n        }, 0);\n\n    }\n\n    /**\n     * @ignore\n     * <b>Not to be called directly by a client.</b>\n     *\n     * This function is used internally to notify the client listeners that the sdk failed to connect to the device.\n     *\n     * @param legoDevice\n     * @param {Boolean} autoReconnect\n     * @param {string} error\n     */\n    performDidFailToConnectToDevice(legoDevice, autoReconnect, error) {\n        setTimeout(() => {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' - Calling onDidFailToConnectToDevice on this.callbackListeners with length: ' + this.callbackListeners.size);\n            }\n            const simpleDevice = legoDevice.getSimpleDevice();\n            this.callbackListeners.forEach((callbackListener, key) => {\n                if (callbackListener !== null && typeof callbackListener.onDidFailToConnectToDevice === 'function') {\n                    callbackListener.onDidFailToConnectToDevice(simpleDevice, autoReconnect, error);\n                } else {\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('Callback does not have a onDidFailToConnectToDevice function - unable to' +\n                                        ' call back');\n                    }\n                }\n            });\n        }, 0);\n    }\n\n    /**\n     * @ignore\n     * <b>Not to be called directly by a client.</b>\n     *\n     * This function validates the supplied listener implements the functions expected by this class.\n     *\n     * @param callbackListener\n     */\n    checkCallbackListener(callbackListener) {\n        if (callbackListener === null || callbackListener === undefined) {\n            LDSDKLogger.error(`Attempt to add undefined callback listener to ${this.constructor.name} ignored`);\n            return;\n        }\n        for (let i = 0; i < this.requiredCallbackFunctions.length; i++) {\n            const requiredFuncName = this.requiredCallbackFunctions[i];\n            const requiredFunc = callbackListener[requiredFuncName];\n            if (typeof requiredFunc !== 'function') {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn(`The added callbacklistener of type ${callbackListener.constructor.name} does not have an implementation of the required callback method ${requiredFuncName}`);\n                }\n            }\n        }\n\n    }\n\n}\n\n/**\n * Configuration class for holding all the user adjustable settings in the SDK\n */\nexport class LegoDeviceManagerConfig {\n    _fireDeviceInfoUpdateOnTheOnDeviceEvents = false;\n    _automaticReconnectOnConnectionLostEnabled = false;\n    _startStopRepeatedScanning = false;\n    _registerForBatteryLevelNotifications = false;\n    _registerForCurrentNotifications = false;\n    _registerForVoltageNotifications = false;\n    _listenForConnectionsAllTheTime = false;\n    _disconnectOnOperationFailedBLEError = false;\n    _filterFallbackEnabled = false;\n    _usePreviouslySeenCacheAsFallbackFilter = true;\n\n    _connectRequestTimeoutInterval = LegoDeviceManager.DEFAULT_CONNECT_REQUEST_TIMEOUT;\n    _startStopScanningInterval = LegoBluetoothDeviceManagerImpl.START_STOP_SCANNING_INTERVAL;\n    _batteryPollingInterval = 15000;\n    _disableAdvertisingWindowSizeMillis = 100;\n    _updateAdvertisingDevicesIntervalMillis = LegoBluetoothDeviceManagerImpl.REFRESH_DEVICE_LIST_DEFAULT_INTERVAL;\n    _handleUpdatedInputRetryDelay = 200;\n    _synchronousOperationsQueuePollDelay = 0;\n    _startCharacteristicNotificationsWhenConnectedRetryDelay = 500;\n    _startCharacteristicNotificationsWhenConnectedRetryMax = 15;\n    _lookupServicesWhenConnectedRetryDelay = 750;\n    _lookupServicesWhenConnectedRetryMaxCount = BaseBluetoothGattCallback.MAX_RETRIES;\n    _serviceCountComplete = 5;\n    _waitForAddServicesBeforePollingMillis = 4000;\n\n    /**\n     * Get the value of the listenForConnectionsAllTheTime setting\n     * @return {boolean}\n     */\n    get listenForConnectionsAllTheTime() {\n        return this._listenForConnectionsAllTheTime;\n    }\n\n    /**\n     * Set the value of the listenForConnectionsAllTheTime setting\n     * @param {boolean} value - The value to set\n     */\n    set listenForConnectionsAllTheTime(value) {\n        this._listenForConnectionsAllTheTime = (value === true);\n    }\n\n    /**\n     * Get the value of the fireDeviceInfoUpdateOnTheOnDeviceEvents config setting\n     * @return {boolean}\n     */\n    get fireDeviceInfoUpdateOnTheOnDeviceEvents() {\n        return this._fireDeviceInfoUpdateOnTheOnDeviceEvents;\n    }\n\n    /**\n     * Set the value of the fireDeviceInfoUpdateOnTheOnDeviceEvents config setting.\n     * The value is used in the onDevice* event handlers. If value=true then the DeviceInfoUpdated callback is called\n     * on all onDevice* events. If false the DeviceInfoUpdated is only called when the connection state changes.\n     * @param {boolean} value - The value to set\n     */\n    set fireDeviceInfoUpdateOnTheOnDeviceEvents(value) {\n        this._fireDeviceInfoUpdateOnTheOnDeviceEvents = (value === true);\n    }\n\n    /**\n     * Get the value of the automaticReconnectOnConnectionLostEnabled config setting\n     * @return {boolean}\n     */\n    get automaticReconnectOnConnectionLostEnabled() {\n        return this._automaticReconnectOnConnectionLostEnabled;\n    }\n\n    /**\n     * Set the value of the automaticReconnectOnConnectionLostEnabled config setting.\n     * The value is used when a connected device loses connection and is still discoverable. In that case if\n     * value=true a reconnect will be attempted.  If value=false a manual call to connect is need for the device to\n     * be connected again.\n     * @param {boolean} value - The value to set\n     */\n    set automaticReconnectOnConnectionLostEnabled(value) {\n        this._automaticReconnectOnConnectionLostEnabled = (value === true);\n    }\n\n    /**\n     * Should the BLE wrapper automatically send a disconnect if an 'Operation failed' message is received\n     * @return {boolean}\n     */\n    get disconnectOnOperationFailedBLEError() {\n        return this._disconnectOnOperationFailedBLEError;\n    }\n\n    /**\n     * Set whether the BLE wrapper should automatically send a disconnect if an 'Operation failed' message is received\n     * @param {boolean} value - The value to set\n     */\n    set disconnectOnOperationFailedBLEError(value) {\n        this._disconnectOnOperationFailedBLEError = (value === true);\n    }\n\n    /**\n     * Get the value of the startStopRepeatedScanning config setting.\n     * @return {boolean}. True means the setting is enabled, false if not enabled\n     */\n    get startStopRepeatedScanning() {\n        return this._startStopRepeatedScanning;\n    }\n\n    /**\n     * Set the value of the startStopRepeatedScanning config setting.\n     * The value controls the strategy used while scanning for WeDo SmartHubs. On some Chromebooks the events do not\n     * appear immediately when a scan is running - and given the short time the hubs announce themselves we need to\n     * get the events as fast as possible. So in some scenarios starting and stopping discovery is more effective in\n     * discovering devices.\n     * @param {boolean} value - The value to set. True enables start/stop scanning, False disables it.\n     * @see startStopScanningInterval for controlling how often the scan is\n     */\n    set startStopRepeatedScanning(value) {\n        this._startStopRepeatedScanning = (value === true);\n    }\n\n    /**\n     * Get the value for the registerForCurrentNotifications setting.\n     * @return {boolean}. True means register for the current notifications, false to not register for the current\n     * notifications.\n     */\n    get registerForCurrentNotifications() {\n        return this._registerForCurrentNotifications;\n    }\n\n    /**\n     * Set the value for the registerForCurrentNotifications setting.\n     * @param {boolean} value. True means register for the current notifications, false to not register for the current\n     * notifications.\n     */\n    set registerForCurrentNotifications(value) {\n        this._registerForCurrentNotifications = (value === true);\n    }\n\n    /**\n     * Get the value for the registerForVoltageNotifications setting.\n     * @return {boolean}. True means register for the voltage notifications, false to not register for the voltage\n     * notifications.\n     */\n    get registerForVoltageNotifications() {\n        return this._registerForVoltageNotifications;\n    }\n\n    /**\n     * Set the value for the registerForVoltageNotifications setting.\n     * @param {boolean} value. True means register for the voltage notifications, false to not register for the voltage\n     * notifications.\n     */\n    set registerForVoltageNotifications(value) {\n        this._registerForVoltageNotifications = (value === true);\n    }\n\n    /**\n     * Get the value for the registerForBatteryLevelNotifications setting.\n     * @return {boolean}. True means register for the battery level notifications, false to not register for the battery\n     * level notifications.\n     */\n    get registerForBatteryLevelNotifications() {\n        return this._registerForBatteryLevelNotifications;\n    }\n\n    /**\n     * Set the value for the registerForBatteryLevelNotifications setting.\n     * @param {boolean} value. True means register for the battery level notifications, false to not register for the battery\n     * level notifications.\n     */\n    set registerForBatteryLevelNotifications(value) {\n        this._registerForBatteryLevelNotifications = (value === true);\n    }\n\n    /**\n     * Alternative function for checking the value of the fireDeviceInfoUpdateOnTheOnDeviceEvents setting\n     * @return {boolean}\n     */\n    shouldUpdateOnTheOnDeviceEvents() {\n        return this.fireDeviceInfoUpdateOnTheOnDeviceEvents;\n    }\n\n    /**\n     * Alternative function for checking the value of the automaticReconnectOnConnectionLostEnabled setting\n     * @return {boolean}\n     */\n    shouldAutomaticallyReconnectOnConnectionLost() {\n        return this.automaticReconnectOnConnectionLostEnabled;\n    }\n\n    /**\n     * Alternative function for checking the value of the startStopRepeatedScanning setting\n     * @return {boolean}\n     */\n    shouldStartStopRepeatedScanning() {\n        return this.startStopRepeatedScanning;\n    }\n\n    /**\n     * Alternative function for checking the value of the registerForCurrentNotifications setting\n     * @return {boolean}\n     */\n    shouldRegisterForCurrentNotifications() {\n        return this.registerForCurrentNotifications;\n    }\n\n    /**\n     * Alternative function for checking the value of the registerForVoltageNotifications setting\n     * @return {boolean}\n     */\n    shouldRegisterForVoltageNotifications() {\n        return this.registerForVoltageNotifications;\n    }\n\n    /**\n     * Get the value for the connectRequestTimeoutInterval setting.\n     * @return {number}. The interval in milliseconds before deciding that the connect attempt failed.\n     */\n    get connectRequestTimeoutInterval() {\n        return this._connectRequestTimeoutInterval;\n    }\n\n    /**\n     * Set the value for the connectRequestTimeoutInterval setting.\n     * @param {number} value. The interval in milliseconds before deciding that the connect attempt failed.\n     */\n    set connectRequestTimeoutInterval(value) {\n        this._connectRequestTimeoutInterval= Math.max(0, value);\n    }\n\n    /**\n     * Get the value for the startStopScanningInterval setting.\n     * @return {number}. The interval in milliseconds to let scan start run before stopping the scan. NOTE: This\n     * setting only has effect if you also enable startStopScanning. @see\n     * LegoDeviceManagerConfig#startStopRepeatedScanning\n     */\n    get startStopScanningInterval() {\n        return this._startStopScanningInterval;\n    }\n\n    /**\n     * Set the value for the startStopScanningInterval setting.\n     * @param {number} value. The interval in milliseconds to let scan start run before stopping the scan. NOTE: This\n     * setting only has effect if you also enable startStopScanning. @see\n     * LegoDeviceManagerConfig#startStopRepeatedScanning\n     */\n    set startStopScanningInterval(value) {\n        this._startStopScanningInterval = Math.max(0, value);\n    }\n\n    get disableAdvertisingWindowSizeMillis() {\n        return this._disableAdvertisingWindowSizeMillis;\n    }\n\n    set disableAdvertisingWindowSizeMillis(value) {\n        this._disableAdvertisingWindowSizeMillis = Math.max(20, value);\n    }\n\n    /**\n     * Get the value for the batteryPollingInterval setting.\n     * @return {number}. The time in milliseconds to wait before reading the battery level\n     */\n     get batteryPollingInterval() {\n        return this._batteryPollingInterval;\n    }\n\n    /**\n     * Set the value for the batteryPollingInterval setting.\n     * @param {number} value. The time in milliseconds to wait before reading the battery level\n     */\n    set batteryPollingInterval(value) {\n        this._batteryPollingInterval = Math.max(0, value);\n    }\n\n    /**\n     * Get the value for the handleUpdatedInputRetryDelay setting.\n     * @return {number}. The time in milliseconds to wait before retrying to handle the updated input\n     */\n    get handleUpdatedInputRetryDelay() {\n        return this._handleUpdatedInputRetryDelay;\n    }\n\n    /**\n     * Set the value for the handleUpdatedInputRetryDelay setting.\n     * @param {number} value. The time in milliseconds to wait before retrying to handle the updated input\n     */\n    set handleUpdatedInputRetryDelay(value) {\n        this._handleUpdatedInputRetryDelay = Math.max(0, value);\n    }\n\n    /**\n     * Get the value for the synchronousOperationsQueuePollDelay setting.\n     * @return {number}. The time in milliseconds to wait before polling the queue for items to process\n     */\n    get synchronousOperationsQueuePollDelay() {\n        return this._synchronousOperationsQueuePollDelay;\n    }\n\n    /**\n     * Set the value for the synchronousOperationsQueuePollDelay setting.\n     * @param {number} value. The time in milliseconds to wait before polling the queue for items to process\n     */\n    set synchronousOperationsQueuePollDelay(value) {\n        this._synchronousOperationsQueuePollDelay = Math.max(0, value);\n    }\n\n    /**\n     * Get the value for the lookupServicesWhenConnectedRetryDelay setting.\n     * @return {number}. The time in milliseconds to wait before retrying to lookup the BLE services and\n     * characteristics after connecting\n     */\n    get lookupServicesWhenConnectedRetryDelay() {\n        return this._lookupServicesWhenConnectedRetryDelay;\n    }\n\n    /**\n     * Set the value for the lookupServicesWhenConnectedRetryDelay setting.\n     * @param {number} value. The time in milliseconds to wait before retrying to lookup the BLE services and\n     * characteristics after connecting\n     */\n    set lookupServicesWhenConnectedRetryDelay(value) {\n        this._lookupServicesWhenConnectedRetryDelay = Math.max(0, value);\n    }\n\n    /**\n     * Get the value for the lookupServicesWhenConnectedRetryMaxCount setting.\n     * @return {number}. The number of times to retry lookup of the BLE services and\n     * characteristics after connecting\n     */\n    get lookupServicesWhenConnectedRetryMaxCount() {\n        return this._lookupServicesWhenConnectedRetryMaxCount;\n    }\n\n    /**\n     * Set the value for the lookupServicesWhenConnectedRetryMaxCount setting.\n     * @param {number} value. The number of times to retry lookup of the BLE services and\n     * characteristics after connecting\n     */\n    set lookupServicesWhenConnectedRetryMaxCount(value) {\n        this._lookupServicesWhenConnectedRetryMaxCount = Math.max(0, value);\n    }\n\n    /**\n     * Get the value for the updateAdvertisingDevicesIntervalMillis setting.\n     * @return {number}. The time in milliseconds to wait before pruning the list of advertising devices\n     */\n    get updateAdvertisingDevicesIntervalMillis() {\n        return this._updateAdvertisingDevicesIntervalMillis;\n    }\n\n    /**\n     * Set the value for the updateAdvertisingDevicesIntervalMillis setting.\n     * @param {number} value. The time in milliseconds to wait before pruning the list of advertising devices\n     */\n    set updateAdvertisingDevicesIntervalMillis(value) {\n        this._updateAdvertisingDevicesIntervalMillis = Math.max(0, value);\n    }\n\n    get startCharacteristicNotificationsWhenConnectedRetryDelay() {\n        return this._startCharacteristicNotificationsWhenConnectedRetryDelay;\n    }\n\n    set startCharacteristicNotificationsWhenConnectedRetryDelay(value) {\n        this._startCharacteristicNotificationsWhenConnectedRetryDelay = value;\n    }\n\n    get startCharacteristicNotificationsWhenConnectedRetryMax() {\n        return this._startCharacteristicNotificationsWhenConnectedRetryMax;\n    }\n\n    set startCharacteristicNotificationsWhenConnectedRetryMax(value) {\n        this._startCharacteristicNotificationsWhenConnectedRetryMax = value;\n    }\n\n    get serviceCountComplete() {\n        return this._serviceCountComplete;\n    }\n\n    set serviceCountComplete(value) {\n        this._serviceCountComplete = value;\n    }\n\n    get waitForAddServicesBeforePollingMillis() {\n        return this._waitForAddServicesBeforePollingMillis;\n    }\n\n    set waitForAddServicesBeforePollingMillis(value) {\n        this._waitForAddServicesBeforePollingMillis = value;\n    }\n\n    get filterFallbackEnabled() {\n        return this._filterFallbackEnabled;\n    }\n\n    set filterFallbackEnabled(value) {\n        this._filterFallbackEnabled = value;\n    }\n\n    get usePreviouslySeenCacheAsFallbackFilter() {\n        return this._usePreviouslySeenCacheAsFallbackFilter;\n    }\n\n    set usePreviouslySeenCacheAsFallbackFilter(value) {\n        this._usePreviouslySeenCacheAsFallbackFilter = value;\n    }\n\n}\n\n/**\n * This class is the entry point for a client to use the SDK for communicating with a LEGO smarthub device.\n *\n * @see {@link LegoDeviceManagerImpl#getInstance}\n */\nexport default class LegoDeviceManagerImpl {\n\n    /**\n     * @static {LegoDeviceManagerImpl}\n     */\n    static instance = null;\n\n    _config = new LegoDeviceManagerConfig();\n    _deviceCallbackHelpers = new Map();\n    _bluetoothDeviceManager = null;\n    scanListenerCallbackId = null;\n    connectListenerCallbackId = null;\n    callbackHelper = new DeviceManagerCallbackHelper();\n\n    /**\n     * Use this function for getting the client a configured LegoDeviceManagerImpl that can be used for starting\n     * BLE scans, connecting and disconnecting to a device and so on.\n     *\n     * @returns {LegoDeviceManagerImpl} singleton instance that can be used for the lifespan of the session.\n     */\n    static getInstance() {\n        if (LegoDeviceManagerImpl.instance === null) {\n            LegoDeviceManagerImpl.instance = new LegoDeviceManagerImpl();\n            LegoDeviceManagerImpl.instance.registerDisconnectListener();\n        }\n        if (LegoDeviceManagerImpl.instance.config.listenForConnectionsAllTheTime) {\n            LegoDeviceManagerImpl.instance.registerConnectListener();\n        }\n\n        return LegoDeviceManagerImpl.instance;\n    }\n\n    constructor() {\n        this._bluetoothDeviceManager = new LegoBluetoothDeviceManagerImpl(this.getBluetoothAdapter());\n\n    }\n\n    /**\n     * Get the configuration object\n     * @return {LegoDeviceManagerConfig} The config\n     */\n    get config() {\n        return this._config;\n    }\n\n    /**\n     * @return {LegoDeviceManagerConfig} The config\n     * @deprecated Use the config property instead\n     */\n    getConfig() {\n        return this.config;\n    }\n\n    get bluetoothDeviceManager() {\n        return this._bluetoothDeviceManager;\n    }\n\n    get deviceCallbackHelpers() {\n        return this._deviceCallbackHelpers;\n    }\n\n    /**\n     *\n     * @param {string} address - The mac address of the hub\n     * @return {DeviceCallbackHelper} - The helper instance handling callbacks for the hub matching the mac address\n     * parameter\n     */\n    getDeviceCallbackHelper(address) {\n        if (this.deviceCallbackHelpers.has(address)) {\n            return this.deviceCallbackHelpers.get(address);\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Set a devicecallbackhelper for the hub that matches the mac address - if and only if no devicecallbackhelper\n     * already exist for the address.\n     *\n     * @param {string} address - The mac address of the hub\n     * @param {DeviceCallbackHelper} deviceCallbackHelper - The device callbackhelper to set as callback helper\n     * implementation for the hub matching the mac address parameter\n     * @return {boolean} - Return true if there was no devicecallbackhelper for the address and the provided\n     * callbackhelper has been set. False if there was already a devicecallbackhelper for the address and no changes\n     * were made.\n     */\n    setDeviceCallbackHelper(address, deviceCallbackHelper) {\n        if (!this.deviceCallbackHelpers.has(address)) {\n            this.deviceCallbackHelpers.set(address, deviceCallbackHelper);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Remove the devicecallbackhelper for the hub that matches the mac address\n     * @param {string} address - The mac address of the hub\n     * @return {boolean} - True if the helper was found and deleted, false otherwise.\n     */\n    removeDeviceCallbackHelper(address) {\n        return this.deviceCallbackHelpers.delete(address);\n    }\n\n    /**\n     * Start scanning as a Promise\n     *\n     * The scan function is implemented as a promise which means that a client can wait for the scan operation to\n     * finish by using this syntax:\n     * @example\n     * LegoDeviceManagerImpl.getInstance().scan()\n     *      .then(() => {\n     *          // Scan started\n     *      }\n     *      .catch( err => {\n     *          // Scan failed starting - reason stated in error param\n     *      }\n     * )\n     *\n     * @return {Promise} The promise resolves once the scan has started, or rejects if an error occurs when trying\n     * to start the scan.\n     */\n     async scan() {\n        this.scanListenerCallbackId = this.bluetoothDeviceManager.registerCallbackListener(this);\n        await this.bluetoothDeviceManager.scan();\n    }\n\n    /**\n     * Stop scanning as a Promise\n     *\n     * The stopScanning function is implemented as a promise which means that a client can wait for the scan to stop\n     * - or simply fire a stop and not wait around for it to finish.\n     *\n     * @example\n     * LegoDeviceManagerImpl.getInstance().stopScanning()\n     *      .then(() => {\n     *          // Scan stopped\n     *      }\n     *      .catch( err => {\n     *          // Stopping scan failed - reason stated in error param\n     *      }\n     * )\n     *\n     * @return {Promise} The promise resolves once the scan has started, or rejects if an error occurs when trying\n     * to stop the adapter from scanning for devices.\n     */\n    async stopScanning() {\n        if (this.bluetoothDeviceManager !== null) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('bluetoothDeviceManager.stopScanning - begin');\n            }\n            await this.bluetoothDeviceManager.stopScanning();\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('bluetoothDeviceManager.stopScanning - completed');\n            }\n            if (!LegoDeviceManagerImpl.getInstance().config.listenForConnectionsAllTheTime) {\n                if (this.scanListenerCallbackId !== null) {\n                    this.bluetoothDeviceManager.unregisterCallbackListener(this.scanListenerCallbackId);\n                    this.scanListenerCallbackId = null;\n                }\n            }\n        }\n    }\n\n    /**\n     * isScanning as a Promise\n     **\n     * @return {Promise} The promise resolves to either true if the bluetooth adapter is scanning, or false if it is\n     * not.\n     */\n    async isScanning() {\n        if (this.bluetoothDeviceManager !== null) {\n            return await this.bluetoothDeviceManager.isScanning();\n        }\n        return false;\n    }\n\n    /**\n     * ConnectsToDevice\n     *\n     * @param {string} legoDeviceAddress - The mac address of the LEGO hub to connect to\n     * @param {bool} stopScanning  -  Default value is false, set this to true in order to automatically stop\n     * scanning when connecting (on slow hardware the connect attempt may time out if scanning is active during\n     * connect).\n     *\n     * @return {Promise}  The promise resolves when the bluetooth adapter has connected to the device, or rejects\n     * with an error description.\n     */\n    async connectToDevice(legoDeviceAddress, stopScanning = false) {\n        let restoreScanning = false;\n        const legoDevice = this.bluetoothDeviceManager.getLegoBluetoothDeviceWithAddress(legoDeviceAddress);\n        if (legoDevice && legoDevice !== null) {\n            if (stopScanning) {\n                try {\n                    const isScanning = await this.isScanning();\n                    if (isScanning) {\n                        restoreScanning = true;\n                        await this.stopScanning();\n                        if (LDSDKLogger.isTraceEnabled()) {\n                            LDSDKLogger.debug('Scanning stopped as part of connectToDevice');\n                        }\n                    }\n                } catch (err) {\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('In connectToDevice stopScanning failed: ', err);\n                    }\n                }\n            }\n            try {\n                // register a new listener that is active while connecting - unregister in the callbacks\n                this.registerConnectListener();\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug(this.constructor.name + ' connectToDevice \\'' + legoDevice.getName() + '\\' start' );\n                }\n                await this.bluetoothDeviceManager.connectToDevice(legoDevice);\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug(this.constructor.name + ' connectToDevice \\'' + legoDevice.getName() + '\\' done' );\n                }\n                if (restoreScanning) {\n                    try {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug(this.constructor.name + ' connectToDevice \\'' + legoDevice.getName() + '\\'' +\n                                          ' Restarting scan after connect complete' );\n                        }\n                        this.scan();\n                    } catch (err) {\n                        if (LDSDKLogger.isInfoEnabled()) {\n                            LDSDKLogger.info(this.constructor.name + ' connectToDevice \\'' + legoDevice.getName() + '\\'' +\n                                              ' failed starting scan', err);\n                        }\n                    }\n                }\n            } catch (err) {\n                LDSDKLogger.error(this.constructor.name + ' connectToDevice \\'' + legoDevice.getName() + '\\' failed', err);\n                throw err;\n            }\n        } else {\n            LDSDKLogger.error('No LegoBluetoothDeviceImpl found for address', legoDeviceAddress);\n        }\n    }\n\n    /**\n     * @ignore - This is internal functionality\n     *\n     * Registers the listener responsible for handling connect callbacks.\n     *\n     * Can be called repeatedly - registers a new listener only if none is registered in advance\n     */\n    registerDisconnectListener() {\n        if (this.disconnectListenerCallbackId === null) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Registering proxy for disconnect listener - registerCallbackListener');\n            }\n            const self = this;\n            const proxyDisconnectListener =\n            {\n                onDidDisconnectFromDevice: function(device, autoReconnect, error) {\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('Proxy disconnect listener forwarding to ' + self.constructor.name + '.onDidDisconnectFromDevice');\n                    }\n                    self.onDidDisconnectFromDevice(device, autoReconnect, error);\n                }\n            };\n            this.disconnectListenerCallbackId = this.bluetoothDeviceManager.registerCallbackListener(proxyDisconnectListener);\n        }\n    }\n\n\n    /**\n     * @ignore - This is internal functionality\n     *\n     * Registers the listener responsible for handling connect callbacks.\n     *\n     * Can be called repeatedly - registers a new listener only if none is registered in advance\n     */\n    registerConnectListener() {\n        if (this.connectListenerCallbackId === null) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('connectToDevice - registerCallbackListener');\n            }\n            this.connectListenerCallbackId = this.bluetoothDeviceManager.registerCallbackListener(this);\n        }\n    }\n\n    /**\n     * @ignore - This is internal functionality\n     *\n     * Unregisters the listener responsible for handling connect callbacks.\n     *\n     * Can be called repeatedly - unregisters the listener only if none is registered in advance\n     */\n    unregisterConnectListener() {\n        if (this.connectListenerCallbackId !== null) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('connectToDevice - UnregisterCallbackListener ' + this.connectListenerCallbackId);\n            }\n            this.bluetoothDeviceManager.unregisterCallbackListener(this.connectListenerCallbackId);\n            this.connectListenerCallbackId = null;\n        } else {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('connectToDevice - No connectListenerCallbackId found to unregister');\n            }\n        }\n    }\n\n    /**\n     * Set the timeout before aborting a connect attempt - the default value is specified in {@link LegoDeviceManager.DEFAULT_CONNECT_REQUEST_TIMEOUT}\n     * @param timeoutInterval - The timeout in milliseconds\n     */\n    setConnectRequestTimeoutInterval(timeoutInterval) {\n        this.config.connectRequestTimeoutInterval = timeoutInterval;\n    }\n\n    /**\n     * Get the timout interval\n     * @return {number} The timeout interval in milliseconds\n     */\n    getConnectRequestTimeoutInterval() {\n        return this.config.connectRequestTimeoutInterval;\n    }\n\n    /**\n     * Sets whether or not to autmatically reconnect to a device if the connection is lost. Default value is false.\n     * @param {bool} enabled - Enabled=true, disabled=false\n     */\n    setAutomaticReconnectOnConnectionLostEnabled(enabled) {\n        this.config.automaticReconnectOnConnectionLostEnabled = enabled;\n    }\n\n    /**\n     * Return whether or not automatically reconnect is enabled.\n     * @return {boolean}\n     */\n    isAutomaticReconnectOnConnectionLostEnabled() {\n        return this.config.automaticReconnectOnConnectionLostEnabled;\n    }\n\n    /**\n     * Cancel connecting to a device\n     *\n     * @param {string} legoDeviceAddress - The mac address of the device to disconnect\n     * @return {Promise} Returns a promise that resolves when the connection has been canceled\n     */\n    async cancelDeviceConnection(legoDeviceAddress) {\n        await this.bluetoothDeviceManager.cancelDeviceConnection(legoDeviceAddress);\n    }\n\n    /**\n     *\n     * @param {number} connectionState - @see {@link StateEnum}\n     * @param {boolean} [simple = true] - True means get a simple device representation, false will return the full device representation\n     * @return {SimpleList.<LegoBluetoothDeviceImpl>}\n     */\n    devicesInState(connectionState, simple = true) {\n        const devicesInStateList = this.bluetoothDeviceManager.devicesInState(connectionState);\n        if (simple) {\n            const simpleDevices = new SimpleList();\n            for (let i = 0; i < devicesInStateList.length(); i++) {\n                simpleDevices.add(devicesInStateList.get(i).getSimpleDevice());\n            }\n            return simpleDevices;\n        } else {\n            return devicesInStateList;\n        }\n    }\n\n    /**\n     * Get a cached device for the given MAC address.\n     * @param {string} address - The MAC address of the device\n     * @param {boolean} simple - Optional parameter - defaults to true. True means get a simple device, false gets\n     * the full device representation\n     * @return {LegoBluetoothDeviceImpl} - Returns null if not found in the cache\n     */\n    getDevice(address, simple = true) {\n        const legoDevice = this.bluetoothDeviceManager.getLegoBluetoothDeviceWithAddress(address);\n        if (legoDevice === null) {\n            return null;\n        }\n        if (simple) {\n            return legoDevice.getSimpleDevice();\n        } else {\n            return legoDevice;\n        }\n    }\n\n    /**\n     * Get a list of all known devices\n     *\n     * @param {boolean} simple - Optional parameter - defaults to true. True means get a simple device, false gets\n     * the full device representation\n     * @return {SimpleList<LegoBluetoothDeviceImpl>}\n     */\n    allDevices(simple = true) {\n        const devices = new SimpleList();\n        if (this.bluetoothDeviceManager !== null) {\n            const allBluetoothDevices = this.bluetoothDeviceManager.allDevices();\n            for (let i = 0; i < allBluetoothDevices.length(); i++) {\n                if (simple) {\n                    devices.add(allBluetoothDevices.get(i).getSimpleDevice());\n                } else {\n                    devices.add(allBluetoothDevices.get(i));\n                }\n            }\n        }\n        if (LDSDKLogger.isTraceEnabled()) {\n            LDSDKLogger.debug(this.constructor.name + '.allDevices returning ' + devices.length() + ' devices');\n        }\n        return devices;\n    }\n\n    /**\n     * Register a callback listener for receiving callbacks during scanning and connection attempts\n     * @see {@link DeviceManagerCallbackHelper}\n     *\n     * @param {object} listener - An object that has functions that match the expected names and signatures of {@link DeviceManagerCallbackHelper}\n     * @return {string} - The id of the listener registered. This id can be used for unregistering the listener later.\n     */\n    registerCallbackListener(listener) {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Registering DeviceManagerCallbackHelper listener of type: ', listener.constructor.name);\n        }\n        return this.callbackHelper.registerCallbackListener(listener);\n    }\n\n    /**\n     * Unregisters the callback listener with the given id.\n     *\n     * @param {string} listenerId - The listener id returned when registering the listener.\n     * @return {boolean} - Returns true if a listener was unregistered, or false if none with that id was found\n     */\n    unregisterCallbackListener(listenerId) {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Unregistering DeviceManagerCallbackHelper listener with id: ', listenerId);\n        }\n        return this.callbackHelper.unregisterCallbackListener(listenerId);\n    }\n\n    /**\n     * Register a callback listener for Device callbacks\n     *\n     * @param {string} address\n     * @param {DeviceCallbackHelper} listener\n     * @return {string|null}. If successful return the listenerId the callback listener has been registered under\n     * or return null if device with address not found.\n     * @see {DeviceCallbackHelper}\n     */\n    registerDeviceCallbackListener(address, listener) {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Registering DeviceCallback listener of type: ', listener.constructor.name + ', for' +\n                             ' device address: ' + address);\n        }\n        const cachedDevice = this.getDevice(address, false);\n        if (cachedDevice && cachedDevice !== null) {\n            return cachedDevice.registerCallbackListener(listener);\n        }\n        return null;\n    }\n\n    /**\n     * Unregister a Device callback listener with the given listenerId\n     *\n     * @param {string} address - The mac address of the device\n     * @param {string} listenerId - The listenerId returned when registering the listener.\n     * @return {boolean}. If true the listener was found and unregister, false otherwise.\n     * @see {DeviceCallbackHelper}\n     */\n    unregisterDeviceCallbackListener(address, listenerId) {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Unregistering DeviceCallback listener with id: ', listenerId+ ', for device address: ' + address);\n        }\n        const cachedDevice = this.getDevice(address, false);\n        if (cachedDevice && cachedDevice !== null) {\n            return cachedDevice.unregisterCallbackListener(listenerId);\n        }\n        return false;\n    }\n\n    /**\n     * Register a callback listener for Service callbacks\n     *\n     * @param {string} address - The mac address of the hub\n     * @param {string} serviceConnectId - The connect id of the service\n     * @param {object} listener - Implementation of object that has functions that can be called back when the\n     * service data changes.\n     * @return {string|null}. If successful return the listenerId the callback listener has been registered under\n     * or return null if device with address not found.\n     * @see {LegoServiceCallbackHelper}\n     */\n    registerServiceCallbackListener(address, serviceConnectId, listener) {\n        const service = this.getDeviceServiceWithConnectId(address, serviceConnectId, false);\n        if (service && service !== null) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('Service \"'+ service.getServiceName() +'\" found for [address: ' +address+ ', connectId: ' + serviceConnectId + '] registering service listener');\n            }\n            return service.registerCallbackListener(listener);\n        } else {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('No service found for [address: ' +address+ ', connectId: ' + serviceConnectId + '] unable to register listener');\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Unregister a service callback listener with the given listenerId\n     *\n     * @param {string} address - The mac address of the hub\n     * @param {string} serviceConnectId - The connect id of the service\n     * @param {string} listenerId - The listenerId returned when registering the listener.\n     * @return {boolean}. If true the listener was found and unregister, false otherwise.\n     * @see {LegoServiceCallbackHelper}\n     */\n    unregisterServiceCallbackListener(address, serviceConnectId, listenerId) {\n        const service = this.getDeviceServiceWithConnectId(address, serviceConnectId, false);\n        if (service && service !== null) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('Service \"'+ service.getServiceName() +'\" found for [address: ' +address+ ', connectId: ' + serviceConnectId + '] unregistering service listener with id: ' + listenerId);\n            }\n            return service.unregisterCallbackListener(listenerId);\n        } else {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('No service found for [address: ' +address+ ', connectId: ' + serviceConnectId + '] unable to unregister listener');\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Get a specific service from the device with the given address.\n     *\n     * @param {string} address - The mac address of the hub\n     * @param {number} serviceConnectId - The connect id of the service connected to the hub\n     * @param {boolean} simple - Optional argument - defaults to a simple representation. If true a simple version of the object is returned, if false the full object is returned\n     * @return {LegoService|null} - The LegoService instance found, or null if either no or no service is found\n     */\n    getDeviceServiceWithConnectId(address, serviceConnectId, simple = true) {\n        const cachedDevice = this.getDevice(address, false);\n        if (cachedDevice && cachedDevice !== null) {\n            const fullService = cachedDevice.getService(serviceConnectId);\n            if (simple) {\n                return fullService.getSimpleService();\n            } else {\n                return fullService;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Get a specific service from the device with the given address.\n     * @param {{deviceId: !string, connectInfo: !Object} simpleService\n     * @param {boolean} simple - Optional argument - defaults to a simple representation. If true a simple version of the object is returned, if false the full object is returned\n     */\n    getDeviceService(simpleService, simple = true) {\n        return this.getDeviceServiceWithConnectId(simpleService.deviceId, simpleService.connectInfo.connectId, simple);\n    }\n\n    /**\n     * Set the name of the hub with the given address.\n     * @param {string} address - The mac address of the hub\n     * @param {string} name\n     */\n    setDeviceName(address, name) {\n        const cachedDevice = this.getDevice(address, false);\n        if (cachedDevice && cachedDevice !== null) {\n            cachedDevice.setName(name);\n        }\n    }\n\n    /**\n     * Get the current SDK version\n     * @return {string} - The sdk version.\n     */\n    getSDKVersion() {\n        return '2.4.2.236'; // REPLACE_MARKER_DO_NOT_DELETE // TODO make a config where this can be read from\n    }\n\n    /**\n     * This function is called once for each device found while the sdk is scanning for devices\n     * @param {LegoBluetoothDeviceImpl} device\n     */\n    onDeviceDidAppear(device) {\n        if (LDSDKLogger.isDebugEnabled()) {\n            if (this.callbackHelper && this.callbackHelper !== null) {\n                LDSDKLogger.debug('onDeviceDidAppear - Calling callbackHelper.performDeviceAppearedCallback - ' + StringUtils.getDeviceString(device));\n            } else {\n                LDSDKLogger.warn('onDeviceDidAppear - NOT Calling callbackHelper.performDeviceAppearedCallback - callbackHelper is not initialized. Name: ' + device.getName() + ' ['+device.getAddress()+']');\n            }\n        }\n        // this.bluetoothDeviceManager.devices.set(device.getAddress(), device);\n        this.callbackHelper.performDeviceAppearedCallback(device);\n    }\n\n    /**\n     * This function is called once for each device that was seen, but is no longer found while the sdk is scanning for\n     * devices\n     * @param {LegoBluetoothDeviceImpl} device\n     */\n    onDeviceDidDisappear(device) {\n        if (device.getConnectState() !== StateEnum.DisconnectedNotAdvertising) {\n            device.updateConnectionStateUponConnectionStateChange(null, StateEnum.DisconnectedNotAdvertising);\n        }\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('onDeviceDidDisappear - Calling callbackHelper.performDeviceDisappearedCallback - ' + StringUtils.getDeviceString(device) +'. Devices size: ' + this.bluetoothDeviceManager.devices.size);\n        }\n        try {\n            this.callbackHelper.performDeviceDisappearedCallback(device);\n        } catch (err) {\n            if (LDSDKLogger.isErrorEnabled()) {\n                LDSDKLogger.error('Failed performDeviceDisappearedCallback for ' + StringUtils.getDeviceString(device) + '. Error: ', err);\n            }\n        }\n        this.bluetoothDeviceManager.devices.delete(device.getAddress());\n    }\n\n    /**\n     * Called when the sdk will start connecting to a device\n     * @param {LegoBluetoothDeviceImpl} device\n     */\n    onWillStartConnectingToDevice(device) {\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('onWillStartConnectingToDevice - Calling' +\n                              ' callbackHelper.performWillStartConnectingToDeviceCallback - ' + StringUtils.getDeviceString(device));\n        }\n        if (!this.config.listenForConnectionsAllTheTime) {\n            this.registerConnectListener(); // Register connect callback listener\n        }\n        this.callbackHelper.performWillStartConnectingToDeviceCallback(device);\n    }\n\n    /**\n     *\n     * @param {LegoBluetoothDeviceImpl} device\n     * @param autoReconnect\n     * @param error\n     */\n    onDidFailToConnectToDevice(device, autoReconnect, error) {\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('onDidFailToConnectToDevice - Calling callbackHelper.performDidFailToConnectToDevice - ' + StringUtils.getDeviceString(device));\n        }\n        try {\n            this.callbackHelper.performDidFailToConnectToDevice(device, autoReconnect, error);\n        } catch (err) {\n            if (LDSDKLogger.isErrorEnabled()) {\n                LDSDKLogger.error('onDidFailToConnectToDevice - failed' +\n                                  ' callbackHelper.performDidFailToConnectToDevice - ' + StringUtils.getDeviceString(device) + '. Error: ', err);\n            }\n        }\n        if (!this.config.listenForConnectionsAllTheTime) {\n            this.unregisterConnectListener();\n        }\n    }\n\n    /**\n     *\n     * @param {LegoBluetoothDeviceImpl} device - The bluetooth device\n     * @param {bool} autoReconnect - Automatically reconnect if the device appears again\n     * @param {string} error - If an error occurred this parameter will be defined and contain the error\n     */\n    onDidDisconnectFromDevice(device, autoReconnect, error) {\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('onDidDisconnectFromDevice - Calling callbackHelper.performDidDisconnectFromDevice - ' +StringUtils.getDeviceString(device));\n        }\n        this.callbackHelper.performDidDisconnectFromDevice(device, autoReconnect, error);\n    }\n\n    /**\n     *\n     * @param {LegoBluetoothDeviceImpl} device\n     *\n     * @return {Promise}\n     */\n    async onDidStartInterrogatingDevice(device) {\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('onDidStartInterrogatingDevice - Calling callbackHelper.performDidStartInterrogatingDevice - ' +StringUtils.getDeviceString(device));\n        }\n        await this.callbackHelper.performDidStartInterrogatingDevice(device);\n    }\n\n    /**\n     * When the device has been interrogated abouts its services and characteristics this function is called. This\n     * signals that the connection attempt was successful.\n     *\n     * @param {LegoBluetoothDeviceImpl} device\n     */\n    onDidFinishInterrogatingDevice(device) {\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('onDidFinishInterrogatingDevice - Calling callbackHelper.performDidFinishInterrogatingDevice - ' + StringUtils.getDeviceString(device));\n        }\n        try {\n            this.callbackHelper.performDidFinishInterrogratingDevice(device);\n        } catch (err) {\n            if (LDSDKLogger.isErrorEnabled()) {\n                LDSDKLogger.error('onDidFinishInterrogatingDevice - failed' +\n                                  ' callbackHelper.performDidFinishInterrogratingDevice - ' + StringUtils.getDeviceString(device) + '. Error: ', err);\n            }\n        }\n        if (!this.config.listenForConnectionsAllTheTime) {\n            this.unregisterConnectListener();\n        }\n    }\n\n    /**\n     * Get a bluetoothadapter for\n     * @return {ChromeOsBluetoothAdapterWrapper}\n     */\n    getBluetoothAdapter() {\n        // TODO: Once we want to support web bluetooth, this should return a web bluetooth adapter instead of a ChromeOsBluetoothAdapter\n        // if (chrome !== undefined && chrome.bluetooth !== undefined && chrome.bluetoothLowEnergy !== undefined) {\n            return ChromeOsBluetoothAdapterWrapper.getInstance();\n        // }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/device/LegoDeviceManagerImpl.js","/**\n * Created by frj on 20/02/16.\n */\nimport BaseServiceDefinition from './BaseServiceDefinition';\nimport CharacteristicDefinition from './CharacteristicDefinition';\nimport UuidHelper from '../helpers/UuidHelper';\n\nexport default class DeviceInfoServiceDefinition extends BaseServiceDefinition {\n\n    static DEVICE_INFO_SERVICE_UUID = '180A';\n\n    static DEVICE_INFO_FIRMWARE_REVISION_CHARACTERISTIC_UUID = '2A26';\n    static DEVICE_INFO_HARDWARE_REVISION_CHARACTERISTIC_UUID = '2A27';\n    static DEVICE_INFO_SOFTWARE_REVISION_CHARACTERISTIC_UUID = '2A28';\n    static DEVICE_INFO_MANUFACTURER_NAME_CHARACTERISTIC_UUID = '2A29';\n\n    static instance = null;\n\n    firmwareRevision = null;\n    hardwareRevision = null;\n    softwareRevision = null;\n    manufacturerName = null;\n\n    constructor() {\n        super();\n    }\n\n    static getInstance() {\n        if (DeviceInfoServiceDefinition.instance === null) {\n            DeviceInfoServiceDefinition.instance = new DeviceInfoServiceDefinition();\n            DeviceInfoServiceDefinition.instance.init();\n        }\n        return DeviceInfoServiceDefinition.instance;\n    }\n\n\n    init() {\n        this.serviceUUID = UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_SERVICE_UUID);\n        this.serviceName = 'DeviceInfoService';\n\n        this.firmwareRevision = new CharacteristicDefinition(\n                'FirmwareRevision',\n                this,\n                UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_FIRMWARE_REVISION_CHARACTERISTIC_UUID),\n                true,\n                0/* (BluetoothHelper.Properties.PROPERTY_READ.ordinal()) */,\n                0,\n                0/* (BluetoothHelper.Permissions.PERMISSION_READ.ordinal()) */);\n\n        this.hardwareRevision = new CharacteristicDefinition(\n                'HardwareRevision',\n                this,\n                UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_HARDWARE_REVISION_CHARACTERISTIC_UUID),\n                false,\n                0/* (BluetoothHelper.Properties.PROPERTY_READ.ordinal()) */,\n                0,\n                0/* (BluetoothHelper.Permissions.PERMISSION_READ.ordinal()) */);\n\n        this.softwareRevision = new CharacteristicDefinition(\n                'SoftwareRevision',\n                this,\n                UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_SOFTWARE_REVISION_CHARACTERISTIC_UUID),\n                true,\n                0/* (BluetoothHelper.Properties.PROPERTY_READ.ordinal()) */,\n                0,\n                0/* (BluetoothHelper.Permissions.PERMISSION_READ.ordinal()) */);\n\n        this.manufacturerName = new CharacteristicDefinition(\n                'ManufacturerName',\n                this,\n                UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_MANUFACTURER_NAME_CHARACTERISTIC_UUID),\n                true,\n                0/* (BluetoothHelper.Properties.PROPERTY_READ.ordinal()) */,\n                0,\n                0/* (BluetoothHelper.Permissions.PERMISSION_READ.ordinal()) */);\n\n        this.characteristicDefinitions.add(this.firmwareRevision);\n        this.characteristicDefinitions.add(this.hardwareRevision);\n        this.characteristicDefinitions.add(this.softwareRevision);\n        this.characteristicDefinitions.add(this.manufacturerName);\n    }\n\n    getFirmwareRevision() {\n        return this.firmwareRevision;\n    }\n\n    getHardwareRevision() {\n        return this.hardwareRevision;\n    }\n\n    getSoftwareRevision() {\n        return this.softwareRevision;\n    }\n\n    getManufacturerName() {\n        return this.manufacturerName;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/service_definitions/DeviceInfoServiceDefinition.js","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/get-iterator.js\n// module id = 33\n// module chunks = 0","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_fails.js\n// module id = 34\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iterators.js\n// module id = 35\n// module chunks = 0","import SimpleList from '../helpers/SimpleList';\nimport LDSDKLogger from '../helpers/LDSDKLogger';\n\n/**\n * Created by frj on 22/02/16.\n */\nexport default class BaseServiceDefinition {\n    serviceName = null;\n    serviceUUID = null;\n    characteristicDefinitions = new SimpleList();\n    characteristicUUIDs = new SimpleList();\n\n     constructor() {\n     }\n\n    getServiceName() {\n        return this.serviceName;\n    }\n\n    getServiceUUID() {\n        return this.serviceUUID;\n    }\n\n    matchesService(service) {\n         if (service && service !== null) {\n             return this.serviceUUID === service.uuid;\n         } else {\n             return false;\n         }\n    }\n\n    characteristicForDefinition(definition, service) {\n        for (let i = 0; i < service.getCharacteristics().length; i++) {\n            const characteristic = service.getCharacteristics()[i];\n            if (characteristic.uuid === definition.getUuid()) {\n                return characteristic;\n            }\n        }\n        return null;\n    }\n\n    characteristicUUIDs() {\n        if (this.characteristicUUIDs === null) {\n            this.characteristicUUIDs = [this.characteristicDefinitions.length];\n\n            for (let i = 0; i < this.characteristicDefinitions.length; i++) {\n                const definition = this.characteristicDefinitions[i];\n                this.characteristicUUIDs.push(definition.getUuid());\n            }\n        }\n        return this.characteristicUUIDs;\n    }\n\n    characteristicDefinitionWithUUID(uuid) {\n        for (let i = 0; i < this.characteristicDefinitions.length; i++) {\n            const definition = this.characteristicDefinitions[i];\n            if (definition.getUuid() === uuid) {\n                return definition;\n            }\n        }\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info(`Did not find characteristic with UUID ${uuid} in service ${this.serviceName}`);\n        }\n        return null;\n    }\n\n    toString() {\n        return `< ${this.serviceName}: (${this.serviceUUID}), self.characteristicDefinitions size=${this.characteristicDefinitions.length()} >`;\n    }\n\n    toStringShort() {\n        return `${this.serviceName}(${this.serviceUUID})`;\n    }\n\n    equals(o) {\n        if (this === o) return true;\n        if (o === null || o === undefined || this.constructor.name !== o.constructor.name ) return false;\n        return this.isEqualToDefinition(o);\n    }\n\n    isEqualToDefinition(o) {\n        if (this.characteristicDefinitions !== null ? !this.characteristicDefinitions.equals(o.characteristicDefinitions) : o.characteristicDefinitions !== null) {\n            return false;\n        }\n        if (this.characteristicUUIDs !== null ? !this.characteristicUUIDs.equals(o.characteristicUUIDs) : o.characteristicUUIDs !== null) {\n            return false;\n        }\n        if (this.serviceName !== null ? !this.serviceName.equals(o.serviceName) : o.serviceName !== null) {\n            return false;\n        }\n        if (this.serviceUUID !== null ? !this.serviceUUID.equals(o.serviceUUID) : o.serviceUUID !== null) {\n            return false;\n        }\n        return true;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/service_definitions/BaseServiceDefinition.js","import IOServiceDefinition from './IOServiceDefinition';\nimport DeviceInfoServiceDefinition from './DeviceInfoServiceDefinition';\nimport DeviceServiceDefinition from './DeviceServiceDefinition';\nimport BatteryServiceDefinition from './BatteryServiceDefinition';\n/**\n * Created by frj on 19/02/16.\n */\n\nexport default class BluetoothServiceDefinition {\n\n    static ioServiceDefinition() {\n        return IOServiceDefinition.getInstance();\n    }\n\n    static deviceServiceDefinition() {\n        return DeviceServiceDefinition.getInstance();\n    }\n\n    static deviceInfoServiceDefinition() {\n        return DeviceInfoServiceDefinition.getInstance();\n    }\n\n    static batteryServiceDefinition() {\n        return BatteryServiceDefinition.getInstance();\n    }\n\n    static serviceDefinitionWithUUID(serviceUUID) {\n        if (BluetoothServiceDefinition.ioServiceDefinition().getServiceUUID() === serviceUUID) {\n            return BluetoothServiceDefinition.ioServiceDefinition();\n        } else if (BluetoothServiceDefinition.deviceServiceDefinition().getServiceUUID() === serviceUUID) {\n            return BluetoothServiceDefinition.deviceServiceDefinition();\n        } else if (BluetoothServiceDefinition.deviceInfoServiceDefinition().getServiceUUID() === serviceUUID) {\n            return BluetoothServiceDefinition.deviceInfoServiceDefinition();\n        } else if (BluetoothServiceDefinition.batteryServiceDefinition().getServiceUUID() === serviceUUID) {\n            return BluetoothServiceDefinition.batteryServiceDefinition();\n        }\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/service_definitions/BluetoothServiceDefinition.js","import BluetoothHelper from '../helpers/BluetoothHelper';\nimport LDSDKLogger from '../helpers/LDSDKLogger';\nimport LDSDKError from '../helpers/LDSDKError';\n\n/**\n * Created by frj on 20/02/16.\n */\nexport default class CharacteristicDefinition {\n\n    serviceDefinition = null;\n    name = null;\n    uuid = null;\n    mandatory = false;\n    mandatoryProperties = null;\n    recommendedProperties = null;\n    permissions = null;\n\n    getServiceDefinition() {\n        return this.serviceDefinition;\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    getUuid() {\n        return this.uuid;\n    }\n\n    isMandatory() {\n        return this.mandatory;\n    }\n\n    getMandatoryProperties() {\n        return this.mandatoryProperties;\n    }\n\n    getRecommendedProperties() {\n        return this.recommendedProperties;\n    }\n\n    getPermissions() {\n        return this.permissions;\n    }\n\n    constructor(name, serviceDefinition, uuid, mandatory, mandatoryProperties, recommendedProperties, permissions) {\n        this.name = name;\n        this.serviceDefinition = serviceDefinition;\n        this.uuid = uuid;\n        this.mandatory = mandatory;\n        this.mandatoryProperties = mandatoryProperties;\n        this.recommendedProperties = recommendedProperties;\n        this.permissions = permissions;\n    }\n\n    validateDefinitionIsSatisfiedByCharacteristic(characteristic) {\n\n        if ((this.mandatoryProperties !== 0) && ((characteristic.getProperties() & this.mandatoryProperties) !== 0)) {\n            const errorMessage = `Characteristic ${this.toStringShort()} with properties ${this.stringsFromProperties(characteristic.getProperties())} does not include mandatory properties ${this.stringsFromProperties(this.mandatoryProperties)}`;\n            throw LDSDKError.deviceError(LDSDKError.ErrorCode.BLUETOOTH_INVALID_CHARACTERISTIC_PROPERTIES, errorMessage);\n        }\n\n        if ((this.recommendedProperties !== 0) && ((characteristic.getProperties() & this.recommendedProperties) !== 0)) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn(`Characteristic ${this.toStringShort()} with properties ${this.stringsFromProperties(characteristic.getProperties())} does not include recommended properties ${this.stringsFromProperties(recommendedProperties)}`);\n            }\n        }\n    }\n\n    matchesCharacteristic(characteristic) {\n        if (characteristic && characteristic !== null) {\n            return (this.uuid === characteristic.uuid);\n        } else {\n            return false;\n        }\n    }\n\n    toString() {\n        return `< serviceName=${this.serviceDefinition.serviceName}, UUID=${this.uuid.toString()}, isMandatory=${this.mandatory}, mandatoryProperties=${BluetoothHelper.arrayOfStringsFromCharacteristicProperties(this.mandatoryProperties)}, recommendedProperties=${BluetoothHelper.arrayOfStringsFromCharacteristicProperties(this.recommendedProperties)} >`;\n    }\n\n    toStringShort() {\n        return `${this.serviceDefinition.serviceName}.${this.name}(${this.uuid.toString()}`;\n    }\n\n    stringsFromProperties(properties) {\n        return BluetoothHelper.arrayOfStringsFromCharacteristicProperties(properties);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/service_definitions/CharacteristicDefinition.js","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_cof.js\n// module id = 39\n// module chunks = 0","var def = require('./_object-dp').f\n  , has = require('./_has')\n  , TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_set-to-string-tag.js\n// module id = 40\n// module chunks = 0","'use strict';\nvar $at  = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.string.iterator.js\n// module id = 41\n// module chunks = 0","require('./es6.array.iterator');\nvar global        = require('./_global')\n  , hide          = require('./_hide')\n  , Iterators     = require('./_iterators')\n  , TO_STRING_TAG = require('./_wks')('toStringTag');\n\nfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n  var NAME       = collections[i]\n    , Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/web.dom.iterable.js\n// module id = 42\n// module chunks = 0","/**\n * Created by frj on 12/02/16.\n */\n\n/**\n* @type {object} IOType\n* @property {number} IO_TYPE_MOTOR - A motor - use the SimpleMotor service to communicate with this type of IO. @see\n* {@link SimpleMotor}\n* @property {number} IO_TYPE_VOLTAGE - A Voltage Sensor - use the VoltageSensor to communicate with this type of IO.\n * @see {@link VoltageSensor}\n* @property {number} IO_TYPE_CURRENT - A Current Sensor - use the CurrentSensor to communicate with this type of IO.\n * @see {@link CurrentSensor}\n* @property {number} IO_TYPE_PIEZO_TONE_PLAYER - A Piezo Tone player - use the PiezoTonePlayer to communicate with\n * this type of IO. @see {@link PiezoTonePlayer}\n* @property {number} IO_TYPE_RGB_LIGHT - An RGB light - use the RGBLight to communicate with this type of IO. @see\n * {@link RGBLight}\n* @property {number} IO_TYPE_TILT_SENSOR - A Tilt Sensor - use the TiltSensor to communicate with this type of IO.\n * @see {@link TiltSensor}\n* @property {number} IO_TYPE_MOTION_SENSOR - A Motion Sensor (aka. Detect Sensor) - use the MotionSensor to\n * communicate with this type of IO. @see {@link MotionSensor}\n* @property {number} IO_TYPE_GENERIC - A type unknown to the SDK - use the GenericService to communicate with this\n * type of IO. @see {@link GenericService}\n*\n*/\nexport const IOType = {\n    /**\n     * IO_TYPE_MOTOR is a Motor - use the SimpleMotor to communicate with this type of IO.\n     * @see {@link SimpleMotor}\n     */\n    IO_TYPE_MOTOR: 1,\n\n    /**\n     * A Voltage Sensor - use the VoltageSensor to communicate with this type of IO.\n     * See {VoltageSensor}\n     */\n    IO_TYPE_VOLTAGE: 20,\n\n    /**\n     * A Current Sensor - use the CurrentSensor to communicate with this type of IO.\n     * See {CurrentSensor}\n     */\n    IO_TYPE_CURRENT: 21,\n\n    /**\n     * A Piezo Tone player - use the PiezoTonePlayer to communicate with this type of IO.\n     * See {PiezoTonePlayer}\n     */\n    IO_TYPE_PIEZO_TONE_PLAYER: 22,\n\n    /**\n     * An RGB light - use the RGBLight to communicate with this type of IO.\n     * See {RGBLight}\n     */\n    IO_TYPE_RGB_LIGHT: 23,\n\n    /**\n     * A Tilt Sensor - use the TiltSensor to communicate with this type of IO.\n     * See {TiltSensor}\n     */\n    IO_TYPE_TILT_SENSOR: 34,\n\n    /**\n     * A Motion Sensor (aka. Detect Sensor) - use the MotionSensor to communicate with this type of IO.\n     * See {MotionSensor}\n     */\n    IO_TYPE_MOTION_SENSOR: 35,\n\n    /**\n     * A type unknown to the SDK - use the {GenericService} to communicate with this type of IO.\n     */\n    IO_TYPE_GENERIC: 0,\n\n\n    fromInteger: function (val) {\n        switch (parseInt(val)) {\n            case this.IO_TYPE_MOTOR:\n                return this.IO_TYPE_MOTOR;\n\n            case this.IO_TYPE_VOLTAGE:\n                return this.IO_TYPE_VOLTAGE;\n\n            case this.IO_TYPE_CURRENT:\n                return this.IO_TYPE_CURRENT;\n\n            case this.IO_TYPE_PIEZO_TONE_PLAYER:\n                return this.IO_TYPE_PIEZO_TONE_PLAYER;\n\n            case this.IO_TYPE_RGB_LIGHT:\n                return this.IO_TYPE_RGB_LIGHT;\n\n            case this.IO_TYPE_TILT_SENSOR:\n                return this.IO_TYPE_TILT_SENSOR;\n\n            case this.IO_TYPE_MOTION_SENSOR:\n                return this.IO_TYPE_MOTION_SENSOR;\n\n            default:\n                return this.IO_TYPE_GENERIC;\n        }\n    }\n};\n\nexport default class ConnectInfo {\n\n    constructor(connectId, hubIndex, type, hardwareVersion = null, firmwareVersion = null) {\n        this.connectId = connectId;\n        this.hubIndex = hubIndex;\n        this.type = type;\n        this.hardwareVersion = hardwareVersion;\n        this.firmwareVersion = firmwareVersion;\n\n        this.populateValidTypes();\n    }\n/*\n    constructor(connectId, hubIndex, type) {\n        this(connectId, hubIndex, type, null, null);\n    }\n*/\n    populateValidTypes() {\n        this.validTypes = new Map();\n        const ioType = IOType.IO_TYPE_MOTOR;\n\n        // We use a enum with fall-through (no break statements) to make sure we get all types\n        // this will also give a compile warning if a new type is added that is not in the cases below\n        switch (ioType) {\n            case IOType.IO_TYPE_MOTOR:\n                this.validTypes.set(IOType.IO_TYPE_MOTOR, IOType.IO_TYPE_MOTOR);\n            case IOType.IO_TYPE_VOLTAGE:\n                this.validTypes.set(IOType.IO_TYPE_VOLTAGE, IOType.IO_TYPE_VOLTAGE);\n            case IOType.IO_TYPE_CURRENT:\n                this.validTypes.set(IOType.IO_TYPE_CURRENT, IOType.IO_TYPE_CURRENT);\n            case IOType.IO_TYPE_PIEZO_TONE_PLAYER:\n                this.validTypes.set(IOType.IO_TYPE_PIEZO_TONE_PLAYER, IOType.IO_TYPE_PIEZO_TONE_PLAYER);\n            case IOType.IO_TYPE_RGB_LIGHT:\n                this.validTypes.set(IOType.IO_TYPE_RGB_LIGHT, IOType.IO_TYPE_RGB_LIGHT);\n            case IOType.IO_TYPE_TILT_SENSOR:\n                this.validTypes.set(IOType.IO_TYPE_TILT_SENSOR, IOType.IO_TYPE_TILT_SENSOR);\n            case IOType.IO_TYPE_MOTION_SENSOR:\n                this.validTypes.set(IOType.IO_TYPE_MOTION_SENSOR, IOType.IO_TYPE_MOTION_SENSOR);\n            case IOType.IO_TYPE_GENERIC:\n                this.validTypes.set(IOType.IO_TYPE_GENERIC, IOType.IO_TYPE_GENERIC);\n        }\n\n        this.typeStrings = {};\n        this.typeStrings[IOType.IO_TYPE_MOTOR] = 'IO_TYPE_MOTOR';\n        this.typeStrings[IOType.IO_TYPE_VOLTAGE] = 'IO_TYPE_VOLTAGE';\n        this.typeStrings[IOType.IO_TYPE_CURRENT] = 'IO_TYPE_CURRENT';\n        this.typeStrings[IOType.IO_TYPE_PIEZO_TONE_PLAYER] = 'IO_TYPE_PIEZO_TONE_PLAYER';\n        this.typeStrings[IOType.IO_TYPE_RGB_LIGHT] = 'IO_TYPE_RGB_LIGHT';\n        this.typeStrings[IOType.IO_TYPE_TILT_SENSOR] = 'IO_TYPE_TILT_SENSOR';\n        this.typeStrings[IOType.IO_TYPE_MOTION_SENSOR] = 'IO_TYPE_MOTION_SENSOR';\n        this.typeStrings[IOType.IO_TYPE_GENERIC] = 'IO_TYPE_GENERIC';\n\n    }\n\n    getConnectId() {\n        return this.connectId;\n    }\n\n    getHubIndex() {\n        return this.hubIndex;\n    }\n\n    getType() {\n        return IOType.fromInteger(this.type);\n    }\n\n    getHardwareVersion() {\n        return this.hardwareVersion;\n    }\n\n    getFirmwareVersion() {\n        return this.firmwareVersion;\n    }\n\n    getTypeString() {\n        return this.typeStrings[this.getTypeEnum()];\n    }\n\n    /**\n     * Get the type of the connect info\n     * @return {number} - A number from {@link IOType}\n     */\n    getTypeEnum() {\n        if (this.validTypes.has(this.type)) {\n            return IOType.fromInteger(this.type);\n        } else {\n            return IOType.IO_TYPE_GENERIC;\n        }\n    }\n\n    toString() {\n        return 'ConnectInfo{' +\n                ' connectId=' + this.connectId +\n                ', hubIndex=' + this.hubIndex +\n                ', type=' + this.type +\n                ', firmwareVersion=' + this.firmwareVersion +\n                ', hardwareVersion=' + this.hardwareVersion +\n                '}';\n    }\n\n    equals(o) {\n        if (this === o) return true;\n        if (o === null || this.constructor.name !== o.constructor.name) return false;\n\n        if (this.connectId !== o.connectId) return false;\n        if (this.hubIndex !== o.hubIndex) return false;\n        if (this.type !== o.type) return false;\n        if (this.firmwareVersion && this.firmwareVersion !== null) {\n            if (this.firmwareVersion !== o.firmwareVersion) {\n                return false;\n            }\n        } else {\n            if (o.firmwareVersion && o.firmwareVersion !== null) {\n                return false;\n            }\n        }\n        if (this.hardwareVersion && this.hardwareVersion !== null) {\n            if (this.hardwareVersion !== o.hardwareVersion) {\n                return false;\n            }\n        } else {\n            if (o.hardwareVersion && o.hardwareVersion !== null) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Get a simple connect info representation\n     * @return {{connectId: number, hubIndex: number, type: number, hardwareVersion: string, firmwareVersion: string}}\n     */\n    getSimpleConnectInfo() {\n        return {\n            connectId: this.getConnectId(),\n            hubIndex: this.getHubIndex(),\n            type: this.getTypeEnum(),\n            hardwareVersion: this.getHardwareVersion(),\n            firmwareVersion: this.getFirmwareVersion()\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/device/ConnectInfo.js","/**\n * Created by frj on 22/02/16.\n */\n\n/**\n * Error codes used by the {@link LDSDKError} and its specialized children to report the nature of the error.\n * @property {number} INTERNAL_ERROR - Error code for sdk internal errors\n * @property {number} BLUETOOTH_CONNECTION_TIMEOUT - Error code for Bluetooth connection timeout problems\n * @property {number} BLUETOOTH_CONNECTION_ERROR - Error code for Bluetooth connection error problems\n * @property {number} BLUETOOTH_UNSUPPORTED_FIRMWARE_VERSION - Error code for unsupported firmware version\n * @property {number} BLUETOOTH_UNKNOWN_SERVICE_UUID - Error code for unknown BLE service uuid\n * @property {number} BLUETOOTH_MISSING_CHARACTERISTICS - Error code for a missing BLE characteristic\n * @property {number} BLUETOOTH_INVALID_CHARACTERISTIC_PROPERTIES - Error code for invalid BLE characteristic properties\n */\nexport const ErrorCode = {\n    INTERNAL_ERROR: 1,\n    BLUETOOTH_CONNECTION_TIMEOUT: 10,\n    BLUETOOTH_CONNECTION_ERROR: 11,\n    BLUETOOTH_UNSUPPORTED_FIRMWARE_VERSION: 50,\n    BLUETOOTH_UNKNOWN_SERVICE_UUID: 100,\n    BLUETOOTH_MISSING_CHARACTERISTICS: 105,\n    BLUETOOTH_INVALID_CHARACTERISTIC_PROPERTIES: 110\n};\n\n/**\n * @abstract\n * Base error class - not to be created directly - Use {@link LDSDKError}, or one of its subclasses instead\n */\nclass ExtendableError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        this.message = message;\n        // Error.captureStackTrace(this, this.constructor.name);\n    }\n\n}\n\n/**\n * Main error class for SDK related errors - see {@link ErrorCode} for error codes\n */\nexport default class LDSDKError extends ExtendableError {\n\n    errorCode = null;\n\n    /**\n     * Factory method for creating an error instance to be thrown.\n     *\n     * @param {number} errorCode - see {@link ErrorCode} for valid error codes\n     * @param {string} message - The message for the error\n     * @return {LDSDKError}\n     */\n    static deviceError(errorCode, message) {\n        return new LDSDKError(message, errorCode, null);\n    }\n\n    /**\n     * Constructor\n     * @param {string} message - The message for the error\n     * @param {number} errorCode - see {@link ErrorCode} for valid error codes\n     */\n    constructor(message, errorCode) {\n        super(message);\n        this.errorCode = errorCode;\n    }\n\n    /**\n     * Get the error code\n     * @return {number} - see {@link ErrorCode} for the error types\n     */\n    getErrorCode() {\n        return this.errorCode;\n    }\n\n    /**\n     * User readable (loggable) string representation of the error\n     * @return {string}\n     */\n    toString() {\n        return `${this.name} (code: ${this.getErrorCode()}): ${this.message}`;\n    }\n}\n\n/**\n * Error for internal errors in the SDK\n */\nexport class LDKSDKInternalError extends LDSDKError {\n    constructor(message) {\n        super(message, ErrorCode.INTERNAL_ERROR);\n    }\n}\n\n/**\n * Error to be thrown when connection attempt times out\n */\nexport class LDKSDKBluetoothConnectionTimeout extends LDSDKError {\n    constructor(message) {\n        super(message, ErrorCode.BLUETOOTH_CONNECTION_TIMEOUT);\n    }\n}\n\n/**\n * Error to be thrown when connection fails\n */\nexport class LDKSDKBluetoothConnectionError extends LDSDKError {\n    constructor(message) {\n        super(message, ErrorCode.BLUETOOTH_CONNECTION_ERROR);\n    }\n}\n\n/**\n * Error to be thrown when the firmware version reported by the hub is not supported by the SDK\n */\nexport class LDKSDKBluetoothUnsupportedFirmwareVersion extends LDSDKError {\n    constructor(message) {\n        super(message, ErrorCode.BLUETOOTH_UNSUPPORTED_FIRMWARE_VERSION);\n    }\n}\n\n/**\n * Error to be thrown if the service uuid is not know to the SDK\n */\nexport class LDKSDKBluetoothUnknownServiceUuid extends LDSDKError {\n    constructor(message) {\n        super(message, ErrorCode.BLUETOOTH_UNKNOWN_SERVICE_UUID);\n    }\n}\n\n/**\n * Error to be thrown if BLE characteristics for the hub is missing\n */\nexport class LDKSDKBluetoothMissingCharacteristics extends LDSDKError {\n    constructor(message) {\n        super(message, ErrorCode.BLUETOOTH_MISSING_CHARACTERISTICS);\n    }\n}\n\n/**\n * Error to be thrown if the properties for the characteristic are invalid\n */\nexport class LDKSDKBluetoothInvalidCharacteristicProperties extends LDSDKError {\n    constructor(message) {\n        super(message, ErrorCode.BLUETOOTH_INVALID_CHARACTERISTIC_PROPERTIES);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/LDSDKError.js","/**\n * Created by frj on 22/02/16.\n */\n/**\n * @ignore Internal use only\n */\nexport default class SimpleList {\n\n    constructor() {\n        this.simpleList = [];\n    }\n\n    add(item) {\n        this.simpleList.push(item);\n    }\n\n    push(item) {\n        this.simpleList.push(item);\n    }\n\n    addAll(copyFrom) {\n        for(let i = 0; i < copyFrom.length; i++) {\n            this.add(copyFrom[i]);\n        }\n    }\n\n    get(idx) {\n        if (idx < this.length() && idx >= 0) {\n            return this.simpleList[idx];\n        }\n        return null; // ...or throw error\n    }\n\n    splice(start, deleteCount) {\n        return this.simpleList.splice(start, deleteCount);\n    }\n\n    remove(item) {\n        let idxToRemove = -1;\n        for(let i = 0; i < this.simpleList.length; i++) {\n            if (Object.is(item, this.simpleList[i])) {\n                idxToRemove = i;\n            }\n        }\n        // const idx = this.simpleList.indexOf(item);\n        if (idxToRemove >= 0) {\n            this.simpleList.splice(idxToRemove, 1);\n        }\n    }\n\n    length() {\n        return this.simpleList.length;\n    }\n\n    size() {\n        return this.length();\n    }\n\n    sort(compareFunction) {\n        this.simpleList.sort(compareFunction);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/SimpleList.js","/**\n * Created by frj on 11/02/16.\n */\n\n/**\n * The DataFormat holds information about the format data is communicated for a given service\n */\nexport default class DataFormat {\n\n    /**\n     * Create and initialize a new instance of an DataFormat.\n     * <p/>\n     * Example: When a tilt sensor is in mode 'angle' it will create readings of in the x, y and z-dimension. If the mode is set to SI each\n     * angle will be a float representing with a value between 0 and 90 degrees. To create a data set that tells the SDK how to interpret values\n     * for til tilt sensor in this mode you would write.\n     * <p/>\n     * <code>DataFormat tiltSensorFormat = DataFormat.create('Angle', 0, InputFormatUnit.SI, 3, 4);</code>\n     *\n     * @param {string} modeName         The name of the mode\n     * @param {number} mode             The sensor mode\n     * @param {number} unit             The sensor unit - see {@link InputFormatUnit} for values supported\n     * @param {number} numberOfBytes    The number of bytes in a data set\n     * @param {number} numberOfDataSets The number of data sets\n     *\n     * @return {DataFormat}\n     */\n    static create(modeName, mode, unit, numberOfBytes, numberOfDataSets) {\n        return new DataFormat(modeName, mode, unit, numberOfBytes, numberOfDataSets);\n    }\n\n    /**\n     * @ignore\n     *\n     * @param {string} modeName\n     * @param {number} mode\n     * @param {number} unit\n     * @param {number} numberOfBytes\n     * @param {number} numberOfDataSets\n     */\n    constructor(modeName, mode, unit, numberOfBytes, numberOfDataSets) {\n        this.modeName = modeName;\n        this.mode = mode;\n        this.unit = unit;\n        this.dataSetSize = numberOfBytes;\n        this.dataSetCount = numberOfDataSets;\n    }\n\n    /**\n     * Get the mode name\n     * @return {*}\n     */\n    getModeName() {\n        return this.modeName;\n    }\n\n    /**\n     * Get the mode number\n     * @return {number|*}\n     */\n    getMode() {\n        return this.mode;\n    }\n\n    /**\n     * Get the format unit - see {@link InputFormatUnit} for values supported\n     * @return {number|*}\n     */\n    getUnit() {\n        return this.unit;\n    }\n\n    /**\n     * Get the data set size\n     * @return {number|*}\n     */\n    getDataSetSize() {\n        return this.dataSetSize;\n    }\n\n    /**\n     * Get the data set count\n     * @return {number|*}\n     */\n    getDataSetCount() {\n        return this.dataSetCount;\n    }\n\n    /**\n     * Get a string representation of the DataFormat for logging\n     * @return {string}\n     */\n    toString() {\n        return 'DataFormat{' +\n                'modeName=' +\n                this.modeName +\n                ', unit=' + this.unit +\n                ', dataSetSize=' + this.dataSetSize +\n                ', dataSetCount=' + this.dataSetCount +\n                '}';\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/DataFormat.js","/**\n * Created by frj on 20/02/16.\n */\nimport BaseServiceDefinition from './BaseServiceDefinition';\nimport CharacteristicDefinition from './CharacteristicDefinition';\nimport UuidHelper from '../helpers/UuidHelper';\n\nexport default class DeviceServiceDefinition extends BaseServiceDefinition {\n\n    static HUB_SERVICE_16_BIT_UUID = '1523';\n\n    static HUB_CHARACTERISTIC_NAME_UUID = '1524';\n    static HUB_CHARACTERISTIC_COLOR = '1525';\n    static HUB_CHARACTERISTIC_BUTTON_STATE = '1526';\n    static HUB_CHARACTERISTIC_ATTACHED_IO = '1527';\n    static HUB_CHARACTERISTIC_LOW_VOLTAGE_ALERT = '1528';\n    static HUB_CHARACTERISTIC_DISCONNECT = '152e';\n\n    static instance = null;\n\n    deviceName = null;\n    attachedIO = null;\n    deviceButton = null;\n    lowVoltageAlert = null;\n    disconnect = null;\n\n\n    constructor() {\n        super();\n    }\n\n    static getInstance() {\n        if (DeviceServiceDefinition.instance === null) {\n            DeviceServiceDefinition.instance = new DeviceServiceDefinition();\n            DeviceServiceDefinition.instance.init();\n        }\n        return DeviceServiceDefinition.instance;\n    }\n\n\n    init() {\n        this.serviceUUID = UuidHelper.getLegoUuid(DeviceServiceDefinition.HUB_SERVICE_16_BIT_UUID);\n        this.serviceName = 'DeviceService';\n\n        this.deviceName = new CharacteristicDefinition(\n                'DeviceName',\n                this,\n                UuidHelper.getLegoUuid(DeviceServiceDefinition.HUB_CHARACTERISTIC_NAME_UUID),\n                true,\n                0/* (BluetoothHelper.Properties.PROPERTY_WRITE.ordinal() | BluetoothHelper.Properties.PROPERTY_WRITE_NO_RESPONSE.ordinal() | BluetoothHelper.Properties.PROPERTY_READ.ordinal()) */,\n                0,\n                0/* (BluetoothHelper.Permissions.PERMISSION_WRITE.ordinal() |\n                 BluetoothHelper.Permissions.PERMISSION_READ.ordinal())*/);\n\n        this.attachedIO = new CharacteristicDefinition(\n                'AttachedIO',\n                this,\n                UuidHelper.getLegoUuid(DeviceServiceDefinition.HUB_CHARACTERISTIC_ATTACHED_IO),\n                true,\n                0/* (BluetoothHelper.Properties.PROPERTY_NOTIFY.ordinal()) */,\n                0,\n                0/* (BluetoothHelper.Permissions.PERMISSION_READ.ordinal())*/);\n\n        this.deviceButton = new CharacteristicDefinition(\n                'DeviceButton',\n                this,\n                UuidHelper.getLegoUuid(DeviceServiceDefinition.HUB_CHARACTERISTIC_BUTTON_STATE),\n                true,\n                0/* (BluetoothHelper.Properties.PROPERTY_READ.ordinal() |\n                 BluetoothHelper.Properties.PROPERTY_NOTIFY.ordinal()) */,\n                0,\n                0/* (BluetoothHelper.Permissions.PERMISSION_READ.ordinal())*/);\n\n        this.lowVoltageAlert = new CharacteristicDefinition(\n                'LowVoltageAlert',\n                this,\n                UuidHelper.getLegoUuid(DeviceServiceDefinition.HUB_CHARACTERISTIC_LOW_VOLTAGE_ALERT),\n                false,\n                0/* (BluetoothHelper.Properties.PROPERTY_READ.ordinal() |\n                 BluetoothHelper.Properties.PROPERTY_NOTIFY.ordinal()) */,\n                0,\n                0/* (BluetoothHelper.Permissions.PERMISSION_READ.ordinal())*/);\n        this.disconnect = new CharacteristicDefinition(\n                'Disconnect',\n                this,\n                UuidHelper.getLegoUuid(DeviceServiceDefinition.HUB_CHARACTERISTIC_DISCONNECT),\n                true,\n                0,\n                0,\n                0\n        );\n\n        this.characteristicDefinitions.add(this.deviceName);\n        this.characteristicDefinitions.add(this.attachedIO);\n        this.characteristicDefinitions.add(this.deviceButton);\n        this.characteristicDefinitions.add(this.lowVoltageAlert);\n        this.characteristicDefinitions.add(this.disconnect);\n    }\n\n    getDeviceName() {\n        return this.deviceName;\n    }\n\n    getAttachedIO() {\n        return this.attachedIO;\n    }\n\n    getDeviceButton() {\n        return this.deviceButton;\n    }\n\n    getLowVoltageAlert() {\n        return this.lowVoltageAlert;\n    }\n\n    getDisconnect() {\n        return this.disconnect;\n    }\n\n    getShortServiceUUID() {\n        return DeviceServiceDefinition.HUB_SERVICE_16_BIT_UUID;\n    }\n\n    getServiceUuid() {\n        return UuidHelper.getLegoUuid(this.getShortServiceUUID());\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/service_definitions/DeviceServiceDefinition.js","/**\n * Created by frj on 20/02/16.\n */\nimport BaseServiceDefinition from './BaseServiceDefinition';\nimport CharacteristicDefinition from './CharacteristicDefinition';\nimport UuidHelper from '../helpers/UuidHelper';\n\nexport default class IOServiceDefinition extends BaseServiceDefinition {\n\n    static INPUT_SERVICE_UUID = '4F0E';\n\n    static CHARACTERISTIC_INPUT_VALUE_UUID = '1560';\n    static CHARACTERISTIC_INPUT_FORMAT_UUID = '1561';\n    static CHARACTERISTIC_INPUT_COMMAND_UUID = '1563';\n    static CHARACTERISTIC_OUTPUT_COMMAND_UUID = '1565';\n\n    static instance = null;\n\n    inputValue = null;\n    inputFormat = null;\n    inputCommand = null;\n    outputCommand = null;\n\n    constructor() {\n        super();\n    }\n\n    static getInstance() {\n        if (IOServiceDefinition.instance === null) {\n            IOServiceDefinition.instance = new IOServiceDefinition();\n            IOServiceDefinition.instance.init();\n        }\n        return IOServiceDefinition.instance;\n    }\n\n    init() {\n        this.serviceUUID = UuidHelper.getLegoUuid(IOServiceDefinition.INPUT_SERVICE_UUID);\n        this.serviceName = 'IOService';\n\n        this.inputValue = new CharacteristicDefinition(\n                'InputValue',\n                this,\n                UuidHelper.getLegoUuid(IOServiceDefinition.CHARACTERISTIC_INPUT_VALUE_UUID),\n                true,\n                0/* (BluetoothHelper.Properties.PROPERTY_NOTIFY.ordinal()) */,\n                0,\n                0/* (BluetoothHelper.Permissions.PERMISSION_READ.ordinal()) */);\n\n        this.inputFormat = new CharacteristicDefinition(\n                'InputFormat',\n                this,\n                UuidHelper.getLegoUuid(IOServiceDefinition.CHARACTERISTIC_INPUT_FORMAT_UUID),\n                true,\n                0/* (BluetoothHelper.Properties.PROPERTY_NOTIFY.ordinal()) */,\n                0,\n                0/* (BluetoothHelper.Permissions.PERMISSION_READ.ordinal()) */);\n\n        this.inputCommand = new CharacteristicDefinition(\n                'InputCommand',\n                this,\n                UuidHelper.getLegoUuid(IOServiceDefinition.CHARACTERISTIC_INPUT_COMMAND_UUID),\n                true,\n                0/* (BluetoothHelper.Properties.PROPERTY_WRITE_NO_RESPONSE.ordinal() |\n                 BluetoothHelper.Properties.PROPERTY_WRITE.ordinal()) */,\n                0,\n                0/* (BluetoothHelper.Permissions.PERMISSION_READ.ordinal()) */);\n\n        this.outputCommand = new CharacteristicDefinition(\n                'OutputCommand',\n                this,\n                UuidHelper.getLegoUuid(IOServiceDefinition.CHARACTERISTIC_OUTPUT_COMMAND_UUID),\n                true,\n                0/* (BluetoothHelper.Properties.PROPERTY_WRITE_NO_RESPONSE.ordinal() |\n                 BluetoothHelper.Properties.PROPERTY_WRITE.ordinal()) */,\n                0,\n                0/* (BluetoothHelper.Permissions.PERMISSION_READ.ordinal()) */);\n\n        this.characteristicDefinitions.add(this.inputValue);\n        this.characteristicDefinitions.add(this.inputFormat);\n        this.characteristicDefinitions.add(this.inputCommand);\n        this.characteristicDefinitions.add(this.outputCommand);\n    }\n\n    getInputValue() {\n        return this.inputValue;\n    }\n\n    getInputFormat() {\n        return this.inputFormat;\n    }\n\n    getInputCommand() {\n        return this.inputCommand;\n    }\n\n    getOutputCommand() {\n        return this.outputCommand;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/service_definitions/IOServiceDefinition.js","\"use strict\";\n\nexports.__esModule = true;\n\nvar _iterator = require(\"../core-js/symbol/iterator\");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = require(\"../core-js/symbol\");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === \"function\" && typeof _iterator2.default === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === \"function\" && _typeof(_iterator2.default) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/typeof.js\n// module id = 49\n// module chunks = 0","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof')\n  , TAG = require('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_classof.js\n// module id = 50\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_defined.js\n// module id = 51\n// module chunks = 0","var ctx         = require('./_ctx')\n  , call        = require('./_iter-call')\n  , isArrayIter = require('./_is-array-iter')\n  , anObject    = require('./_an-object')\n  , toLength    = require('./_to-length')\n  , getIterFn   = require('./core.get-iterator-method')\n  , BREAK       = {}\n  , RETURN      = {};\nvar exports = module.exports = function(iterable, entries, fn, that, ITERATOR){\n  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator, result;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if(result === BREAK || result === RETURN)return result;\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    result = call(iterator, f, step.value, entries);\n    if(result === BREAK || result === RETURN)return result;\n  }\n};\nexports.BREAK  = BREAK;\nexports.RETURN = RETURN;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_for-of.js\n// module id = 52\n// module chunks = 0","module.exports = true;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_library.js\n// module id = 53\n// module chunks = 0","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject    = require('./_an-object')\n  , dPs         = require('./_object-dps')\n  , enumBugKeys = require('./_enum-bug-keys')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , Empty       = function(){ /* empty */ }\n  , PROTOTYPE   = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function(){\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe')\n    , i      = enumBugKeys.length\n    , lt     = '<'\n    , gt     = '>'\n    , iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties){\n  var result;\n  if(O !== null){\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty;\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-create.js\n// module id = 54\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-keys.js\n// module id = 55\n// module chunks = 0","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_property-desc.js\n// module id = 56\n// module chunks = 0","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_uid.js\n// module id = 57\n// module chunks = 0","import LDSDKLogger from '../helpers/LDSDKLogger';\nimport UuidHelper from '../helpers/UuidHelper';\nimport StorageHelper from '../helpers/StorageHelper';\nimport LegoDeviceManagerImpl from '../device/LegoDeviceManagerImpl';\nimport {StateEnum} from '../device/LegoDeviceImpl';\nimport TimerUtil from '../helpers/TimerUtil';\nimport StringUtils from '../helpers/StringUtils';\n\n/**\n * The native Bluetooth Device object returned by the operations of the chrome.bluetooth.* functions.\n *\n * @external {NativeDevice} https://developer.chrome.com/apps/bluetooth#type-Device\n * @see  https://developer.chrome.com/apps/bluetooth#type-Device\n */\n\n/**\n * The native Service object returned by the operations of the chrome.bluetooth.getService and getServices functions.\n *\n * @external {NativeService} https://developer.chrome.com/apps/bluetoothLowEnergy#type-Service\n * @see  https://developer.chrome.com/apps/bluetoothLowEnergy#type-Service\n */\n\n/**\n * The native Characteristic object returned by the operations of the chrome.bluetooth.getCharacteristic and\n * getCharacteristics functions.\n *\n * @external {NativeCharacteristic} https://developer.chrome.com/apps/bluetoothLowEnergy#type-Characteristic\n * @see  https://developer.chrome.com/apps/bluetoothLowEnergy#type-Characteristic\n */\n\n/**\n * The native Descriptor object returned by the operations of the chrome.bluetooth.getDescriptor and\n * getDescriptors functions.\n *\n * @external {NativeDescriptor} https://developer.chrome.com/apps/bluetoothLowEnergy#type-Descriptor\n * @see  https://developer.chrome.com/apps/bluetoothLowEnergy#type-Descriptor\n */\n\n/**\n * A TypedArray object describes an array-like view of an underlying binary data buffer. There is no global\n * property named TypedArray, nor is there a directly visible TypedArray constructor.  Instead, there are a\n * number of different global properties, whose values are typed array constructors for specific element\n * types, listed below. On the following pages you will find common properties and methods that can be used\n * with any typed array containing elements of any type.\n *\n * @external {TypedArray} https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\n * @see  https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\n */\n\n/**\n * The ArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer. You cannot directly\n * manipulate the contents of an ArrayBuffer; instead, you create one of the typed array objects or a DataView\n * object which represents the buffer in a specific format, and use that to read and write the contents of the buffer.\n *\n * @external {ArrayBuffer} https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\n * @see  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\n */\n\nif (window && !window.previouslySeenLegoDevices) {\n    window.previouslySeenLegoDevices = new Map();\n}\n\n/**\n * @ignore For internal use\n * This class wraps the native Bluetooth Device object\n *\n * See {@link NativeDevice}\n *\n * Created by frj on 22/02/16.\n */\nexport default class ChromeOsBluetoothDeviceWrapper {\n\n    /**\n     * @private\n     * @type {|null}\n     */\n    chromeBluetoothDevice = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    rssi = -1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    pairing = false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    connectCallback = null;\n\n    /**\n     * Creates a ChromeOsBluetoothDeviceWrapper instance that wraps the supplied native device\n     * @param {NativeDevice} bluetoothDevice\n     */\n    constructor(bluetoothDevice) {\n        /**\n         * @private\n         * Native Bluetooth Device object\n         * @type {NativeDevice}\n         */\n        this.chromeBluetoothDevice = bluetoothDevice;\n    }\n\n    /**\n     * Get the active connect callback\n     * @return {*}\n     */\n    getConnectCallback() {\n        return this.connectCallback;\n    }\n\n    /**\n     * Get the wrapped native device\n     * @return {NativeDevice}\n     */\n    getDevice() {\n        return this.chromeBluetoothDevice;\n    }\n\n    /**\n     * Get the name of the wrapped native device\n     * @return {string} Name of the device\n     */\n    getName() {\n        return this.chromeBluetoothDevice.name;\n    }\n\n    /**\n     * Get the MAC address of the wrapped native device\n     * @return {string} MAC address\n     */\n    getAddress() {\n        return this.chromeBluetoothDevice.address;\n    }\n\n    /**\n     * The rssi values are only present while scanning (and only since very new Chrome versions)\n     * @returns {number}\n     */\n    getRssi() {\n        if (this.chromeBluetoothDevice.hasOwnProperty('inquiryRssi') && this.rssi === -1) {\n            /**\n             * @private\n             * The received signal strength, in dBm. This field is avaliable and valid only during discovery. Outside of discovery it's value is not specified.\n             * @type {number}\n             */\n            this.rssi = this.chromeBluetoothDevice.inquiryRssi;\n            return this.rssi;\n        } else if (this.rssi !== -1) {\n            return this.rssi;\n        }\n        return -1;\n    }\n\n    /**\n     * Checks if the UUIDs for this device matches the LEGO uuid.\n     * Does caching of mac addresses in order to resolve LECQA-239 and WQ-331\n     * @return {boolean} True if this is a LEGO device, false if it is not\n     */\n    isLegoDevice() {\n        const device = this.getDevice();\n\n        if (this.getUuids().length > 0) {\n            return UuidHelper.isLEGODevice(this);\n        }\n\n        if (this.getUuids().length === 0) {\n\n            if (LegoDeviceManagerImpl.getInstance().config.usePreviouslySeenCacheAsFallbackFilter) {\n                if (window && window.previouslySeenLegoDevices && window.previouslySeenLegoDevices.has && !window.previouslySeenLegoDevices.has(this.getAddress())) {\n                    // LECQA-239/WQ-331 - This is to avoid forcing the user to have to reboot in order to discover his hub when\n                    // the uuid list has been truncated after a disconnect, and the user has closed and relaunched WeDo.\n                    // Note: The device is saved to local storage when connecting - see connectGatt.\n                    setTimeout(async () => {\n                        StorageHelper.getFromLocalStorage(this.getAddress())\n                            .then((device) => {\n                                if (device) {\n                                    if (LDSDKLogger.isDebugEnabled()) {\n                                        LDSDKLogger.debug('Storage - Fetched previous device from local storage - adding to memory map - key=\"' + this.getAddress() + '\": ' + JSON.stringify(device));\n                                    }\n                                    window.previouslySeenLegoDevices.set(this.getAddress(), device);\n                                } else {\n                                    StorageHelper.getFromSyncStorage(this.getAddress())\n                                        .then((device) => {\n                                            if (device) {\n                                                if (LDSDKLogger.isDebugEnabled()) {\n                                                    LDSDKLogger.debug('Storage - Fetched previous device from sync storage - adding to memory map - key=\"' + this.getAddress() + '\": ' + JSON.stringify(device));\n                                                }\n                                                window.previouslySeenLegoDevices.set(this.getAddress(), device);\n                                            }\n                                        })\n                                        .catch(() => {\n                                            if (LDSDKLogger.isErrorEnabled()) {\n                                                LDSDKLogger.error('Storage - Failed getting \"' + this.getAddress() + '\" from sync storage', chrome.runtime.lastError);\n                                            }\n                                        });\n                                }\n                            })\n                            .catch(() => {\n                                if (LDSDKLogger.isErrorEnabled()) {\n                                    LDSDKLogger.error('Storage - Failed getting \"' + this.getAddress() + '\" from local storage', chrome.runtime.lastError);\n                                }\n                            });\n                    }, 0);\n                }\n\n                if (window && window.previouslySeenLegoDevices && window.previouslySeenLegoDevices.has && window.previouslySeenLegoDevices.has(this.getAddress())) {\n                    return true;\n                }\n            }\n\n            if (LegoDeviceManagerImpl.getInstance().config.filterFallbackEnabled) {\n                const inquiryTxPower = device.inquiryTxPower || 0;\n                if (device.name !== `Unknown or Unsupported Device (${this.getAddress()})`\n                    && device.deviceClass === 0\n                    && inquiryTxPower === 0) {\n                    // LECQA-239/WQ-331 - This is to avoid forcing the user to have to reboot in order to discover his hub when the uuid list has been truncated after a disconnect, and the user has closed and relaunched WeDo\n                    return true;\n                }\n            }\n\n            if (typeof window.filterLegoDevice === 'function') {\n                if (window.filterLegoDevice(this.getDevice())) {\n                    return true;\n                }\n            }\n\n        }\n\n        return false;\n    }\n\n    /**\n     * Get the uuids for the wrapped native bluetooth device\n     * @return {Array.<string>} Array of uuids\n     */\n    getUuids() {\n        return this.chromeBluetoothDevice.uuids || [];\n    }\n\n    /**\n     * Check if the hub is currently pairing with Chrome\n     * @return {boolean}\n     */\n    isPairing() {\n        return this.pairing;\n    }\n\n    /**\n     * @private\n     * @param {NativeDevice} nativeDevice\n     */\n    updateNativeDevice(nativeDevice) {\n        // Detect when pairing is going on\n        if (!this.chromeBluetoothDevice.paired && nativeDevice.paired) {\n            /**\n             * @private\n             */\n            this.pairing = true;\n        } else {\n            /**\n             * @private\n             */\n            this.pairing = false;\n        }\n\n        if (this.chromeBluetoothDevice.paired !== nativeDevice.paired) {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' updateNativeDevice \"paired\". Old value: ' + this.chromeBluetoothDevice.paired + ', new value: ' + nativeDevice.paired);\n            }\n        }\n        /**\n         * @private\n         */\n        this.chromeBluetoothDevice.paired = nativeDevice.paired;\n\n        if (this.chromeBluetoothDevice.connected !== nativeDevice.connected) {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' updateNativeDevice \"connected\". Old value: ' + this.chromeBluetoothDevice.connected + ', new value: ' + nativeDevice.connected);\n            }\n        }\n        /**\n         * @private\n         */\n        this.chromeBluetoothDevice.connected = nativeDevice.connected;\n\n        if (this.chromeBluetoothDevice.connecting !== nativeDevice.connecting) {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' updateNativeDevice \"connecting\". Old value: ' + this.chromeBluetoothDevice.connecting + ', new value: ' + nativeDevice.connecting);\n            }\n        }\n        /**\n         * @private\n         */\n        this.chromeBluetoothDevice.connecting = nativeDevice.connecting;\n\n        if (this.chromeBluetoothDevice.connectable !== nativeDevice.connectable) {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' updateNativeDevice \"connectable\". Old value: ' + this.chromeBluetoothDevice.connectable + ', new value: ' + nativeDevice.connectable);\n            }\n        }\n        /**\n         * @private\n         */\n        this.chromeBluetoothDevice.connectable = nativeDevice.connectable;\n\n        /**\n         * @private\n         */\n        this.chromeBluetoothDevice.uuids = nativeDevice.uuids;\n\n        if (nativeDevice.hasOwnProperty('inquiryRssi')) {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' updateNativeDevice \"inquiryRssi\". Old value: ' + this.chromeBluetoothDevice.inquiryRssi + ', new value: ' + nativeDevice.inquiryRssi);\n            }\n            /**\n             * @private\n             */\n            this.chromeBluetoothDevice.inquiryRssi = nativeDevice.inquiryRssi;\n        } else {\n            if (this.chromeBluetoothDevice.hasOwnProperty('inquiryRssi')) {\n                if (LDSDKLogger.isTraceEnabled()) {\n                    LDSDKLogger.debug(this.constructor.name + ' updateNativeDevice deleting \"inquiryRssi\". Old value:' +\n                        ' ' + this.chromeBluetoothDevice.inquiryRssi);\n                }\n                delete this.chromeBluetoothDevice.inquiryRssi;\n            }\n        }\n\n        if (this.chromeBluetoothDevice.name !== nativeDevice.name) {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' updateNativeDevice \"name\". Old value: ' + this.chromeBluetoothDevice.name + ', new value: ' + nativeDevice.name);\n            }\n        }\n        /**\n         * @private\n         */\n        this.chromeBluetoothDevice.name = nativeDevice.name;\n    }\n\n\n    /**\n     * Connects to the device\n     * @param {boolean} autoConnect  True for autoconnect, false otherwise\n     * @param {BluetoothDeviceCallback} bluetoothGattCallback\n     * @return {Promise} Resolves once connection completes, or rejects with an error message in case of an error\n     */\n    connectGatt(autoConnect, bluetoothGattCallback) {\n        const self = this;\n        /**\n         * @private\n         */\n        this.connectCallback = bluetoothGattCallback;\n\n        return new Promise((resolve, reject) => {\n            chrome.bluetoothLowEnergy.connect(self.getAddress(), function () {\n                if (chrome.runtime.lastError) {\n                    if ('Already connected' !== chrome.runtime.lastError.message) {\n                        LDSDKLogger.error('Failed to connect to '+ self.getName() +': ' + chrome.runtime.lastError.message);\n                        return reject(chrome.runtime.lastError);\n                    }\n                }\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info(`Connect succeeded - ${self.getName()} (${self.getAddress()})`);\n                }\n                if (window && window.previouslySeenLegoDevices) {\n                    window.previouslySeenLegoDevices.set(self.getAddress(), self.getDevice());\n                    // LECQA-239/WQ-331 - We use a cached map - in order to be able to recognize LEGO devices that we have disconnected from, since they have an empty uuid list afterwards\n                }\n                return StorageHelper.saveToLocalStorage(self.getAddress(), self.getDevice())\n                    .then(() => {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug(`Storage - Saved \"${self.getAddress()}\" => (${JSON.stringify(self.getDevice())}) to local storage`);\n                        }\n                        return StorageHelper.saveToSyncStorage(self.getAddress(), self.getDevice())\n                            .then(() => {\n                                if (LDSDKLogger.isDebugEnabled()) {\n                                    LDSDKLogger.debug(`Storage - Saved \"${self.getAddress()}\" => (${JSON.stringify(self.getDevice())}) to sync storage`);\n                                }\n                                return resolve();\n                            })\n                            .catch((err) => {\n                                if (LDSDKLogger.isErrorEnabled()) {\n                                    LDSDKLogger.error('Storage - Failed saving \"' + self.getAddress() + '\" to sync storage', err);\n                                }\n                            });\n                    })\n                    .catch((err) => {\n                        if (LDSDKLogger.isErrorEnabled()) {\n                            LDSDKLogger.error('Storage - Failed saving \"' + self.getAddress() + '\" to local storage', err);\n                        }\n                    });\n            });\n        })\n            .then(() => {\n                setTimeout(async () => {\n                    // LWC-1548 - The initial fix where we moved the onConnectionStateChange(null, StateEnum.Interrogating) call to the onDevice seem to be very very slow on Chrome 52 and up. Reattempting the fix by inserting a delay after connect completes\n                    const legoBluetoothDeviceImpl = LegoDeviceManagerImpl.getInstance().getDevice(self.getAddress(), false);\n                    if (legoBluetoothDeviceImpl && legoBluetoothDeviceImpl !== null && legoBluetoothDeviceImpl.connectState !== StateEnum.Interrogating) {\n                        if (!self.isPairing() /* && wrappedDevice.getPaired() */ && !self.getConnecting() && self.getConnected()) {\n                            if (LDSDKLogger.isInfoEnabled()) {\n                                LDSDKLogger.info(self.constructor.name + '.connectGatt - changing state to Interrogating', );\n                            }\n                            return await bluetoothGattCallback.onConnectionStateChange(null, StateEnum.Interrogating);\n                        } else {\n                            if (LDSDKLogger.isDebugEnabled()) {\n                                LDSDKLogger.debug('The device is not yet ready for a connect');\n                            }\n                        }\n                    }\n                }, 500);\n            })\n            .catch(err => {\n                LDSDKLogger.error('Failed to connect to ' + self.getName() + ': ' + err);\n                return Promise.reject(err);\n            });\n    }\n\n    getConnected() {\n        return this.chromeBluetoothDevice.connected;\n    }\n\n    getConnecting() {\n        return this.chromeBluetoothDevice.connecting;\n    }\n\n    getPaired() {\n        if (this.chromeBluetoothDevice.hasOwnProperty('paired')) {\n            return this.chromeBluetoothDevice.paired;\n        }\n        return false;\n    }\n\n    /**\n     * Get isConnected based on the properties of the wrapped native Bluetooth Device.\n     * @return {bool} True if the device properties specify that it is connected, false otherwise.\n     */\n    isConnected() {\n        return this.chromeBluetoothDevice && this.chromeBluetoothDevice !== null && !this.chromeBluetoothDevice.connecting && this.chromeBluetoothDevice.connected;\n    }\n\n    /**\n     * @ignore\n     *\n     * @return {Promise}\n     */\n    disconnect() {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info(`Calling Chrome BLE API disconnect for ${this.getName()} [${this.getAddress()}]`);\n        }\n        const self = this;\n        return new Promise((resolve, reject) => {\n            chrome.bluetoothLowEnergy.disconnect(self.getAddress(), () => {\n                if (chrome.runtime.lastError) {\n                    if (chrome.runtime.lastError.message !== 'Not connected') {\n                        return reject(chrome.runtime.lastError);\n                    }\n                }\n                return resolve();\n            });\n        });\n    }\n\n    /**\n     * Discover all the services for the device and return them as an array once the promise resolves.\n     * @return {Promise.<Array<NativeService>>} @see {@link NativeService}\n     */\n    discoverServices() {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info(`Calling Chrome BLE API getServices for ${this.getName()} [${this.getAddress()}]`);\n        }\n        const self = this;\n        return new Promise((resolve, reject) => {\n            chrome.bluetoothLowEnergy.getServices(self.getAddress(), (services) => {\n                if (chrome.runtime.lastError) {\n                    if (LDSDKLogger.isErrorEnabled()) {\n                        LDSDKLogger.error('chrome.bluetoothLowEnergy.getServices failed: ', chrome.runtime.lastError.message);\n                    }\n                    return reject(chrome.runtime.lastError.message);\n                }\n                if (Array.isArray(services)) {\n                    if (services.length > 0) {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug(`discoverServices: Got ${services.length} services for device address ${self.getAddress()} returned by chrome.bluetoothLowEnergy.getServices.`);\n                        }\n                        return resolve(services);\n                    } else {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug(`discoverServices: Empty list of services returned for device address ${self.getAddress()} by chrome.bluetoothLowEnergy.getServices.`);\n                        }\n                    }\n                }\n                return resolve(services);\n            });\n        })\n            .catch(err => {\n                LDSDKLogger.error(`discoverServices: Failed to getServices for ${self.getName()}`, err);\n                return Promise.reject(err);\n            });\n    }\n\n    /**\n     * Get the service that matches the service instance id on the device and return once the promise\n     * resolves.\n     * @param {string} instanceId - The instanceId for the service to retrieve\n     * @return {Promise.<NativeService>} @see {@link NativeService}\n     */\n    getService(instanceId) {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info(`Calling Chrome BLE API getService for ${this.getName()} [${this.getAddress()}] - service instanceId: ${instanceId}` );\n        }\n        const self = this;\n        return new Promise((resolve, reject) => {\n            chrome.bluetoothLowEnergy.getService(instanceId, (service) => {\n                if (chrome.runtime.lastError) {\n                    if (LDSDKLogger.isErrorEnabled()) {\n                        LDSDKLogger.error('chrome.bluetoothLowEnergy.getService failed: ', chrome.runtime.lastError.message);\n                    }\n                    return reject(chrome.runtime.lastError.message);\n                }\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('Got service ' + UuidHelper.getUuid(service) + ' for instanceId: ' + instanceId);\n                }\n                return resolve(service);\n            });\n        })\n            .catch(err => {\n                LDSDKLogger.error(`Failed to getService with instanceId ${instanceId} for ${self.getName()}`, err.message);\n                return Promise.reject(err);\n            });\n    }\n\n    /**\n     *\n     * @param {NativeCharacteristic} characteristic\n     * @return {Promise}\n     */\n    startCharacteristicNotification(characteristic) {\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Calling Chrome BLE API startCharacteristicNotifications for ' + StringUtils.getCharacteristicString(characteristic));\n        }\n        return new Promise((resolve, reject) => {\n            const startCharacteristicNotificationsTimer = TimerUtil.startTimer();\n            chrome.bluetoothLowEnergy.startCharacteristicNotifications(characteristic.instanceId, function () {\n                if (chrome.runtime.lastError) {\n                    if (chrome.runtime.lastError.message === 'Already notifying') {\n                        return resolve(); // ignore Already notifying 'error'\n                    }\n                    return reject('Failed to startCharacteristicNotifications for characteristic ' + StringUtils.getCharacteristicString(characteristic) + '. Error: ' + chrome.runtime.lastError.message);\n                }\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug('Done calling chrome.bluetoothLowEnergy.startCharacteristicNotifications for ' + StringUtils.getCharacteristicString(characteristic) + ' - it took ' + TimerUtil.stopTimer(startCharacteristicNotificationsTimer) + ' ms');\n                }\n                return resolve();\n            });\n        });\n    }\n\n    /**\n     *\n     * @param characteristic\n     * @return {Promise}\n     */\n    stopCharacteristicNotification(characteristic) {\n        return new Promise((resolve, reject) => {\n            const stopCharacteristicNotificationsTimer = TimerUtil.startTimer();\n            chrome.bluetoothLowEnergy.stopCharacteristicNotifications(characteristic.instanceId, () => {\n                if (chrome.runtime.lastError) {\n                    if (chrome.runtime.lastError.message !== 'Not notifying') {\n                        LDSDKLogger.error('Failed to stop notifications: ' + chrome.runtime.lastError.message);\n                        return reject(chrome.runtime.lastError);\n                    }\n                }\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug('Done calling chrome.bluetoothLowEnergy.stopCharacteristicNotifications for ' + StringUtils.getCharacteristicString(characteristic) + ' - it took ' + TimerUtil.stopTimer(stopCharacteristicNotificationsTimer) + ' ms');\n                }\n                return resolve();\n            });\n        });\n    }\n\n    /**\n     * Get the characteristics for the BLE service\n     * @param {NativeService} service\n     * @return {Promise}\n     */\n    getCharacteristics(service) {\n        return new Promise((resolve, reject) => {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(`Getting characteristics for service: ${UuidHelper.getUuid(service)} ( ${service.instanceId})`);\n            }\n            chrome.bluetoothLowEnergy.getCharacteristics(service.instanceId, (characteristics) => {\n                if (chrome.runtime.lastError) {\n                    const msg = 'chrome.bluetoothLowEnergy.getCharacteristics failed lookup of service instance id: \"' + service.instanceId + '\". Original message: ' + chrome.runtime.lastError.message;\n                    return reject(msg);\n                }\n                return resolve(characteristics);\n            });\n        });\n    }\n\n    /**\n     *\n     * @param {SynchronousQueueElement} element\n     * @return {Promise<Void>}\n     */\n    writeCharacteristic(element) {\n        return new Promise((resolve, reject) => {\n            if (this.isConnected() && element && element !== null &&\n                element.characteristic && element.characteristic !== null &&\n                element.characteristic.instanceId && element.characteristic.instanceId !== null &&\n                element.value && element.value !== null) {\n                chrome.bluetoothLowEnergy.writeCharacteristicValue(\n                    element.characteristic.instanceId,\n                    element.value,\n                    () => {\n                        if (chrome.runtime.lastError) {\n                            const errMsg = `Failed to write characteristic value ${element.characteristic.instanceId}, Value: ${new Int8Array(element.value)} to device ${this.getName()} [${this.getAddress()}]. Reason: ${chrome.runtime.lastError.message}`;\n                            LDSDKLogger.error(errMsg);\n                            if (chrome.runtime.lastError.message === 'Operation failed') {\n                                if (LegoDeviceManagerImpl.getInstance().config.disconnectOnOperationFailedBLEError) {\n                                    if (LDSDKLogger.isDebugEnabled()) {\n                                        LDSDKLogger.debug('writeCharacteristic failed with \"Operation failed\"' +\n                                            ' message and disconnectOnOperationFailedBLEError' +\n                                            ' config setting is true - disconnecting from device');\n                                    }\n                                    LegoDeviceManagerImpl.getInstance().cancelDeviceConnection(this.getAddress());\n                                }\n                            }\n                            return reject(errMsg);\n                        }\n                        return resolve();\n                    }\n                );\n            } else {\n                return resolve();\n            }\n        })\n            .catch(err => {\n                return Promise.reject(err);\n            });\n    }\n\n    /**\n     *\n     * @param {SynchronousQueueElement} element\n     * @return {Promise<NativeCharacteristic>} - The result from the\n     * chrome.bluetoothLowEnergy.readCharacteristicValue call.\n     */\n    readCharacteristic(element) {\n        return new Promise((resolve, reject) => {\n            if (this.isConnected()) {\n                chrome.bluetoothLowEnergy.readCharacteristicValue(\n                    element.characteristic.instanceId,\n                    (result) => {\n                        if (chrome.runtime.lastError) {\n                            const errMsg = `Failed to read ${element.characteristic.instanceId} from device ${this.getName()} [${this.getAddress()}]. Reason: ${chrome.runtime.lastError.message}`;\n                            LDSDKLogger.error(errMsg);\n                            if (chrome.runtime.lastError.message === 'Operation failed') {\n                                if (LegoDeviceManagerImpl.getInstance().config.disconnectOnOperationFailedBLEError) {\n                                    if (LDSDKLogger.isDebugEnabled()) {\n                                        LDSDKLogger.debug('readCharacteristic failed with \"Operation failed\"' +\n                                            ' message and disconnectOnOperationFailedBLEError' +\n                                            ' config setting is true - disconnecting from device');\n                                    }\n                                    LegoDeviceManagerImpl.getInstance().cancelDeviceConnection(this.getAddress());\n                                }\n                            }\n                            return reject(errMsg);\n                        }\n                        return resolve(result);\n                    }\n                );\n            } else {\n                return resolve();\n            }\n        })\n            .catch(err => {\n                return Promise.reject(err);\n            });\n\n    }\n\n    toString() {\n        return this.constructor.name + '{' + this.getName() + ' ['+ this.getAddress() +', pairing: '+this.isPairing()+', paired: '+ this.getPaired() +  ', connecting: '+ this.getConnecting() +', connected: ' + this.getConnected() + ', rssi:' +\n            ' '+ this.getRssi() +']' + '}';\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/bluetooth/ChromeOsBluetoothDeviceWrapper.js","/**\n * SynchronousQueueElement is a class wrapping the characteristic or descriptor (one OR the other, NOT both) and the\n * ArrayBuffer value to use for the read- or write command.\n *\n * SynchronousQueueElement is used only in the queue so each element in the queue is a self contained entity that\n * the queue handler can execute.\n *\n * Created by frj on 19/02/16.\n */\nimport LegoDeviceImpl, {StateEnum} from '../device/LegoDeviceImpl';\nimport Revision from '../device/Revision';\nimport DeviceInfo from '../device/DeviceInfo';\nimport LegoServiceFactory from '../io/services/LegoServiceFactory';\nimport StringUtils from '../helpers/StringUtils';\nimport UuidHelper from '../helpers/UuidHelper';\nimport SimpleList from '../helpers/SimpleList';\nimport LDSDKLogger from '../helpers/LDSDKLogger';\nimport LDSDKError, {ErrorCode} from '../helpers/LDSDKError';\nimport BluetoothServiceDefinition from '../service_definitions/BluetoothServiceDefinition';\nimport DeviceInfoServiceDefinition from '../service_definitions/DeviceInfoServiceDefinition';\nimport BluetoothHelper from '../helpers/BluetoothHelper';\nimport BluetoothIO from './BluetoothIO';\nimport ConnectInfo from '../device/ConnectInfo';\nimport BluetoothDeviceCallback from './BluetoothDeviceCallback';\nimport LegoDeviceManagerImpl from '../device/LegoDeviceManagerImpl';\nimport TimerUtil from '../helpers/TimerUtil';\n\n\nclass SynchronousQueueElement {\n\n    characteristic = null;\n    descriptor = null;\n    value = null;\n    promise = null;\n\n    /**\n     * Constructs a new SynchronousQueueElement - Either a characteristic OR a descriptor must be set for the queue\n     * handler to be able to decide how to handle the element.\n     *\n     * @param {NativeCharacteristic} characteristic The characteristic to use in the command.\n     * @param {NativeDescriptor} descriptor The descriptor to use in the command\n     * @param {ArrayBuffer} value\n     * @param {Promise} promise\n     */\n    constructor(characteristic = null, descriptor = null, value, promise) {\n        /**\n         * @private\n         */\n        this.characteristic = characteristic;\n        /**\n         * @private\n         */\n        this.descriptor = descriptor;\n        /**\n         * @private\n         */\n        this.value = value;\n        /**\n         * @private\n         */\n        this.promise = promise;\n    }\n\n    /**\n     * Helper for constructing a new element for a characteristic\n     *\n     * @param {NativeCharacteristic} characteristic\n     * @param {ArrayBuffer} value\n\n     * @return {SynchronousQueueElement}\n     */\n    static fromCharacteristic(characteristic, value) {\n        return new SynchronousQueueElement(characteristic, null, value, null);\n    }\n\n    /**\n     * Helper for constructing a new element for a descriptor\n     *\n     * @param {NativeDescriptor} descriptor\n     * @param {ArrayBuffer} value\n\n     * @return {SynchronousQueueElement}\n     */\n    static fromDescriptor(descriptor, value) {\n        return new SynchronousQueueElement(null, descriptor, value, null);\n    }\n\n    static fromPromise(promise) {\n        return new SynchronousQueueElement(null, null, null, promise);\n    }\n}\n/**\n * LegoBluetoothDeviceImpl is an Abstract class - it should not be instantiated directly\n * @abstract\n */\nexport default class LegoBluetoothDeviceImpl extends LegoDeviceImpl {\n\n    static CHARACTERISTIC_UPDATE_NOTIFICATION_DESCRIPTOR_UUID = UuidHelper.getSpecUuid('2902');\n    static NUMBER_OF_RSSI_VALUES_TO_AVERAGE = 10;\n    static SIZE_OF_ATTACHED_IO_DATA = 12;\n\n    bluetoothDeviceWrapper = null;\n    //  ScanRecord scanRecord;\n    bluetoothGatt = null;\n\n    // LEGO IO Service\n    maxRetries = 50;\n    /**\n     * @ignore\n     * @type {Map<string, number>}\n     */\n    retryCount = new Map();\n    /**\n     * @ignore\n     * @type {Map<string, number>}\n     */\n    startNotificationsRetryCount = new Map();\n    bluetoothIO = null;\n    ioServiceDefinition = null;\n\n    // LEGO Device Service\n    deviceServiceDefinition = null;\n    nameCharacteristic = null;\n    ioCharacteristic = null;\n    disconnectCharacteristic = null;\n    buttonCharacteristic = null;\n    lowVoltageAlertCharacteristic = null;\n\n    // BatteryService\n    batteryServiceDefinition = null;\n    batteryLevelCharacteristic = null;\n    batteryIntervalId = null;\n\n    // DeviceInfoService\n    deviceInfoServiceDefinition = null;\n    firmwareRevisionCharacteristic = null;\n    hardwareRevisionCharacteristic = null;\n    softwareRevisionCharacteristic = null;\n    manufacturerCharacteristic = null;\n\n    characteristicListenersRegistered = false;\n\n    interrogationFinished = false;\n    _advertising = false;\n    rssiValues = new SimpleList();\n    rssiIndex;\n    averageRSSI = 0;\n\n    synchronousOperationsQueue = [];\n    messagesHandled = 0;\n\n    userInitiatedDisconnect = false;\n    operationExecuting = false;\n\n    /**\n     * @private\n     * @type {Map<string, NativeService>}\n     */\n    _deviceNativeServices = new Map();\n\n    /**\n     *\n     * @type {Map<string, NativeService>}\n     */\n    get deviceNativeServices() {\n        return this._deviceNativeServices;\n    }\n\n\n    /**\n     * Helper for getting a LegoBluetoothDeviceImpl instance for the given bluetoothDeviceWrapper address. A cached\n     * instance is returned if it exists, otherwise a new instance is created and cached before being returned.\n     * @param {ChromeOsBluetoothDeviceWrapper} bluetoothDeviceWrapper\n     * @param {number} rssi\n     * @param {LegoDeviceManagerImpl} legoDeviceManager\n     *\n     * @return {LegoBluetoothDeviceImpl}\n     */\n    static deviceWithWrapper(bluetoothDeviceWrapper, rssi, legoDeviceManager) {\n        let legoBluetoothDevice = legoDeviceManager.getDevice(bluetoothDeviceWrapper.getAddress(), false);\n        if (legoBluetoothDevice !== null) {\n            legoBluetoothDevice.updateWrapper(bluetoothDeviceWrapper);\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('deviceWithWrapper returning cached LegoBluetoothDeviceImpl instance: ' + legoBluetoothDevice.toString());\n            }\n        } else {\n            legoBluetoothDevice = new LegoBluetoothDeviceImpl(bluetoothDeviceWrapper, rssi, legoDeviceManager);\n            legoDeviceManager.bluetoothDeviceManager.setDevice(legoBluetoothDevice);\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('deviceWithWrapper returning new LegoBluetoothDeviceImpl instance: ' + legoDeviceManager.getDevice(bluetoothDeviceWrapper.getAddress(), false).toString());\n            }\n        }\n        return legoBluetoothDevice;\n    }\n\n    /**\n     *\n     * @param {ChromeOsBluetoothDeviceWrapper} bluetoothDeviceWrapper\n     * @param {number} rssi\n     * @param {LegoDeviceManagerImpl} legoDeviceManager\n     */\n    constructor(bluetoothDeviceWrapper, rssi, legoDeviceManager) {\n        super(legoDeviceManager);\n\n        LDSDKLogger.info('Constructing LegoBluetoothDeviceImpl for ' + bluetoothDeviceWrapper.getAddress() + ' -' +\n                         ' Instance ID:' +\n                         ' ' + this.instanceId);\n        /**\n         * @private\n         */\n        this.bluetoothDeviceWrapper = bluetoothDeviceWrapper;\n        if (this.bluetoothDeviceWrapper !== null) {\n            /**\n             * @private\n             */\n            this.deviceName = this.bluetoothDeviceWrapper.getName();\n        }\n        this.resetState();\n        /**\n         * @private\n         */\n        this.ioServiceDefinition = BluetoothServiceDefinition.ioServiceDefinition();\n        /**\n         * @private\n         */\n        this.deviceServiceDefinition = BluetoothServiceDefinition.deviceServiceDefinition();\n        /**\n         * @private\n         */\n        this.deviceInfoServiceDefinition = BluetoothServiceDefinition.deviceInfoServiceDefinition();\n        /**\n         * @private\n         */\n        this.batteryServiceDefinition = BluetoothServiceDefinition.batteryServiceDefinition();\n        this.updateWithAdvertisementDataAndRSSI(rssi);\n    }\n\n    /**\n     * @param {ChromeOsBluetoothDeviceWrapper} bluetoothDeviceWrapper\n     */\n    updateWrapper(bluetoothDeviceWrapper) {\n        if (this.bluetoothDeviceWrapper !== null) {\n            const cachedWrapper = this.getBluetoothWrapper();\n            cachedWrapper.updateNativeDevice(bluetoothDeviceWrapper.getDevice());\n        } else {\n            /**\n             * @private\n             * @type {ChromeOsBluetoothDeviceWrapper}\n             */\n            this.bluetoothDeviceWrapper = bluetoothDeviceWrapper;\n        }\n    }\n\n    async updateAdvertising() {\n        let isAdvertising = false;\n        const nativeDevice = await this.legoDeviceManager.getBluetoothAdapter().getDevice(this.getAddress());\n        if (nativeDevice !== null) {\n            isAdvertising = (nativeDevice.hasOwnProperty('inquiryRssi') && nativeDevice.inquiryRssi !== -1);\n        }\n        if (LDSDKLogger.isTraceEnabled()) {\n            LDSDKLogger.debug('updateAdvertising: ' + isAdvertising + '. NativeDevice:', nativeDevice);\n        }\n        this.setAdvertising(isAdvertising);\n    }\n\n    async resetState() {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Resetting state for device ' + this.getName() + ' ['+this.getAddress()+']');\n        }\n        /**\n         * @private\n         * @type {number}\n         */\n        this.advertisingUpdatedTimestamp = 0;\n        await this.updateAdvertising();\n        this.updateConnectionStateUponConnectionStateChange(null, StateEnum.DisconnectedAdvertising);\n\n        LegoServiceFactory.clearServices(this.getDeviceId());\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.interrogationFinished = false;\n        /**\n         * @private\n         * @type {SimpleList}\n         */\n        this.rssiValues = new SimpleList();\n        /**\n         * @private\n         * @type {DeviceInfo}\n         */\n        this.deviceInfo = new DeviceInfo();\n        /**\n         *\n         * @type {number}\n         */\n        this.batteryLevel = 0;\n\n        // this.deviceInfo = new DeviceInfo();\n\n        /**\n         *\n         * @type {Map<number, LegoService>}\n         */\n\n        // Clear the queue\n        this.resetQueue();\n        if (this.batteryIntervalId !== null) {\n            clearInterval(this.batteryIntervalId);\n            /**\n             * @private\n             * @type {null}\n             */\n            this.batteryIntervalId = null;\n        }\n\n        // Do not reset things set in 'advertising' as it is possible to reconnect to a device\n        // without ever receiving a advertising package (e.g. on automatic reconnect)\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Device was reset to: ' + this.toString());\n        }\n    }\n\n    get advertising() {\n        return this._advertising;\n    }\n\n    set advertising(value) {\n        const checkedValue = (value === true);\n        const now = new Date().getTime();\n        const diff = now - this.advertisingUpdatedTimestamp;\n        if (this.isAdvertising() && !checkedValue && (diff < LegoDeviceManagerImpl.getInstance().config.disableAdvertisingWindowSizeMillis)) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Ignoring setAdvertising('+ checkedValue +') for ' + this.getName() + ' ['+ this.getAddress() +'] since it was enabled '+ diff +'ms ago. (Window size: ' + LegoDeviceManagerImpl.getInstance().config.disableAdvertisingWindowSizeMillis + 'ms)');\n            }\n            return;\n        }\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Setting advertising = ' + checkedValue + ' for ' + this.getName() + ' ['+ this.getAddress() +']');\n        }\n        /**\n         * @private\n         * @type {*}\n         */\n        this.advertisingUpdatedTimestamp = now;\n        /**\n         * @private\n         * @type {boolean}\n         * @private\n         */\n        this._advertising = checkedValue;\n    }\n\n    resetQueue() {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.synchronousOperationsQueue.length = 0;\n    }\n\n    getQueueSize() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.getQueueSize();\n            }\n        }\n\n        return this.synchronousOperationsQueue.length;\n    }\n\n    getMessagesHandled() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.getMessagesHandled();\n            }\n        }\n\n        return this.messagesHandled;\n    }\n\n    setQueuePollDelay(delayMs) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.setQueuePollDelay(delayMs);\n            }\n        }\n\n        LegoDeviceManagerImpl.getInstance().config.synchronousOperationsQueuePollDelay = delayMs;\n    }\n\n    getQueuePollDelay() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.getQueuePollDelay();\n            }\n        }\n\n        return LegoDeviceManagerImpl.getInstance().config.synchronousOperationsQueuePollDelay;\n    }\n\n    isAdvertising() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.isAdvertising();\n            }\n        }\n\n        return this.advertising;\n    }\n\n    /**\n     *\n     * @param {boolean} advertising\n     * @return {*}\n     */\n    setAdvertising(advertising) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.setAdvertising(advertising);\n            }\n        }\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.advertising = advertising;\n        this.updateConnectionStateUponAdvertisingChange();\n    }\n\n    getAddress() {\n        return this.getDeviceId();\n    }\n\n    getDeviceId() {\n        return this.bluetoothDeviceWrapper.getAddress();\n    }\n\n    async setName(newName) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return await cachedDevice.setName(newName);\n            }\n        }\n\n        if (this.connectState !== StateEnum.InterrogationFinished) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Ignoring call to set device name - not connected to device');\n            }\n            return;\n        }\n        if (newName === undefined || newName === null) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Ignoring call to set device name - newName param is undefined or null');\n            }\n            return;\n        }\n\n        const oldName = this.deviceName;\n        /**\n         * @private\n         */\n        this.deviceName = newName;\n\n        const dataToWrite = Uint8Array.from(this.deviceName.trim() === '' ? [0] : StringUtils.toUtf8Bytes(this.deviceName));\n\n        if (LDSDKLogger.isWarnEnabled()) {\n            LDSDKLogger.warn('Setting name \"' + this.deviceName + '\" - bytes: ' + dataToWrite);\n        }\n\n        /**\n         * We use an optimistic approach when setting the name - we assume that the write is successful. If\n         * we get an {@link android.bluetooth.BluetoothGattCallback#onCharacteristicWrite} with an error, we will revert the value and notify through the callback listener\n         */\n        await this.addWriteOfCharacteristicToQueue(this.nameCharacteristic, dataToWrite.buffer);\n\n        // await this.addReadOfCharacteristicToQueue(this.nameCharacteristic);\n\n        /**\n         * @private\n         */\n        this.getBluetoothDevice().name = newName;\n        const nativeDevice = await this.legoBluetoothDeviceManager.bluetoothAdapter.getDevice(cachedDevice.getAddress()); // Get the device from the OS adapter.\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Got native device from OS ', nativeDevice, ' new name: ' + newName);\n        }\n        nativeDevice.name = newName; // Update the name\n        const wrappedDevice = this.legoBluetoothDeviceManager.bluetoothAdapter.getWrappedDevice(nativeDevice); // getWrappedDevice also updates the cache\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Cache wrapped device after rename: ', wrappedDevice);\n        }\n\n        this.legoDeviceManager.bluetoothDeviceManager.setDevice(this);\n\n        await this.callbackHelper.performDidChangeNameCallback(this, oldName, newName);\n    }\n\n    async updateWithAdvertisementDataAndRSSI(rssi) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return await cachedDevice.updateWithAdvertisementDataAndRSSI(rssi);\n            }\n        }\n\n        this.calculateAverageRSSI(rssi);\n\n        const oldName = this.deviceName;\n        if (this.deviceName && this.deviceName !== null && this.deviceName !== oldName) {\n            /**\n             * @private\n             * @type {string}\n             */\n            this.getBluetoothDevice().name = this.deviceName;\n            await this.callbackHelper.performDidChangeNameCallback(this, oldName, this.deviceName);\n        }\n    }\n\n    updateButtonState(buttonState) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.updateButtonState(buttonState);\n            }\n        }\n\n        const oldButtonPressedState = this.buttonPressed;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.buttonPressed = (buttonState === 1);\n\n        if (this.buttonPressed !== oldButtonPressedState) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('Button ' + (this.buttonPressed ? 'pushed' : 'released'));\n            }\n            this.callbackHelper.performDidChangeButtonStateCallback(this, this.buttonPressed);\n        }\n    }\n\n    calculateAverageRSSI(newRSSI) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.calculateAverageRSSI(newRSSI);\n            }\n        }\n\n        if (this.rssiValues.length() < LegoBluetoothDeviceImpl.NUMBER_OF_RSSI_VALUES_TO_AVERAGE) {\n            // Until we have reached the first NUMBER_OF_RSSI_VALUES_TO_AVERAGE values, just add them\n            this.rssiValues.push(newRSSI);\n        } else {\n            // After having received the 10 first values, replace existing value at rssiIndex\n            this.rssiValues.push(newRSSI);\n            this.rssiValues.splice(0, 1);\n        }\n\n        if (this.rssiIndex <= LegoBluetoothDeviceImpl.NUMBER_OF_RSSI_VALUES_TO_AVERAGE) {\n            // Sort the values in a list a pick the value in the middle of the list as the average value\n            // which is a simple way to ignore outliers.\n            const sortedRSSIValues = [];\n            sortedRSSIValues.addAll(this.rssiValues);\n            sortedRSSIValues.sort((lhs, rhs) => {\n                if (lhs === rhs) {\n                    return 0;\n                } else if (lhs > rhs) {\n                    return 1;\n                } else if (lhs < rhs) {\n                    return -1;\n                }\n            });\n            const middleIndex = sortedRSSIValues.length / 2; // intentionally assign to int, to round down result to\n            // nearest integer\n            /**\n             * @private\n             */\n            this.averageRSSI = sortedRSSIValues[middleIndex];\n        }\n\n        if (this.rssiIndex === LegoBluetoothDeviceImpl.NUMBER_OF_RSSI_VALUES_TO_AVERAGE) {\n            /**\n             * @private\n             * @type {number}\n             */\n            this.rssiIndex = 0;\n        }\n    }\n\n    updateDeviceState(newDeviceState) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.updateDeviceState(newDeviceState);\n            }\n        }\n\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('DeviceConnectionState updated! New state: ' + newDeviceState);\n        }\n        /**\n         * @private\n         */\n        this.connectState = newDeviceState;\n    }\n\n    getRSSIValue() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.getRSSIValue();\n            }\n        }\n\n        return this.averageRSSI;\n    }\n\n    getCategory() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.getCategory();\n            }\n        }\n\n        return this.category;\n    }\n\n    getSupportedFunctions() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.getSupportedFunctions();\n            }\n        }\n\n        return this.supportedFunctions;\n    }\n\n    getLastConnectedNetworkId() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.getLastConnectedNetworkId();\n            }\n        }\n\n        return this.lastConnectedNetworkId;\n    }\n\n    isLowVoltage() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.isLowVoltage();\n            }\n        }\n\n        return this.lowVoltage;\n    }\n\n    /**\n     *\n     * @param {CurrentSensor|GenericService|MotionSensor|PiezoTonePlayer|RGBLight|SimpleMotor|TiltSensor|VoltageSensor} service\n     */\n    addService(service) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.addService(service);\n            }\n        }\n\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Adding service [ConnectId: '+service.getConnectInfo().getConnectId() + ', Type: ' + service.getServiceName() + ']');\n        }\n        LegoServiceFactory.addService(this.getDeviceId(), service);\n    }\n\n    /**\n     *\n     * @param {CurrentSensor|GenericService|MotionSensor|PiezoTonePlayer|RGBLight|SimpleMotor|TiltSensor|VoltageSensor} service\n     * @return {boolean}\n     */\n    removeService(service) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.removeService(service);\n            }\n        }\n\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Removing service [ConnectId: '+service.getConnectInfo().getConnectId() + ', Type: ' + service.getServiceName() + ']');\n        }\n        return LegoServiceFactory.removeService(this.getDeviceId(), service.getConnectInfo().getConnectId());\n    }\n\n    /**\n     * Get the service attached with the given connectId\n     * @param {number} connectId\n     * @return {LegoService}\n     */\n    getService(connectId) {\n        for (const service of this.services.values()) {\n            const connectInfo = service.getConnectInfo();\n            if (connectInfo && connectInfo !== null) {\n                const cachedConnectId = connectInfo.getConnectId();\n                if (connectId === cachedConnectId) {\n                    return service;\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     *\n     * @return {Array<LegoService>} Array of LegoService instances\n     */\n    getServices() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.getServices();\n            }\n        }\n\n        const servicesArray = [];\n        for (const service of this.services.values()) {\n            servicesArray.push(service);\n        }\n        servicesArray.sort((lhs, rhs) => {\n            const lhsConnectID = lhs.getConnectInfo().getConnectId();\n            const rhsConnectID = rhs.getConnectInfo().getConnectId();\n\n            if (lhsConnectID === rhsConnectID) {\n                return 0;\n            } else if (lhsConnectID > rhsConnectID) {\n                return 1;\n            } else {\n                return -1;\n            }\n        });\n        return servicesArray;\n    }\n\n    /**\n     *\n     * @param {bool} autoConnect\n     * @param {BaseBluetoothGattCallback} bluetoothGattCallback\n     */\n    async connectGatt(autoConnect, bluetoothGattCallback) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                try {\n                    return await cachedDevice.connectGatt(autoConnect, bluetoothGattCallback);\n                } catch (err) {\n                    LDSDKLogger.error('cachedDevice.connectGatt failed', err);\n                    throw err;\n                }\n            }\n        }\n\n        this.updateDeviceState(StateEnum.Connecting);\n        try {\n            await this.bluetoothDeviceWrapper.connectGatt(autoConnect, new BluetoothDeviceCallback(this, bluetoothGattCallback));\n        } catch (err) {\n            LDSDKLogger.error('this.bluetoothDeviceWrapper.connectGatt failed', err);\n            throw err;\n        }\n\n    }\n\n    /**\n     * Delegates the call on to the UpdatedInputServiceCharacteristic value handler\n     * @param {NativeCharacteristic} characteristic\n     */\n    async handleUpdatedInputServiceCharacteristic(characteristic) {\n        if (!characteristic || characteristic === null) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + '.handleUpdatedInputServiceCharacteristic ignoring call -' +\n                                  ' The characteristic parameter is not set or null');\n            }\n            return;\n        }\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return await cachedDevice.handleUpdatedInputServiceCharacteristic(characteristic);\n            }\n        }\n\n        const characteristicUuid = UuidHelper.getUuid(characteristic);\n        if (this.bluetoothIO !== null) {\n            if (characteristicUuid !== null) {\n                this.retryCount.delete(characteristicUuid);\n            }\n            await this.bluetoothIO.handleUpdatedInputServiceCharacteristic(characteristic);\n            return;\n        } else {\n            let count = 1;\n            if (characteristicUuid !== null) {\n                if (this.retryCount.has(characteristicUuid)) {\n                    count = this.retryCount.get(characteristicUuid) + 1;\n                }\n                this.retryCount.set(characteristicUuid, count);\n            }\n            if (count < this.maxRetries) {\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug('this.bluetoothIO is null when handling ' + StringUtils.getCharacteristicString(characteristic) + ' -- Retry count: ' + count + '/' + this.maxRetries);\n                }\n                setTimeout(async () => {\n                    await this.handleUpdatedInputServiceCharacteristic(characteristic);\n                }, LegoDeviceManagerImpl.getInstance().config.handleUpdatedInputRetryDelay);\n            } else {\n                throw new Error('BluetoothIO was not set -- Retry count: ' + count + '/' + this.maxRetries\n                        + ' - unable to perform' +\n                        ' handleUpdatedInputServiceCharacteristic - ' + StringUtils.getCharacteristicString(characteristic));\n            }\n        }\n    }\n\n    /**\n     * Delegates the call on to the proper characteristic value handler\n     * @param {NativeCharacteristic} characteristic\n     */\n    async handleReadOrUpdatedCharacteristic(characteristic) {\n        if (!characteristic || characteristic === null) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + '.handleReadOrUpdatedCharacteristic ignoring call -' +\n                                  ' The characteristic parameter is not set or null');\n            }\n            return;\n        }\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return await cachedDevice.handleReadOrUpdatedCharacteristic(characteristic);\n            }\n        }\n\n        const start = new Date().getTime();\n        const characteristicUuid = UuidHelper.getUuid(characteristic);\n        if (this.ioServiceDefinition.matchesService(characteristic.service)) {\n            await this.handleUpdatedInputServiceCharacteristic(characteristic);\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.debug('this.bluetoothIO.handleUpdatedInputServiceCharacteristic('+ characteristicUuid +') executed in ' + (new Date().getTime()-start) + 'ms for ' + StringUtils.getDeviceString(this));\n            }\n        } else if (this.deviceServiceDefinition.matchesService(characteristic.service)) {\n            await this.handleUpdatedDeviceServiceCharacteristic(characteristic);\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('handleUpdatedDeviceServiceCharacteristic('+characteristicUuid+') executed in ' + (new Date().getTime()-start) + 'ms for ' + StringUtils.getDeviceString(this));\n            }\n        } else if (characteristic && characteristic !== null && this.deviceInfoServiceDefinition.matchesService(characteristic.service)) {\n            await this.handleUpdatedDeviceInfoServiceCharacteristic(characteristic);\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('handleUpdatedDeviceInfoServiceCharacteristic('+characteristicUuid+') executed in ' + (new Date().getTime()-start) + 'ms for ' + StringUtils.getDeviceString(this));\n            }\n        } else if (UuidHelper.getUuid(this.batteryLevelCharacteristic) === characteristicUuid) {\n            await this.handleUpdatedBatteryLevelCharacteristic(characteristic);\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('handleUpdatedBatteryLevelCharacteristic('+characteristicUuid+') executed in ' + (new Date().getTime()-start) + 'ms for ' + StringUtils.getDeviceString(this));\n            }\n        } else {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Received update for unknown characteristic: ', characteristic, ' for ' + StringUtils.getDeviceString(this));\n            }\n        }\n    }\n\n    /**\n     *\n     * @return {NativeDevice} The native Bluetooth device object\n     */\n    getBluetoothDevice() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.getBluetoothDevice();\n            }\n        }\n        return this.bluetoothDeviceWrapper.getDevice();\n    }\n\n    /**\n     *\n     * @return {ChromeOsBluetoothDeviceWrapper} The device wrapper object\n     */\n    getBluetoothWrapper() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.getBluetoothWrapper();\n            }\n        }\n        return this.bluetoothDeviceWrapper;\n    }\n\n    /**\n     * Disconnect from the hub - by sending a message to the hub telling it to disconnect from the chromebook (since\n     * the Chromebook disconnect is currently broken - up to and including version 50, which is the latest version\n     * currently).\n     *\n     * @param {LegoBluetoothDeviceManagerImpl} bluetoothDeviceManager - .\n     * @param {bool} userInitiated - Boolean specifying if a user initiated this call, or the system initiated it.\n     *\n     * @return {Promise<Void>} Resolves after disconnect completes\n     */\n    async disconnectGatt(bluetoothDeviceManager, userInitiated) {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info(`Calling disconnectGatt for ${this.getName()} [${this.getAddress()}], userInitiated: ${userInitiated}`);\n        }\n        /**\n         * @private\n         * @type {bool}\n         */\n        this.userInitiatedDisconnect = userInitiated;\n        this.resetQueue();\n        if (this.disconnectCharacteristic !== null) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(`Calling hub disconnect for ${this.getName()} [${this.getAddress()}]`);\n            }\n            const nativeDevice = await this.legoDeviceManager.getBluetoothAdapter().getDevice(this.getDeviceId());\n            if (nativeDevice && nativeDevice !== null && nativeDevice.connected === true) {\n                try {\n                    await this.writeCharacteristic({\n                                                       characteristic: {\n                                                           instanceId: this.disconnectCharacteristic.instanceId\n                                                       },\n                                                       value: new Uint8Array([0]).buffer\n                                                   });\n                    // No reason to queue this - disconnect directly\n                }\n                catch (err) {\n                    // No-op\n                }\n            }\n        }\n\n        // Housekeeping\n        try {\n            this.characteristicNotifications.forEach((characteristic, instanceId) => {\n                if (characteristic && characteristic !== null) {\n                    try {\n                        LDSDKLogger.debug(`Disabling characteristic notifications for  ${StringUtils.getCharacteristicString(characteristic)}`);\n                        this.setCharacteristicNotification(characteristic, false);\n                    } catch (err) {\n                        if (LDSDKLogger.isWarnEnabled()) {\n                            LDSDKLogger.warn(`Failed stopping characteristic notification for ${StringUtils.getCharacteristicString(characteristic)}`);\n                        }\n                    }\n                }\n            });\n        } finally {\n            this.characteristicNotifications.clear();\n        }\n        // Stop the notifications when disconnecting - otherwise they will interfere with the next connect flow\n        // this.setCharacteristicNotification(this.ioCharacteristic, false);\n        // this.setCharacteristicNotification(this.buttonCharacteristic, false);\n        // this.setCharacteristicNotification(this.lowVoltageAlertCharacteristic, false);\n\n        try {\n            await this.getBluetoothWrapper().disconnect();\n        } catch (err) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Failed disconnecting in wrapper: ' + this.getErrorReason(err));\n            }\n        }\n\n        this.deviceNativeServices.clear(); // Clear the cached services\n\n        if (userInitiated) {\n            // Added to fire the didDisconnect event - when the user triggers disconnect.\n            await bluetoothDeviceManager.deviceDidDisconnect(this, 0, userInitiated);\n        }\n\n        await this.resetState();\n\n    }\n\n    /**\n     *\n     * @param {NativeCharacteristic} characteristic\n     */\n    getCleanCharacteristic(characteristic) {\n        if (!characteristic || characteristic === null) {\n            characteristic = {};\n        }\n        // Alternatively delete the 'value' property.\n        return {\n            uuid: characteristic.uuid,\n            instanceId: characteristic.instanceId,\n            properties: characteristic.properties\n        };\n    }\n\n    /**\n     * @ignore\n     *\n     */\n    getErrorReason(err = null) {\n        if (err === null)\n            return '';\n\n        if (typeof err === 'string')\n            return err;\n\n        if (err.hasOwnProperty('message') && typeof err.message === 'string')\n            return err.message;\n\n        return JSON.stringify(err);\n    }\n\n    /**\n     *\n     * @param {NativeCharacteristic} characteristic\n     * @param {number} [retryMaxAttempts = 5]\n     */\n    async startCharacteristicNotificationsWithRetries(characteristic) {\n        if (characteristic === undefined || characteristic === null) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Illegal argument - startCharacteristicNotificationsWithRetries requires the characteristic parameter - it cannot be null or undefined');\n            }\n            return;\n        }\n        let retry = 1;\n        if (this.startNotificationsRetryCount.has(characteristic.uuid)) {\n            retry = this.startNotificationsRetryCount.get(characteristic.uuid) + 1;\n        }\n        this.startNotificationsRetryCount.set(characteristic.uuid, retry);\n\n        try {\n            const res = await this.startCharacteristicNotifications(characteristic);\n            this.startNotificationsRetryCount.delete(characteristic.uuid);\n            return res;\n        } catch (err) {\n            const retryMax = LegoDeviceManagerImpl.getInstance().config.startCharacteristicNotificationsWhenConnectedRetryMax;\n            if (err.endsWith('Error: In progress')) {\n                // TODO: Consider retrying this call without increasing retry count since the bt adapter was unable to fulfill the call\n            }\n            if (retry < retryMax) {\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug('await this.startCharacteristicNotifications(characteristic) failed - scheduling retry #' + retry + '/' + retryMax + ' - error: ' + this.getErrorReason(err));\n                }\n                setTimeout( async () => {\n                    return await this.startCharacteristicNotificationsWithRetries(characteristic);\n                }, LegoDeviceManagerImpl.getInstance().config.startCharacteristicNotificationsWhenConnectedRetryDelay);\n            } else {\n                throw 'startCharacteristicNotificationsWithRetries failed all ' + retryMax + ' startCharacteristicNotifications attempts. Last error:  ' +  this.getErrorReason(err);\n            }\n        }\n    }\n\n    /**\n     *\n     * @param {NativeService} service\n     *\n     * @return {Promise<>}\n     */\n    async discoverCharacteristicsForService(service) {\n        if (!service || service === null) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Illegal argument - discoverCharacteristicsForService requires the service parameter, it must not be null or undefined');\n            }\n            return;\n        }\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return await cachedDevice.discoverCharacteristicsForService(service);\n            }\n        }\n\n        const serviceDefinition = BluetoothServiceDefinition.serviceDefinitionWithUUID(UuidHelper.getUuid(service));\n        if (serviceDefinition !== null) {\n            /**\n             * deviceInfoServiceDefinition MUST be handled first to be able to verify if the SDK and the hub are\n             * compatible\n             */\n            if (BluetoothServiceDefinition.deviceInfoServiceDefinition().matchesService(service)) {\n                await this.discoverCharacteristicsForDeviceInfo(serviceDefinition, service);\n            } else if (BluetoothServiceDefinition.deviceServiceDefinition().matchesService(service)) {\n                await this.discoverCharacteristicsForDevice(serviceDefinition, service);\n            } else if (BluetoothServiceDefinition.ioServiceDefinition().matchesService(service)) {\n                await this.discoverCharacteristicsForIO(service);\n            } else if (BluetoothServiceDefinition.batteryServiceDefinition().matchesService(service)) {\n                await this.discoverCharacteristicsForBattery(serviceDefinition, service);\n            } else {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('Discovered characteristics for unknown service with UUID ' + UuidHelper.getUuid(service));\n                }\n            }\n        }\n    }\n\n    async discoverCharacteristicsForBattery(serviceDefinition, service) {\n        /**\n         * @private\n         */\n        this.batteryServiceDefinition = serviceDefinition;\n        /**\n         * @private\n         * @type {NativeCharacteristic}\n         */\n        this.batteryLevelCharacteristic = await BluetoothHelper.create(this.batteryServiceDefinition.getBatteryLevel().getUuid(), service);\n        if (this.batteryLevelCharacteristic !== null) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Battery level characteristic set to: ' + UuidHelper.getUuid(this.batteryLevelCharacteristic) + ' for device: ' + this.getName() + '[' + this.getAddress() + ']');\n            }\n            if (LegoDeviceManagerImpl.getInstance().config.registerForBatteryLevelNotifications) {\n                // When batteries are close to worn out and one or two motors are running the battery levels fluctuate and can completely flood the ble channel with updates.\n                await this.setCharacteristicNotification(this.batteryLevelCharacteristic, true);\n            } else {\n                // Do polling of the battery level instead of being notified\n                await this.addReadOfCharacteristicToQueue(this.batteryLevelCharacteristic);\n\n                if (this.batteryIntervalId === null) {\n                    const self = this;\n                    /**\n                     * @private\n                     * @type {*}\n                     */\n                    this.batteryIntervalId = setInterval(async () => {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('Scheduling a new read of the battery level');\n                        }\n                        await this.addReadOfCharacteristicToQueue(this.batteryLevelCharacteristic);\n                    }, LegoDeviceManagerImpl.getInstance().config.batteryPollingInterval);\n                }\n            }\n\n        } else {\n            LDSDKLogger.warn('Battery level characteristic is null for device: ' + this.getName() + '[' + this.getAddress() + ']');\n        }\n    }\n\n    async discoverCharacteristicsForIO(service) {\n        LDSDKLogger.info('BluetoothServiceDefinition.ioServiceDefinition() === ' + StringUtils.getInstanceString(service));\n        /**\n         * @private\n         * BluetoothServiceDefinition.ioServiceDefinition() MUST be handled first in the 2nd run of\n         * discovering services as this service definition is used to set the BluetoothIO that all the\n         * services depend on.\n         * @type {BluetoothIO}\n         */\n        if (this.bluetoothIO === null) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Creating BluetoothIO for service: ' + StringUtils.getInstanceString(service));\n            }\n            this.bluetoothIO = await BluetoothIO.bluetoothIO(service, this); // registers for characteristic notifications for updatedInputValueCharacteristic, and updatedInputFormatCharacteristic\n            if (this.bluetoothIO === null) {\n                LDSDKLogger.error('Failed creating bluetoothIO for IO service: ' + StringUtils.getInstanceString(service));\n            } else {\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug('Created bluetoothIO instance for IO service: ' + StringUtils.getInstanceString(service));\n                }\n            }\n        } else {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('BluetoothIO instance already exists for service: ' + StringUtils.getInstanceString(service));\n\n            }\n        }\n    }\n\n    async discoverCharacteristicsForDevice(serviceDefinition, service) {\n// LDSDKLogger.warn('Service '+service.uuid+' is a deviceServiceDefinition');\n        /**\n         * @private\n         */\n        this.deviceServiceDefinition = serviceDefinition;\n\n        /**\n         * @private\n         */\n        this.nameCharacteristic = await BluetoothHelper.create(this.deviceServiceDefinition.getDeviceName().getUuid(), service);\n        /**\n         * @private\n         */\n        this.ioCharacteristic = await BluetoothHelper.create(this.deviceServiceDefinition.getAttachedIO().getUuid(), service);\n        /**\n         * @private\n         */\n        this.disconnectCharacteristic = await BluetoothHelper.create(this.deviceServiceDefinition.getDisconnect().getUuid(), service);\n\n        /**\n         * @private\n         */\n        this.buttonCharacteristic = await BluetoothHelper.create(this.deviceServiceDefinition.getDeviceButton().getUuid(), service);\n        /**\n         * @private\n         */\n        this.lowVoltageAlertCharacteristic = await BluetoothHelper.create(this.deviceServiceDefinition.getLowVoltageAlert().getUuid(), service);\n\n        if (this.nameCharacteristic !== null) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Succesfully added device \"name\" characteristic: ' + UuidHelper.getUuid(this.nameCharacteristic));\n            }\n            await this.addReadOfCharacteristicToQueue(this.nameCharacteristic);\n        }\n        if (this.ioCharacteristic !== null) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Succesfully added device \"Attached IO\" characteristic: ' + UuidHelper.getUuid(this.ioCharacteristic));\n            }\n            this.setCharacteristicNotification(this.ioCharacteristic, true)\n                    .catch(err => {\n                        if (LDSDKLogger.isErrorEnabled()) {\n                            LDSDKLogger.error('Failed starting \"Attached IO\" characteristic notifications. Characteristic uuid: ' + UuidHelper.getUuid(this.ioCharacteristic) + ' - error: ', this.getErrorReason(err));\n                        }\n                        throw err;\n                    });\n        }\n        if (this.disconnectCharacteristic !== null) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Succesfully added device \"Disconnect\" characteristic: ' + UuidHelper.getUuid(this.disconnectCharacteristic));\n            }\n        }\n        if (this.buttonCharacteristic !== null) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Succesfully added device \"Button state\" characteristic: ' + UuidHelper.getUuid(this.buttonCharacteristic));\n            }\n            this.setCharacteristicNotification(this.buttonCharacteristic, true)\n                    .catch(err => {\n                        if (LDSDKLogger.isErrorEnabled()) {\n                            LDSDKLogger.error('Failed starting \"Button state\" characteristic notifications. Characteristic uuid: ' + UuidHelper.getUuid(this.ioCharacteristic) + ' - error: ', this.getErrorReason(err));\n                        }\n                        throw err;\n                    });\n        }\n        if (this.lowVoltageAlertCharacteristic !== null) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Succesfully added device \"Low Voltage Alert\" characteristic: ' + this.lowVoltageAlertCharacteristic);\n            }\n            this.setCharacteristicNotification(this.lowVoltageAlertCharacteristic, true)\n                    .catch(err => {\n                        if (LDSDKLogger.isErrorEnabled()) {\n                            LDSDKLogger.error('Failed starting \"Low Voltage Alert\" characteristic notifications. Characteristic uuid: ' + UuidHelper.getUuid(this.ioCharacteristic) + ' - error: ', this.getErrorReason(err));\n                        }\n                        throw err;\n                    });\n\n        }\n    }\n\n    async discoverCharacteristicsForDeviceInfo(serviceDefinition, service) {\n\n        /**\n         * @private\n         */\n        this.deviceInfoServiceDefinition = serviceDefinition;\n\n        /**\n         * @private\n         */\n        this.firmwareRevisionCharacteristic = await BluetoothHelper.create(this.deviceInfoServiceDefinition.getFirmwareRevision().getUuid(), service);\n        /**\n         * @private\n         */\n        this.hardwareRevisionCharacteristic = await BluetoothHelper.create(this.deviceInfoServiceDefinition.getHardwareRevision().getUuid(), service);\n        /**\n         * @private\n         */\n        this.softwareRevisionCharacteristic = await BluetoothHelper.create(this.deviceInfoServiceDefinition.getSoftwareRevision().getUuid(), service);\n        /**\n         * @private\n         */\n        this.manufacturerCharacteristic = await BluetoothHelper.create(this.deviceInfoServiceDefinition.getManufacturerName().getUuid(), service);\n\n        if (this.firmwareRevisionCharacteristic !== null) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('addReadOfCharacteristicToQueue - firmwareRevisionCharacteristic: ', UuidHelper.getUuid(this.firmwareRevisionCharacteristic));\n            }\n            await this.addReadOfCharacteristicToQueue(this.firmwareRevisionCharacteristic);\n        }\n        if (this.hardwareRevisionCharacteristic !== null) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('addReadOfCharacteristicToQueue - hardwareRevisionCharacteristic: ', UuidHelper.getUuid(this.hardwareRevisionCharacteristic));\n            }\n            await this.addReadOfCharacteristicToQueue(this.hardwareRevisionCharacteristic);\n        }\n        if (this.softwareRevisionCharacteristic !== null) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('addReadOfCharacteristicToQueue - softwareRevisionCharacteristic: ', UuidHelper.getUuid(this.softwareRevisionCharacteristic));\n            }\n            await this.addReadOfCharacteristicToQueue(this.softwareRevisionCharacteristic);\n        }\n        if (this.manufacturerCharacteristic !== null) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('addReadOfCharacteristicToQueue - manufacturerCharacteristic: ', UuidHelper.getUuid(this.manufacturerCharacteristic));\n            }\n            await this.addReadOfCharacteristicToQueue(this.manufacturerCharacteristic);\n        }\n\n    }\n\n    /**\n     *\n     * @param {NativeCharacteristic} characteristic\n     *\n     * @return {Promise}\n     */\n    async addReadOfCharacteristicToQueue(characteristic) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                this.resetQueue();\n                return await cachedDevice.addReadOfCharacteristicToQueue(characteristic);\n            }\n        }\n\n        const cleanCharacteristic = this.getCleanCharacteristic(characteristic);\n        await this.addOperationToSynchronousQueue(cleanCharacteristic, null);\n    }\n\n    /**\n     *\n     * @param {NativeCharacteristic} characteristic\n     * @param {ArrayBuffer} data\n     *\n     * @return {Promise}\n     */\n    async addWriteOfCharacteristicToQueue(characteristic, data) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                this.resetQueue();\n                return await cachedDevice.addWriteOfCharacteristicToQueue(characteristic, data);\n            }\n        }\n\n        const cleanCharacteristic = this.getCleanCharacteristic(characteristic);\n        cleanCharacteristic.value = data;\n\n        await this.addOperationToSynchronousQueue(cleanCharacteristic, null);\n    }\n\n    /**\n     * Add operation to queue and wait for it to execute (or be queued)\n     * @param {NativeCharacteristic} characteristic\n     * @param {NativeDescriptor} descriptor\n     * @param {function} promise  A function that returns a promise that resolves once completed or rejects if failed\n     */\n    async addOperationToSynchronousQueue(characteristic = null, descriptor = null, promise = null) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('Two instances of LegoBluetoothDeviceImpl for ' + this.getDeviceId() + ' detected.' +\n                                      ' Canceling addOperationToSynchronousQueue for ' + this.instanceId + ', continuing flow with cached instance: ' + cachedDevice.instanceId);\n                }\n                this.resetQueue();\n                return await cachedDevice.addOperationToSynchronousQueue(characteristic, descriptor, promise);\n            }\n        }\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('addOperationToSynchronousQueue(' + StringUtils.getCharacteristicString(characteristic) + ', Queue length before add: ' + this.getQueueSize());\n        }\n        if (characteristic !== null) {\n            this.synchronousOperationsQueue.push(SynchronousQueueElement.fromCharacteristic(characteristic, characteristic.value));\n        } else if (descriptor !== null) {\n            this.synchronousOperationsQueue.push(SynchronousQueueElement.fromDescriptor(descriptor, descriptor.value));\n        } else if (promise !== null) {\n            this.synchronousOperationsQueue.push(SynchronousQueueElement.fromPromise(promise));\n        } else {\n            LDSDKLogger.warn('None of the operation arguments were set - skipping addOperationToSynchronousQueue');\n        }\n\n        if (this.getQueueSize() === 1) {\n            setTimeout(async () => {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('Queue size is 1 - start consuming queue asynchronously');\n                }\n                await this.executeNextOperationQueue(); // this.schedulePollQueueIfNotEmpty();\n            }, 0);\n\n        }\n    }\n\n    /**\n     *\n     * @param {SynchronousQueueElement} element\n     * @return {Promise<Void>}\n     */\n    writeCharacteristic(element) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.writeCharacteristic(element);\n            }\n        }\n\n        return this.getBluetoothWrapper().writeCharacteristic(element);\n    }\n\n    /**\n     *\n     * @param {SynchronousQueueElement} element\n     * @return {Promise<NativeCharacteristic>} - The result\n     */\n    readCharacteristic(element) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.readCharacteristic(element);\n            }\n        }\n\n        return this.getBluetoothWrapper().readCharacteristic(element);\n    }\n\n    /**\n     * Calling this function will execute the first element in the queue. If an operation is already executing the\n     * queue size is checked, if it is greater than 0 a new poll of the queue is scheduled.\n     * @return {Promise<Void>} Resolves once the operations has been handled. Rejects in case of errors.\n     */\n    executeNextOperationQueue() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                this.resetQueue();\n                return cachedDevice.executeNextOperationQueue();\n            }\n        }\n\n        const self = this;\n        return new Promise((resolve, reject) => {\n            try {\n                const cachedDevice = self.legoDeviceManager.getDevice(self.getDeviceId(), false);\n                if (cachedDevice && cachedDevice !== null) {\n                    if (self.instanceId !== cachedDevice.instanceId) {\n                        LDSDKLogger.error(`${self.instanceId} ${self.getName()} [${self.getDeviceId()}] - This instance is not the same as the cached instance - abort executeNextOperationQueue`);\n                        return resolve();\n                    }\n                }\n                if (!self.operationExecuting) {\n                    const element = self.synchronousOperationsQueue.splice(0, 1)[0]; // pops first item from array and stores it in element\n\n                    if (element) {\n                        self.setExecutingFlag(true);\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug(`${self.instanceId} ${self.getName()} [${self.getDeviceId()}] - Popped element ${StringUtils.getCharacteristicString(element.characteristic, element.value)} from queue. Queue size: ${self.getQueueSize()}`);\n                        }\n                        self.messagesHandled++;\n                        if (element.characteristic !== null && element.characteristic !== undefined) {\n                            const props = element.characteristic.properties;\n                                if (props && props !== null && element.value !== null && element.value !== undefined && props.indexOf('write') >= 0) {\n                                    const start = new Date().getTime();\n                                    if (LDSDKLogger.isDebugEnabled()) {\n                                        LDSDKLogger.debug(`${self.instanceId} ${self.getName()} [${self.getDeviceId()}] - executeNextOperationQueue element (write): ${UuidHelper.getUuid(element.characteristic)}, Value: ${new Int8Array(element.value)}`);\n                                    }\n                                    self.writeCharacteristic(element)\n                                            .then(()=> {\n                                                if (LDSDKLogger.isTraceEnabled()) {\n                                                    LDSDKLogger.trace(`${self.instanceId} ${self.getName()} [${self.getDeviceId()}] - executeNextOperationQueue writeCharacteristic completed in ${(new Date().getTime()-start)} ms`);\n                                                }\n                                            })\n                                            .then(() => {\n                                                self.setExecutingFlag(false);\n                                                return resolve();\n                                            })\n                                            .catch(err => {\n                                                if (LDSDKLogger.isErrorEnabled()) {\n                                                    LDSDKLogger.error(`${self.instanceId} ${self.getName()} [${self.getDeviceId()}] - executeNextOperationQueue writeCharacteristic (${StringUtils.getCharacteristicString(element.characteristic, element.value)})  Failed after ${(new Date().getTime()-start)} ms. Reason: ${this.getErrorReason(err)}`);\n                                                }\n                                                self.setExecutingFlag(false);\n                                                return reject(err);\n                                            });\n                                } else if ((!props || props === null) || props.indexOf('read') >= 0) {\n                                    if (LDSDKLogger.isDebugEnabled()) {\n                                        LDSDKLogger.debug(`${self.instanceId} ${self.getName()} [${self.getDeviceId()}] - executeNextOperationQueue element (read): ${UuidHelper.getUuid(element.characteristic)} - characteristic properties: ${props}`);\n                                    }\n                                    const start = new Date().getTime();\n                                    self.readCharacteristic(element)\n                                            .then((result) => {\n                                                if (LDSDKLogger.isTraceEnabled()) {\n                                                    LDSDKLogger.trace(`${self.instanceId} ${self.getName()} [${self.getDeviceId()}] - executeNextOperationQueue readCharacteristic completed in ${(new Date().getTime()-start)} ms`);\n                                                }\n                                                self.handleReadOrUpdatedCharacteristic(result);\n                                            })\n                                            .then(() => {\n                                                self.setExecutingFlag(false);\n                                                return resolve();\n                                            })\n                                            .catch(err => {\n                                                if (LDSDKLogger.isErrorEnabled()) {\n                                                    LDSDKLogger.error(`${self.instanceId} ${self.getName()} [${self.getDeviceId()}] - executeNextOperationQueue readCharacteristic Failed after ${(new Date().getTime()-start)} ms`);\n                                                    LDSDKLogger.error(this.getErrorReason(err));\n                                                }\n                                                self.setExecutingFlag(false);\n                                                return reject(err);\n                                            });\n                                } else {\n                                    if (LDSDKLogger.isErrorEnabled()) {\n                                        LDSDKLogger.error('Neither a write nor a read - operation cannot be executed. Dumping element to log', element);\n                                    }\n                                }\n                        } else if (element.descriptor !== undefined && element.descriptor !== null) {\n                            if (LDSDKLogger.isWarnEnabled()) {\n                                LDSDKLogger.warn('TODO :: Descriptor call not yet implemented');\n                            }\n                            if (element.value !== null) {\n                                element.descriptor.setValue(element.value);\n                                // self.bluetoothGatt.writeDescriptor(element.descriptor); //TODO implement using\n                                // chrome.bluetoothLowEnergy\n                            } else {\n                                // self.bluetoothGatt.readDescriptor(element.descriptor); // TODO implement using\n                                // chrome.bluetoothLowEnergy\n                            }\n                            self.setExecutingFlag(false);\n                            return resolve();\n                        } else if (element.promise !== undefined && element.promise !== null) {\n                            if (LDSDKLogger.isDebugEnabled()) {\n                                LDSDKLogger.debug('executeNextOperationQueue - start executing promise in Queue');\n                            }\n                            return element.promise()\n                                    .then(() => {\n                                        if (LDSDKLogger.isDebugEnabled()) {\n                                            LDSDKLogger.debug('executeNextOperationQueue - completed executing promise in Queue');\n                                        }\n                                        self.setExecutingFlag(false);\n                                        return resolve();\n                                    })\n                                    .catch(err => {\n                                        if (LDSDKLogger.isDebugEnabled()) {\n                                            LDSDKLogger.debug('executeNextOperationQueue - failed executing promise in Queue - error: ' + this.getErrorReason(err));\n                                        }\n                                        self.setExecutingFlag(false);\n                                        return reject(err);\n                                    });\n                        }\n                    } else {\n                        self.setExecutingFlag(false);\n                    }\n                } else {\n                    if (self.getQueueSize() > 0) {\n                        if (LDSDKLogger.isTraceEnabled()) {\n                            LDSDKLogger.debug('Operation executing -- Queue size: ' + self.getQueueSize());\n                        }\n                        self.schedulePollQueueIfNotEmpty();\n                    }\n                    return resolve();\n                }\n            } catch (err) {\n                self.setExecutingFlag(false);\n                return reject(`${self.instanceId} ${self.getName()} [${self.getDeviceId()}] - executeNextOperationQueue failed: ${this.getErrorReason(err)}`);\n            }\n        });\n    }\n\n    executeNextOperationQueueTimer = null;\n    schedulePollQueueIfNotEmpty() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return;\n            }\n        }\n\n        if (this.executeNextOperationQueueTimer !== null) {\n            clearTimeout(this.executeNextOperationQueueTimer);\n        }\n        if (this.getQueueSize() > 0) {\n            /**\n             * @private\n             */\n            this.executeNextOperationQueueTimer = setTimeout(async() => {\n                /**\n                 * @private\n                 */\n                this.executeNextOperationQueueTimer = null;\n                this.executeNextOperationQueue();\n            }, LegoDeviceManagerImpl.getInstance().config.synchronousOperationsQueuePollDelay);\n        }\n    };\n\n    /**\n     * @param {bool} executing\n     */\n    setExecutingFlag(executing) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return;\n            }\n        }\n\n        if (LDSDKLogger.isTraceEnabled()) {\n            LDSDKLogger.debug('Set operation executing = ' + executing);\n        }\n        /**\n         * @private\n         */\n        this.operationExecuting = executing;\n        this.schedulePollQueueIfNotEmpty();\n    };\n\n    registerOnCharacteristicListeners() {\n        this.legoDeviceManager.getBluetoothAdapter().registerOnCharacteristicValueChangedListener();\n    }\n\n    characteristicNotifications = new Map();\n    /**\n     *\n     * @param {NativeCharacteristic} characteristic\n     * @return {Promise} - Resolves when the BLE adapter acknowledges that characteristic notifications has\n     * been started. Rejects in case of errors.\n     */\n    startCharacteristicNotifications(characteristic) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.startCharacteristicNotifications(characteristic);\n            }\n        }\n\n        const self = this;\n        return new Promise((resolve, reject) => {\n            if (characteristic.service && characteristic.service.deviceAddress && characteristic.service.deviceAddress !== this.getDeviceId()) {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('The characteristic is not attached to the current device - ignoring it');\n                }\n                return resolve();\n            }\n\n            const timerId = TimerUtil.startTimer();\n            if (!self.characteristicNotifications.has(characteristic.instanceId)) {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('startCharacteristicNotifications for ' + StringUtils.getCharacteristicString(characteristic) + ' --- ' + self.toString());\n                }\n                return this.getBluetoothWrapper().startCharacteristicNotification(characteristic)\n                        .then(() => {\n                            self.characteristicNotifications.set(characteristic.instanceId, characteristic);\n                            if (LDSDKLogger.isDebugEnabled()) {\n                                LDSDKLogger.debug('Completed startCharacteristicNotification in ' + TimerUtil.stopTimer(timerId) + 'ms');\n                            }\n                            return resolve();\n                        })\n                        .catch(err => {\n                            if (LDSDKLogger.isErrorEnabled()) {\n                                LDSDKLogger.error(err);\n                            }\n                            self.characteristicNotifications.delete(characteristic.instanceId);\n                            // TODO: Consider rescheduling a call to startCharacteristicNotifications after a delay\n                            return reject(err);\n                        });\n            } else {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('startCharacteristicNotifications already registered for ' + StringUtils.getCharacteristicString(characteristic) + ' --- ' + self.toString());\n                }\n                return resolve();\n            }\n        });\n    }\n\n    /**\n     *\n     * @param {NativeCharacteristic} characteristic\n     * @param {bool} enable\n     * @return {Promise.<void>} - Resolves when the BLE adapter acknowledges that characteristic notifications has\n     * been enable- or disabled. Rejects in case of errors.\n     */\n    setCharacteristicNotification(characteristic, enable) {\n        if (characteristic === undefined || characteristic === null) {\n            if (LDSDKLogger.isErrorEnabled()) {\n                LDSDKLogger.error('setCharacteristicNotification got characteristic that is null or undefined, unable to set notifications='+enable);\n            }\n            return Promise.reject('setCharacteristicNotification got characteristic that is null or undefined, unable to set notifications='+enable);\n        }\n\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.setCharacteristicNotification(characteristic, enable);\n            }\n        }\n\n        const self = this;\n\n        return new Promise((resolve, reject) => {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info( (enable ? 'Starting' : 'Stopping') + ' notifications for ' + StringUtils.getCharacteristicString(characteristic));\n            }\n            const start = new Date().getTime();\n            if (enable) {\n                const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n                if (cachedDevice && cachedDevice !== null) {\n                    if (this.instanceId !== cachedDevice.instanceId) {\n                        LDSDKLogger.error(`${this.instanceId} ${this.getName()} [${this.getDeviceId()}] - This instance is not the same as the cached instance - Abort enabling characteristic notification`);\n                        return;\n                    }\n                }\n                if (characteristic.properties.indexOf('notify') < 0) {\n                    return reject('Characteristic does not support property \\'notify\\' - properties:' + characteristic.properties);\n                }\n\n                self.registerOnCharacteristicListeners(); // Only registers a characteristic listener if there is not already a listener registered\n\n                return self.startCharacteristicNotificationsWithRetries(characteristic)\n                        .then(() => {\n                            if (LDSDKLogger.isInfoEnabled()) {\n                                LDSDKLogger.info('Done startCharacteristicNotificationsWithRetries ' + StringUtils.getCharacteristicString(characteristic) + ' in ' + (new Date().getTime()-start) + ' ms');\n                            }\n                            return resolve();\n                        })\n                        .catch(err => {\n                            const msg = 'Failed starting characteristic notification for ' + StringUtils.getCharacteristicString(characteristic) + ' Error: ' + this.getErrorReason(err);\n                            if (LDSDKLogger.isErrorEnabled()) {\n                                LDSDKLogger.error(msg);\n                            }\n                            return reject(msg);\n                        })\n                        .then(() => {\n                            if (characteristic.properties.indexOf('read') >= 0) {\n                                if (LDSDKLogger.isDebugEnabled()) {\n                                    LDSDKLogger.debug('Adding read of characteristic to queue - ' + StringUtils.getCharacteristicString(characteristic));\n                                }\n                                return self.addOperationToSynchronousQueue(characteristic, null, null);\n                                // Trigger a first read of the characteristic we have just subscribed to notifications for\n                            } else {\n                                if (LDSDKLogger.isDebugEnabled()) {\n                                    LDSDKLogger.debug('No \"read\" property found for characteristic - ' + StringUtils.getCharacteristicString(characteristic));\n                                }\n                                return resolve();\n                            }\n                        })\n                        .catch(err => {\n                            return reject('Failed adding read operation to queue after starting notification for characteristic - ' + StringUtils.getCharacteristicString(characteristic) + '. Error: ' + this.getErrorReason(err));\n                        });\n\n                // // Add promise to queue that starts characteristic notification for\n                // this.addOperationToSynchronousQueue(null, null, () => {\n                //     return new Promise((resolve, reject) => {\n                //\n                //     })\n                // })\n                // .then(() => {\n                //     return resolve();\n                // })\n                // .catch(err => {\n                //     return reject('Failed adding startCharacteristicNotifications promise to synchronous queue for characteristic ' + StringUtils.getCharacteristicString(characteristic) + '. Error: ' + this.getErrorReason(err));\n                // });\n            } else {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('stopCharacteristicNotifications for ' + StringUtils.getCharacteristicString(characteristic) + ' --- ' + self.toString());\n                }\n                const stopCharacteristicTimer = TimerUtil.startTimer();\n                return this.getBluetoothWrapper().stopCharacteristicNotification(characteristic)\n                        .then(() => {\n                            self.characteristicNotifications.delete(characteristic.instanceId);\n                            if (LDSDKLogger.isDebugEnabled()) {\n                                LDSDKLogger.debug('Completed stopCharacteristicNotification for ' + StringUtils.getCharacteristicString(characteristic) + ' in ' + TimerUtil.stopTimer(stopCharacteristicTimer) + 'ms');\n                            }\n                            return resolve();\n                        })\n                        .catch(err => {\n                            return reject(err);\n                        });\n            }\n            // return resolve();\n        })\n        .catch(err => {\n            LDSDKLogger.error(`setCharacteristicNotification failure. Enable: ${enable}. ${StringUtils.getCharacteristicString(characteristic)}. Error reason: '${this.getErrorReason(err)}'`);\n        });\n    }\n\n    getScanRecord() {\n        return this.scanRecord;\n    }\n\n    /**\n     *\n     * @param {string} error\n     * @param {number} newState - One of the constants defined in StateEnum\n     */\n    updateConnectionStateUponConnectionStateChange(error, newState) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                cachedDevice.updateConnectionStateUponConnectionStateChange(error, newState);\n                return;\n            }\n        }\n        if (error && error !== null) {\n            this.updateDeviceState(StateEnum.DisconnectedNotAdvertising);\n            return;\n        }\n\n        switch (newState) {\n            case StateEnum.Interrogating:\n                this.updateDeviceState(StateEnum.Interrogating);\n                break;\n            case StateEnum.Connecting:\n                this.updateDeviceState(StateEnum.Connecting);\n                break;\n            case StateEnum.DisconnectedAdvertising:\n                if (this.isAdvertising()) {\n                    this.updateDeviceState(StateEnum.DisconnectedAdvertising);\n                } else {\n                    this.updateDeviceState(StateEnum.DisconnectedNotAdvertising);\n                }\n                break;\n            case StateEnum.DisconnectedNotAdvertising:\n                this.updateDeviceState(StateEnum.DisconnectedNotAdvertising);\n                break;\n            default:\n                LDSDKLogger.e('Reached default case when trying to determine new LegeBluetoothDevice state. Unknown state was: ' + newState);\n        }\n    }\n\n    updateConnectionStateUponServicesDiscovered() {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('updateConnectionStateUponServicesDiscovered for ' + this.getAddress());\n        }\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                cachedDevice.updateConnectionStateUponServicesDiscovered();\n                return;\n            }\n        }\n        if (this.connectState !== StateEnum.DisconnectedNotAdvertising) {\n            this.updateDeviceState(StateEnum.InterrogationFinished);\n        }\n    }\n\n    updateConnectionStateUponAdvertisingChange() {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                cachedDevice.updateConnectionStateUponAdvertisingChange();\n                return;\n            }\n        }\n\n        if (this.connectState === StateEnum.DisconnectedNotAdvertising && this.isAdvertising()) {\n            this.updateDeviceState(StateEnum.DisconnectedAdvertising);\n        } else if (this.connectState === StateEnum.DisconnectedAdvertising && !this.isAdvertising()) {\n            this.updateDeviceState(StateEnum.DisconnectedNotAdvertising);\n        }\n    }\n\n    /**\n     *\n     * @param {NativeCharacteristic} characteristic\n     */\n    handleUpdatedDeviceServiceCharacteristic(characteristic) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                cachedDevice.handleUpdatedDeviceServiceCharacteristic(characteristic);\n                return;\n            }\n        }\n        if (this.deviceServiceDefinition.getDeviceName().matchesCharacteristic(characteristic)) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('handleUpdatedDeviceServiceCharacteristic DeviceName - ('+ StringUtils.getCharacteristicString(characteristic) +')');\n            }\n\n            const oldName = this.getName();\n            const newName = StringUtils.decodeUtf8(characteristic.value);\n\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(`Received new device name: ${newName}`);\n            }\n\n            /**\n             * @private\n             */\n            this.deviceName = newName;\n\n            if (newName !== oldName) {\n                /**\n                 * @private\n                 */\n                this.getBluetoothDevice().name = newName;\n                this.callbackHelper.performDidChangeNameCallback(this, oldName, newName);\n            }\n        } else if (this.deviceServiceDefinition.getAttachedIO().matchesCharacteristic(characteristic)) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('handleUpdatedDeviceServiceCharacteristic AttachedIO - ('+ StringUtils.getCharacteristicString(characteristic) +')');\n            }\n            this.handleAttachedIOData(characteristic.value);\n        } else if (this.deviceServiceDefinition.getDeviceButton().matchesCharacteristic(characteristic)) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('handleUpdatedDeviceServiceCharacteristic DeviceButton - ('+ StringUtils.getCharacteristicString(characteristic) +')');\n            }\n            if (characteristic.value.byteLength !== 1) {\n                LDSDKLogger.error(`Unexpected length of button state characteristic, expected 1 but was ${characteristic.value.byteLength}`);\n                return;\n            }\n            const newStateInt = new DataView(characteristic.value).getUint8(0);\n            this.updateButtonState(newStateInt);\n        } else if (this.deviceServiceDefinition.getLowVoltageAlert().matchesCharacteristic(characteristic)) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('handleUpdatedDeviceServiceCharacteristic LowVoltageAlert - ('+ StringUtils.getCharacteristicString(characteristic) +')');\n            }\n            this.handleUpdatedLowVoltageAlertCharacteristic(characteristic);\n        } else {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Received updated value for unknown characteristic ', characteristic, 'Value: ', new Int8Array(characteristic.value));\n            }\n        }\n    }\n\n    /**\n     *\n     * @param {ArrayBuffer} data\n     */\n    handleAttachedIOData(data) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                cachedDevice.handleAttachedIOData(data);\n                return;\n            }\n        }\n\n        // Format for attach: {0: deviceId, 1: attached|detached, 2: hubIndex, 3: ioType, 4-8: hwVersion, 8-12:\n        // fwVersion}\n        // Format for detach: {0: deviceId, 1: attached|detached }\n        if (data.byteLength < 2) {\n            const errorMessage = `Did receive IO attached/detached notification from Device with size ${data.byteLength}, must be size ${LegoBluetoothDeviceImpl.SIZE_OF_ATTACHED_IO_DATA} for attached and size 2 for detached`;\n\n            LDSDKLogger.error(errorMessage);\n\n            const error = LDSDKError.deviceError(LDSDKError.ErrorCode.INTERNAL_ERROR, errorMessage);\n            this.callbackHelper.performDidFailToAddServiceWithErrorCallback(this, error);\n            return;\n        }\n\n        const dataView = new DataView(data);\n        const connectID = dataView.getUint8(0); // Arrays.copyOfRange(data, 0, 1)[0];\n        const attached = dataView.getUint8(1); // Arrays.copyOfRange(data, 1, 2)[0];\n\n        if (attached === 0) {\n            const service = this.serviceWithConnectID(connectID);\n            if (service !== null) {\n                this.removeService(service);\n                this.callbackHelper.performDidRemoveServiceCallback(this, service);\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('Removed input/output: ' + service.getConnectInfo(), ' - new service count:' + this.services.size);\n                }\n            } else {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('Received notification for detached IO with unknown connect id ' + connectID);\n                }\n            }\n        } else {\n            if (data.byteLength !== LegoBluetoothDeviceImpl.SIZE_OF_ATTACHED_IO_DATA) {\n                const errorMessage = `Did receive IO attached notification from Device with size ${data.byteLength}, must be size ${LegoBluetoothDeviceImpl.SIZE_OF_ATTACHED_IO_DATA}`;\n\n                LDSDKLogger.error(errorMessage);\n\n                const error = LDSDKError.deviceError(LDSDKError.ErrorCode.INTERNAL_ERROR, errorMessage);\n                this.callbackHelper.performDidFailToAddServiceWithErrorCallback(this, error);\n                return;\n            }\n\n            const typedDataArray = new Int8Array(data);\n\n            const hubIndex = dataView.getUint8(2); // Arrays.copyOfRange(data, 2, 3)[0];\n            const ioType = dataView.getUint8(3); // Arrays.copyOfRange(data, 3, 4)[0];\n\n            const hwRevision = typedDataArray.slice(4, 8); // Arrays.copyOfRange(data, 4, 8);\n            const fwRevision = typedDataArray.slice(8, 12); // Arrays.copyOfRange(data, 8, 12);\n\n            const connectInfo = new ConnectInfo(connectID, hubIndex, ioType, Revision.createFromData(hwRevision), Revision.createFromData(fwRevision));\n\n            const createdService = LegoServiceFactory.create(connectInfo, this.bluetoothIO, this);\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Created service - bluetoothIO is set: ' + ((this.bluetoothIO && this.bluetoothIO !== null) ? 'True' : 'False') + ' --- ' + createdService.toString() + ', Services: ' + this.services.size);\n            }\n            if (createdService !== null) {\n                this.addService(createdService);\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info(`Added input/output ${createdService.getConnectInfo().toString()}`, createdService.getServiceName(), ' - new service count:' + this.services.size);\n                }\n                this.callbackHelper.performDidAddServiceCallback(this, createdService);\n            }\n\n        }\n    }\n\n    async performUpdateDeviceInfo(error = null) {\n        if (this.callbackHelper && this.callbackHelper !== null) {\n                await this.callbackHelper.performDidUpdateDeviceInfoCallback(this, this.getBluetoothDevice().deviceInfo , error);\n        } else {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + '. performUpdateDeviceInfo has no callbackhelper' +\n                                  ' registered - unable to forward the call to performDidUpdateDeviceInfoCallback');\n            }\n        }\n    }\n\n    /**\n     * A call to this function is triggered for each of the characteristics in DeviceInfoServiceDefinition\n     * when we do discoverCharacteristicsForService where service is the DeviceInfoService\n     * @param {NativeCharacteristic} characteristic\n     * @return {Promise}\n     */\n    async handleUpdatedDeviceInfoServiceCharacteristic(characteristic) {\n        if (!characteristic || characteristic === null) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Illegal argument - handleUpdatedDeviceInfoServiceCharacteristic requires the characteristic parameter to be set');\n            }\n            return;\n        }\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return await cachedDevice.handleUpdatedDeviceInfoServiceCharacteristic(characteristic);\n            }\n        }\n\n        const valueString = StringUtils.decodeUtf8(characteristic.value);\n        if (this.deviceInfoServiceDefinition.getFirmwareRevision().matchesCharacteristic(characteristic)) {\n            this.deviceInfo.setFirmwareRevisionString(valueString);\n        } else if (this.deviceInfoServiceDefinition.getHardwareRevision().matchesCharacteristic(characteristic)) {\n            this.deviceInfo.setHardwareRevisionString(valueString);\n        } else if (this.deviceInfoServiceDefinition.getSoftwareRevision().matchesCharacteristic(characteristic)) {\n            this.deviceInfo.setSoftwareRevisionString(valueString);\n        } else if (this.deviceInfoServiceDefinition.getManufacturerName().matchesCharacteristic(characteristic)) {\n            this.deviceInfo.setManufacturerName(valueString);\n        }\n\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('handleUpdatedDeviceInfoServiceCharacteristic for uuid: ' + UuidHelper.getUuid(characteristic) + ': ' + valueString + ' --- DeviceInfo complete: ' + this.deviceInfo.isComplete());\n        }\n        // We have received values for all required device info characteristics\n        let error = null;\n        if (this.deviceInfo.isComplete()) {\n            /* BuildConfig.BLUETOOTH_DEVICE_FIRMWARE_VERSION */\n            const firmwareRevisionTestedWithSDK = Revision.createFromString('1.0.9.0');\n            const deviceFirmwareRevision = this.deviceInfo.getFirmwareRevision();\n\n            if (deviceFirmwareRevision.getMajorVersion() <= firmwareRevisionTestedWithSDK.getMajorVersion()) {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('Device has firmware supported by SDK - querying characteristics for remaining services');\n                }\n\n                setTimeout(async () => {\n                    try {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('discoverServices 2nd time');\n                        }\n                        let services = [];\n                        if (this.deviceNativeServices.size >= 5) {\n                            this.deviceNativeServices.forEach((value, key, map) => {\n                                services.push(value);\n                            });\n                            if (LDSDKLogger.isDebugEnabled()) {\n                                LDSDKLogger.debug('Found ' + services.length + ' deviceServices for device ' + this.getAddress());\n                            }\n                        } else {\n                            services = await this.getBluetoothWrapper().discoverServices();\n                            if (LDSDKLogger.isDebugEnabled()) {\n                                LDSDKLogger.debug('Found ' + services.length + ' services using discoverServices for device ' + this.getAddress());\n                            }\n                        }\n                        if (LDSDKLogger.isInfoEnabled()) {\n                            LDSDKLogger.info(`DeviceInfo complete: Discovered ${services.length} service characteristics`);\n                        }\n                        services.sort((lhs, rhs) => {\n                            // Make sure that the ioService is handled first as that creates the bluetoothIO that is\n                            // needed by the LegoServices created by the deviceService.\n                            const ioServiceDef = BluetoothServiceDefinition.ioServiceDefinition();\n                            if (ioServiceDef.matchesService(lhs) && !ioServiceDef.matchesService(rhs)) {\n                                return -10;\n                            }\n                            if (!ioServiceDef.matchesService(lhs) && ioServiceDef.matchesService(rhs)) {\n                                return 10;\n                            }\n                            if (ioServiceDef.matchesService(lhs) && ioServiceDef.matchesService(rhs)) {\n                                return 0;\n                            }\n                            if (!ioServiceDef.matchesService(lhs) && !ioServiceDef.matchesService(rhs)) {\n                                if (lhs && lhs !== null && lhs.uuid && rhs) {\n                                    return lhs.uuid.localeCompare(rhs.uuid);\n                                }\n                            }\n                        });\n\n                        // The Device Firmware is supported - query for characteristics for all remaining discovered\n                        // services\n                        for (let i = 0; i < services.length; i++) {\n                            const service = services[i];\n                            if (service === undefined || service === null) {\n                                LDSDKLogger.error('Service not initialized - (characteristic: ' + StringUtils.getCharacteristicString(characteristic)+')');\n                                continue;\n                            }\n                            if (LDSDKLogger.isInfoEnabled()) {\n                                const serviceDef = BluetoothServiceDefinition.serviceDefinitionWithUUID(UuidHelper.getUuid(service));\n                                let serviceDefName = 'N/A';\n                                if (serviceDef !== null) {\n                                    serviceDefName = serviceDef.serviceName;\n                                }\n                                LDSDKLogger.info(`Got service type ${serviceDefName} from device ${this.getName()}. Native service: ${StringUtils.getInstanceString(service)}`);\n                            }\n                            if (!(DeviceInfoServiceDefinition.getInstance().matchesService(service))) {\n                                if (LDSDKLogger.isInfoEnabled()) {\n                                    LDSDKLogger.info('Doing characteristics discovery for service ' + StringUtils.getInstanceString(service));\n                                }\n                                await this.discoverCharacteristicsForService(service);\n                            }\n                        }\n\n                        if (!this.interrogationFinished) {\n                            /**\n                             * @private\n                             * @type {boolean}\n                             */\n                            this.interrogationFinished = true;\n                            this.updateConnectionStateUponServicesDiscovered();\n                        }\n\n\n                    } catch (e) {\n                        LDSDKLogger.error('Failed service lookup:', this.getErrorReason(e));\n                        // this.onServicesDiscovered(e, null);\n                    }\n                }, 0);\n\n\n                if (deviceFirmwareRevision.getMajorVersion() === firmwareRevisionTestedWithSDK.getMajorVersion() &&\n                        deviceFirmwareRevision.getMinorVersion() > firmwareRevisionTestedWithSDK.getMinorVersion()) {\n                    LDSDKLogger.warn(`SDK is tested to work with Device Firmware version ${firmwareRevisionTestedWithSDK} but is connected to a Device with Firmware version ${deviceFirmwareRevision}.\\n All Device features may not be supported by SDK.`);\n                }\n            } else {\n                LDSDKLogger.error(`Did connect to Device with firmware version ${deviceFirmwareRevision} where minimum required major version is ${firmwareRevisionTestedWithSDK.getMajorVersion()}`);\n\n                error = LDSDKError.deviceError(\n                        ErrorCode.BLUETOOTH_UNSUPPORTED_FIRMWARE_VERSION,\n                        `Device firmware version ${deviceFirmwareRevision} not supported by SDK, SDK requires firmware major version ${firmwareRevisionTestedWithSDK.getMajorVersion()}`);\n            }\n            this.callbackHelper.performDidUpdateDeviceInfoCallback(this, this.getBluetoothDevice().deviceInfo , error);\n        }\n    }\n\n    handleUpdatedBatteryLevelCharacteristic(characteristic) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                cachedDevice.handleUpdatedBatteryLevelCharacteristic(characteristic);\n                return;\n            }\n        }\n\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info(`Received new batterylevel ${new Uint8Array(characteristic.value)} for ${StringUtils.getDeviceString(this)}`);\n        }\n        if (characteristic.value.byteLength === 1) {\n            /**\n             * @private\n             */\n            this.batteryLevel = new DataView(characteristic.value).getUint8(0);\n                    // characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT8, 0);\n            this.callbackHelper.performDidUpdateBatteryLevelCallback(this, this.batteryLevel);\n        }\n    }\n\n    handleUpdatedLowVoltageAlertCharacteristic(characteristic) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                cachedDevice.handleUpdatedLowVoltageAlertCharacteristic(characteristic);\n                return;\n            }\n        }\n\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info(`Received new low voltage alert ${new Uint8Array(characteristic.value)}`);\n        }\n        if (characteristic.value.byteLength === 1) {\n            /**\n             * @private\n             */\n            this.lowVoltage = new DataView(characteristic.value).getUint8(0) === 1;\n                    // characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT8, 0) === 1;\n            this.callbackHelper.performDidUpdateLowVoltageStateCallback(this, this.lowVoltage);\n        }\n    }\n\n    /**\n     *\n     * @param {number} connectID\n     * @return {CurrentSensor|GenericService|MotionSensor|PiezoTonePlayer|RGBLight|SimpleMotor|TiltSensor|VoltageSensor} - Returns a @see {@link LegoService} implementation or null if no service found for that connectID\n     */\n    serviceWithConnectID(connectID) {\n        const cachedDevice = this.legoDeviceManager.getDevice(this.getDeviceId(), false);\n        if (cachedDevice && cachedDevice !== null ) {\n            if (this.instanceId !== cachedDevice.instanceId) {\n                return cachedDevice.serviceWithConnectID(connectID);\n            }\n        }\n\n        const idToFind = parseInt(connectID);\n        const cachedService = this.services.get(idToFind);\n        if (cachedService && cachedService !== null) {\n            return cachedService;\n        } else {\n            this.services.forEach((service, serviceConnectId) => {\n                if (idToFind === serviceConnectId) {\n                    return service;\n                }\n            });\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('No service found for connectId: ' + idToFind + ' - dumping list of services to debug' +\n                                  ' log:');\n                this.services.forEach((service, serviceConnectId) => {\n                    LDSDKLogger.debug('Service [connectId: ' + serviceConnectId + ', Type: ' + service.getServiceName() + ']');\n                });\n            }\n\n        }\n        return null;\n    }\n\n    async cleanUp() {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info(`Cleaning up device ${this.getName()}`);\n        }\n        await this.resetState();\n    }\n\n    closeGatt() {\n        if (this.bluetoothGatt === null) {\n            return;\n        }\n\n        try {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('Closing BluetoothGatt');\n            }\n            this.bluetoothGatt.close();\n        } catch (e) {\n            LDSDKLogger.error('An exception has occurred while closing BluetoothGatt: ', this.getErrorReason(e));\n        }\n    }\n\n    hasUserInitiatedDisconnect() {\n        return this.userInitiatedDisconnect;\n    }\n\n    toString() {\n        const nativeDeviceString = `NativeDevice[paired: ${this.getBluetoothDevice().paired}, connectable: ${this.getBluetoothDevice().connectable}, connected: ${this.getBluetoothDevice().connected}, connecting: ${this.getBluetoothDevice().connecting}, inquiryRssi: ${this.getBluetoothDevice().inquiryRssi}]`;\n        return `Name: ${this.getName()}, [InstanceId: '${this.instanceId}', Address: ${this.getAddress()}, State: ${this.getConnectState()}, Services: ${this.services.size}] - ${nativeDeviceString}`;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/bluetooth/LegoBluetoothDeviceImpl.js","/**\n * Created by frj on 12/02/16.\n */\nimport Revision from './Revision';\n\nexport default class DeviceInfo {\n\n    constructor() {\n        this.firmwareRevision = null;\n        this.hardwareRevision = null;\n        this.softwareRevision = null;\n        this.manufacturerName = null;\n    }\n\n    getFirmwareRevision() {\n        return this.firmwareRevision;\n    }\n\n    getHardwareRevision() {\n        return this.hardwareRevision;\n    }\n\n    getSoftwareRevision() {\n        return this.softwareRevision;\n    }\n\n    getManufacturerName() {\n        return this.manufacturerName;\n    }\n\n    setFirmwareRevisionString(firmwareRevision) {\n        this.firmwareRevision = Revision.createFromString(firmwareRevision);\n    }\n\n    setHardwareRevisionString(hardwareRevision) {\n        this.hardwareRevision = Revision.createFromString(hardwareRevision);\n    }\n\n    setSoftwareRevisionString(softwareRevision) {\n        this.softwareRevision = Revision.createFromString(softwareRevision);\n    }\n\n    setManufacturerName(manufacturerName) {\n        this.manufacturerName = manufacturerName;\n    }\n\n    isComplete() {\n        // Hardware revision is not mandatory\n        return (this.firmwareRevision !== null && /* this.hardwareRevision != null && */ this.softwareRevision !== null && this.manufacturerName !== null);\n    }\n\n    /**\n     * Get simple version of the device info\n     * @return {{firmwareRevision: string, hardwareRevision: string, softwareRevision: string, manufacturerName: string}}\n     */\n    getSimpleDeviceInfo() {\n        return {\n            firmwareRevision: this.getFirmwareRevision(),\n            hardwareRevision: this.getHardwareRevision(),\n            softwareRevision: this.getSoftwareRevision(),\n            manufacturerName: this.getManufacturerName()\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/device/DeviceInfo.js","import LDSDKLogger from '../helpers/LDSDKLogger';\n/**\n * Created by frj on 12/02/16.\n */\n\nexport default class Revision {\n\n    static createFromString(revisionString) {\n        return new Revision(revisionString);\n    }\n\n    static createFromData(revisionDataBuffer) {\n        return new Revision(revisionDataBuffer);\n    }\n\n    constructor(revisionStringOrBuffer) {\n        if (typeof revisionStringOrBuffer === 'string') {\n            this.parseRevision(revisionStringOrBuffer);\n        }\n        else if (revisionStringOrBuffer instanceof Int8Array\n                || revisionStringOrBuffer instanceof Uint8Array\n                || revisionStringOrBuffer instanceof ArrayBuffer) {\n            this.parseRevisionBuffer(revisionStringOrBuffer);\n        } else {\n            LDSDKLogger.error('Cannot parse argument: ', revisionStringOrBuffer);\n        }\n    }\n\n    parseRevisionBuffer(bufferOrTypedArray) {\n        if ((bufferOrTypedArray instanceof Int8Array) || (bufferOrTypedArray instanceof Uint8Array)) {\n            if (bufferOrTypedArray.byteLength >= 1) {\n                this.majorVersion = bufferOrTypedArray[0];\n            }\n            if (bufferOrTypedArray.byteLength >= 2) {\n                this.minorVersion = bufferOrTypedArray[1];\n            }\n            if (bufferOrTypedArray.byteLength >= 3) {\n                this.bugFixVersion = bufferOrTypedArray[2];\n            }\n            if (bufferOrTypedArray.byteLength >= 4) {\n                this.buildNumber = bufferOrTypedArray[3];\n            }\n        }\n        else if (bufferOrTypedArray instanceof ArrayBuffer) {\n            const view = new DataView(bufferOrTypedArray);\n            if (bufferOrTypedArray.byteLength >= 1) {\n                this.majorVersion = view.getInt8(0);\n            }\n            if (bufferOrTypedArray.byteLength >= 2) {\n                this.minorVersion = view.getInt8(1);\n            }\n            if (bufferOrTypedArray.byteLength >= 3) {\n                this.bugFixVersion = view.getInt8(2);\n            }\n            if (bufferOrTypedArray.byteLength >= 4) {\n                this.buildNumber = view.getInt8(3);\n            }\n        }\n    }\n\n    parseRevision(revisionString) {\n        const matches = revisionString.match(/(^\\d+(\\.\\d+){0,3}$)/);\n        if (matches) {\n            const versionComponents = revisionString.split('.');\n            if (versionComponents.length >= 1) {\n                this.majorVersion = versionComponents[0];\n            }\n            if (versionComponents.length >= 2) {\n                this.minorVersion = versionComponents[1];\n            }\n            if (versionComponents.length >= 3) {\n                this.bugFixVersion = versionComponents[2];\n            }\n            if (versionComponents.length >= 4) {\n                this.buildNumber = versionComponents[3];\n            }\n        } else {\n            // If string contains anything but numbers and '.' then set all properties to zero\n            this.majorVersion = 0;\n            this.minorVersion = 0;\n            this.bugFixVersion = 0;\n            this.buildNumber = 0;\n        }\n    }\n\n    getMajorVersion() {\n        return this.majorVersion;\n    }\n\n    getMinorVersion() {\n        return this.minorVersion;\n    }\n\n    getBugFixVersion() {\n        return this.bugFixVersion;\n    }\n\n    getBuildNumber() {\n        return this.buildNumber;\n    }\n\n    toString() {\n        return this.majorVersion + '.' + this.minorVersion + '.' + this.bugFixVersion + '.' + this.buildNumber;\n    }\n\n    toBytes() {\n        return new Uint8Array(this.toBuffer());\n    }\n\n    equals(o) {\n        if (this === o) return true;\n        if (o === null || this.constructor.name !== o.constructor.name) return false;\n\n        if (this.bugFixVersion !== o.bugFixVersion) return false;\n        if (this.buildNumber !== o.buildNumber) return false;\n        if (this.majorVersion !== o.majorVersion) return false;\n        if (this.minorVersion !== o.minorVersion) return false;\n\n        return true;\n    }\n\n    toBuffer() {\n        const bufferView = new DataView(new ArrayBuffer(4));\n        bufferView.setUint8(0,this.majorVersion);\n        bufferView.setUint8(1,this.minorVersion);\n        bufferView.setUint8(2,this.bugFixVersion);\n        bufferView.setUint8(3,this.buildNumber);\n        return bufferView.buffer;\n    }\n\n    /**\n     * Get a simple revision representation of this instance\n     * @return {{majorVersion: number, minorVersion: number, bugFixVersion: number, buildNumber: number, toString: toString}}\n     */\n    getSimpleRevision() {\n        return {\n            majorVersion: this.getMajorVersion(),\n            minorVersion: this.getMinorVersion(),\n            bugFixVersion: this.getBugFixVersion(),\n            buildNumber: this.getBuildNumber(),\n            toString: function() { return this.toString(); }\n        };\n    }\n}\n\n// export Revision as Revision;\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/device/Revision.js","/**\n * @ignore Internal use only\n * Created by frj on 29/02/16.\n */\nimport LDSDKLogger from './LDSDKLogger';\nimport UuidHelper from './UuidHelper';\nimport ChromeOsBluetoothDeviceWrapper from '../bluetooth/ChromeOsBluetoothDeviceWrapper';\nimport StringUtils from './StringUtils';\n\nexport default class BluetoothHelper {\n\n    /**\n     * @private\n     * @type {Map}\n     */\n    static characteristicsForService = new Map();\n\n    /**\n     * Gets the characteristic with the given characteristicUUID from a service\n     *\n     * @param {string} characteristicUUID\n     * @param {NativeService} service\n     * @return {Promise.<NativeCharacteristic>} Will either resolve to the found characteristic, or resolve null if\n     * the characteristic uuid is not found in the service.\n     */\n    static create(characteristicUUID, service) {\n        if (service === undefined || service === null || service.instanceId === undefined || service.instanceId === null) {\n            if (LDSDKLogger.isErrorEnabled()) {\n                LDSDKLogger.error(`Service argument or service.instanceId is not set - unable to find characteristic with uuid: ${characteristicUUID}`);\n            }\n            return Promise.resolve(null);\n        }\n        return new Promise((resolve, reject) => {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(`Getting characteristics for service: ${UuidHelper.getUuid(service)} ( ${service.instanceId})`);\n            }\n            if (BluetoothHelper.characteristicsForService.has(service.instanceId)) {\n                const characteristics = BluetoothHelper.characteristicsForService.get(service.instanceId);\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug('Returning ' + characteristics.length + ' cached native characteristics for service ' + StringUtils.getInstanceString(service));\n                }\n                return resolve(characteristics);\n            }\n            // TODO: Use implementation in ChromeOsBluetoothDeviceWrapper\n            chrome.bluetoothLowEnergy.getCharacteristics(service.instanceId, (characteristics) => {\n                if (chrome.runtime.lastError) {\n                    const msg = 'chrome.bluetoothLowEnergy.getCharacteristics failed lookup of service instance id: \"' + service.instanceId + '\". Original message: ' + chrome.runtime.lastError.message;\n                    return reject(msg);\n                }\n                if (characteristics.length > 0) {\n                    if (LDSDKLogger.isInfoEnabled()) {\n                        LDSDKLogger.info('Caching ' + characteristics.length + ' characteristics for service ' + StringUtils.getInstanceString(service));\n                    }\n                    BluetoothHelper.characteristicsForService.set(service.instanceId, characteristics);\n                }\n                return resolve(characteristics);\n            });\n        })\n        .then((characteristics) => {\n            if (!characteristics || characteristics === null || (Array.isArray(characteristics) && characteristics.length === 0)) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('No characteristics found for ' + UuidHelper.getUuid(service) + ' - unable to search for characteristic uuid: ' + characteristicUUID);\n                }\n            } else {\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug('Searching service '+ UuidHelper.getUuid(service) +' for characteristic uuid: ', characteristicUUID);\n                }\n                for (let i = 0; i < characteristics.length; i++) {\n                    const characteristic = characteristics[i];\n                    if (characteristicUUID === UuidHelper.getUuid(characteristic)) {\n                        if (LDSDKLogger.isInfoEnabled()) {\n                            LDSDKLogger.info('Found matching characteristic for characteristic uuid: ', UuidHelper.getUuid(characteristic), ' in service ' + UuidHelper.getUuid(service));\n                        }\n                        return Promise.resolve(characteristic);\n                    }\n                }\n            }\n            return Promise.resolve(null);\n        })\n        .catch(err => {\n            Promise.reject(err);\n        });\n    }\n\n    static arrayOfStringsFromCharacteristicProperties(properties) {\n        return JSON.stringify(properties);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/BluetoothHelper.js","import { IOType } from '../../device/ConnectInfo';\nimport MotionSensor from './MotionSensor';\nimport TiltSensor from './TiltSensor';\nimport SimpleMotor from './SimpleMotor';\nimport CurrentSensor from './CurrentSensor';\nimport VoltageSensor from './VoltageSensor';\nimport PiezoTonePlayer from './PiezoTonePlayer';\nimport RGBLight from './RGBLight';\nimport GenericService from './GenericService';\nimport LDSDKLogger from '../../helpers/LDSDKLogger';\n\n/**\n * @ignore\n * The LEGO Service Factory is used for creating, initializing and keeping track of the services connected to the hub\n * Created by frj on 11/02/16.\n */\nexport default class LegoServiceFactory {\n\n    /**\n     * @private\n     * @type {Map<string, LegoService>}\n     */\n    static deviceToServices = new Map();\n\n    /**\n     * @ignore\n     * Create a service instance\n     *\n     * @param {ConnectInfo} connectInfo\n     * @param {BluetoothIO} io\n     * @param {LegoBluetoothDeviceImpl} device\n     * @return {CurrentSensor|GenericService|MotionSensor|PiezoTonePlayer|RGBLight|SimpleMotor|TiltSensor|VoltageSensor} - An implementation of @see {@link LegoService}\n     */\n    static create(connectInfo, io, device) {\n        if (io === null || connectInfo === null) {\n            LDSDKLogger.error('Cannot instantiate service with null IO object or ConnectInfo. ConnectInfo:' + connectInfo + ', IO: ' + io +\n            ', device: ' + device);\n            return null;\n        }\n\n        const servicesForDeviceMap = LegoServiceFactory.getServiceInstances(device.getDeviceId());\n        if (servicesForDeviceMap.has(connectInfo.getConnectId())) {\n            const service = servicesForDeviceMap.get(connectInfo.getConnectId());\n            if (service.getConnectInfo().getTypeEnum() === connectInfo.getTypeEnum()) {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('Factory returning cached LegoService: ' + service.getSimpleService());\n                }\n                io.getCallbackHelper().checkOrRegisterAsCallbackListener(service);\n                // If this is a new BluetoothIO instance the callbackHelper instance will have an empty map. So even\n                // though the service is cached, we need to ensure that the service itself is registered as a\n                // listener if it is not already.\n                return service;\n            }\n        }\n\n        let result;\n        switch (connectInfo.getTypeEnum()) {\n            case IOType.IO_TYPE_GENERIC:\n                result = GenericService.createService(connectInfo, io);\n                break;\n            case IOType.IO_TYPE_MOTION_SENSOR:\n                result = MotionSensor.createService(connectInfo, io);\n                break;\n            case IOType.IO_TYPE_TILT_SENSOR:\n                result = TiltSensor.createService(connectInfo, io);\n                break;\n            case IOType.IO_TYPE_PIEZO_TONE_PLAYER:\n                result = PiezoTonePlayer.createService(connectInfo, io);\n                break;\n            case IOType.IO_TYPE_MOTOR:\n                result = SimpleMotor.createService(connectInfo, io);\n                break;\n            case IOType.IO_TYPE_CURRENT:\n                result = CurrentSensor.createService(connectInfo, io);\n                break;\n            case IOType.IO_TYPE_VOLTAGE:\n                result = VoltageSensor.createService(connectInfo, io);\n                break;\n            case IOType.IO_TYPE_RGB_LIGHT:\n                result = RGBLight.createService(connectInfo, io);\n                break;\n            default:\n                result = GenericService.createService(connectInfo, io);\n                break;\n        }\n\n        result.setDevice(device);\n        servicesForDeviceMap.set(connectInfo.getConnectId(), result);\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Factory returning new LegoService: ' + result.getSimpleService());\n        }\n\n        return result;\n    }\n\n    /**\n     * Get the service instances for the device with the deviceId address.\n     *\n     * @param {string} deviceId - The mac address of the device.\n     * @return {Map<number,LegoService>} - Returns a map with connectId as key and the LegoService as value. The LegoService returned will be one of {@link CurrentSensor}, {@link GenericService}, {@link MotionSensor}, {@link PiezoTonePlayer}, {@link RGBLight}, {@link SimpleMotor}, {@link TiltSensor}, {@link VoltageSensor}\n     */\n    static getServiceInstances(deviceId) {\n        const servicesMap = LegoServiceFactory.deviceToServices.get(deviceId);\n        if (servicesMap && servicesMap !== null) {\n            return servicesMap;\n        }\n        LegoServiceFactory.deviceToServices.set(deviceId, new Map());\n        return LegoServiceFactory.deviceToServices.get(deviceId);\n    }\n\n    /**\n     * @ignore\n     * Add a service for the given deviceId\n     *\n     * @param {string} deviceId - The mac address of the device.\n     * @param {CurrentSensor|GenericService|MotionSensor|PiezoTonePlayer|RGBLight|SimpleMotor|TiltSensor|VoltageSensor} service\n     */\n    static addService(deviceId, service) {\n        const servicesMap = LegoServiceFactory.getServiceInstances(deviceId);\n        if (servicesMap.has(service.getConnectInfo().getConnectId())) {\n            const oldServiceInstance = servicesMap.get(service.getConnectInfo().getConnectId());\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('Replacing service for connectId' + service.getConnectInfo().getConnectId() + ' for device: ' + deviceId + '. Old service: ' + oldServiceInstance.toString() + ', New service: ' + service.toString());\n            }\n            if (service.callbackHelper.callbackListeners.size === 0 && oldServiceInstance.callbackHelper.callbackListeners.size > 0) {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('Transferring '+ oldServiceInstance.callbackHelper.callbackListeners.size +' callback listeners to new service instance for connectId ' + service.getConnectInfo().getConnectId() + ' for device: ' + deviceId);\n                }\n                oldServiceInstance.callbackHelper.callbackListeners.forEach((value, key, map) => {\n                    service.callbackHelper.callbackListeners.set(key, value);\n                });\n            }\n        }\n        servicesMap.set(service.getConnectInfo().getConnectId(), service);\n    }\n\n    /**\n     * Remove a service with connectId from the given device with the deviceId\n     *\n     * @param {string} deviceId - The mac address of the device.\n     * @param {number} connectId - The connectId of the service.\n     * @return {boolean} Returns true if a service was found and deleted, false otherwise.\n     */\n    static removeService(deviceId, connectId) {\n        const services = LegoServiceFactory.getServiceInstances(deviceId);\n        if (services.has(connectId)) {\n            const service = services.get(connectId);\n            if (service && service !== null && typeof(service.getIo) === 'function') {\n                const io = service.getIo();\n                if (io && io !== null && typeof(io.getCallbackHelper) === 'function') {\n                    io.getCallbackHelper().unregisterCallbackListener(null, service);\n                } else {\n                    if (io && io !== null && typeof(io.getCallbackHelper) !== 'function') {\n                        if (LDSDKLogger.isWarnEnabled()) {\n                            LDSDKLogger.warn('Invalid IO response for service ' + UuidHelper.getUuid(service) + ' found for connectId: ' + connectId + ', deviceId: ' + deviceId + ' - IO does not have a getCallbackHelper function');\n                        }\n                    }\n                }\n            } else {\n                if (!service || service === null) {\n                    if (LDSDKLogger.isInfoEnabled()) {\n                        LDSDKLogger.info('Service not found for connectId: ' + connectId + ' no callback will be unregistered');\n                    }\n                } else if (typeof(service.getIo) !== 'function') {\n                    if (LDSDKLogger.isWarnEnabled()) {\n                        LDSDKLogger.warn('Invalid service ' + UuidHelper.getUuid(service) + ' found for connectId: ' + connectId + ', deviceId: ' + deviceId + ' - Service does not have a getIo function');\n                    }\n                }\n            }\n        }\n        return services.delete(connectId);\n    }\n\n    /**\n     * Clears the cached services for the given deviceId. Should be called upon disconnecting from the hub.\n     * @param {string} deviceId\n     */\n    static clearServices(deviceId) {\n        LegoServiceFactory.getServiceInstances(deviceId).forEach((service, connectId) => {\n            LegoServiceFactory.removeService(deviceId, connectId);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/services/LegoServiceFactory.js","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_a-function.js\n// module id = 64\n// module chunks = 0","module.exports = function(it, Constructor, name, forbiddenField){\n  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_an-instance.js\n// module id = 65\n// module chunks = 0","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_dom-create.js\n// module id = 66\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_enum-bug-keys.js\n// module id = 67\n// module chunks = 0","'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getPrototypeOf = require('./_object-gpo')\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-define.js\n// module id = 68\n// module chunks = 0","var META     = require('./_uid')('meta')\n  , isObject = require('./_is-object')\n  , has      = require('./_has')\n  , setDesc  = require('./_object-dp').f\n  , id       = 0;\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\nvar FREEZE = !require('./_fails')(function(){\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function(it){\n  setDesc(it, META, {value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  }});\n};\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add metadata\n    if(!create)return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function(it, create){\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return true;\n    // not necessary to add metadata\n    if(!create)return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function(it){\n  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY:      META,\n  NEED:     false,\n  fastKey:  fastKey,\n  getWeak:  getWeak,\n  onFreeze: onFreeze\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_meta.js\n// module id = 69\n// module chunks = 0","var pIE            = require('./_object-pie')\n  , createDesc     = require('./_property-desc')\n  , toIObject      = require('./_to-iobject')\n  , toPrimitive    = require('./_to-primitive')\n  , has            = require('./_has')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , gOPD           = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P){\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if(IE8_DOM_DEFINE)try {\n    return gOPD(O, P);\n  } catch(e){ /* empty */ }\n  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gopd.js\n// module id = 70\n// module chunks = 0","exports.f = {}.propertyIsEnumerable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-pie.js\n// module id = 71\n// module chunks = 0","var hide = require('./_hide');\nmodule.exports = function(target, src, safe){\n  for(var key in src){\n    if(safe && target[key])target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_redefine-all.js\n// module id = 72\n// module chunks = 0","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_shared-key.js\n// module id = 73\n// module chunks = 0","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_shared.js\n// module id = 74\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-integer.js\n// module id = 75\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-length.js\n// module id = 76\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-object.js\n// module id = 77\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-primitive.js\n// module id = 78\n// module chunks = 0","var global         = require('./_global')\n  , core           = require('./_core')\n  , LIBRARY        = require('./_library')\n  , wksExt         = require('./_wks-ext')\n  , defineProperty = require('./_object-dp').f;\nmodule.exports = function(name){\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_wks-define.js\n// module id = 79\n// module chunks = 0","exports.f = require('./_wks');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_wks-ext.js\n// module id = 80\n// module chunks = 0","import LDSDKLogger from '../helpers/LDSDKLogger';\nimport BluetoothServiceDefinition from '../service_definitions/BluetoothServiceDefinition';\nimport DeviceInfoServiceDefinition from '../service_definitions/DeviceInfoServiceDefinition';\nimport {StateEnum} from '../device/LegoDeviceImpl';\nimport UuidHelper from '../helpers/UuidHelper';\n\n/**\n * @ignore For internal use\n * Callback implementation used internally for receiving connection state changes, service discovered, and\n * characteristic read events\n */\nexport default class BluetoothDeviceCallback {\n    /**\n     *\n     * @param {LegoBluetoothDeviceImpl} legoBluetoothDevice\n     * @param {BluetoothDeviceCallback} bluetoothGattCallback\n     */\n    constructor(legoBluetoothDevice, bluetoothGattCallback = null) {\n        /**\n         * @private\n         * @type {LegoBluetoothDeviceImpl}\n         */\n        this.legoBluetoothDevice = legoBluetoothDevice;\n        /**\n         * @private\n         * @type {BluetoothDeviceCallback}\n         */\n        this.bluetoothGattCallback = bluetoothGattCallback;\n    }\n\n\n    /**\n     * Updates the connectState for the legoBluetoothDevice to newState\n     * @param {string|null} error If set an error was received instead of a new state.\n     * @param {number} newState The new state for the legoBluetoothDevice - the valid states are defined in {@link StateEnum}\n     *\n     * @return {Promise} Resolves once the bluetoothGattCallback has been notified about the connection state change\n     * - @see {@link BluetoothDeviceCallback#onConnectionStateChange}. Rejects if an error occurs.\n     */\n    async onConnectionStateChange(error, newState) {\n        this.legoBluetoothDevice.updateConnectionStateUponConnectionStateChange(error, newState);\n        if (this.legoBluetoothDevice.connectState === StateEnum.DisconnectedAdvertising ||\n                this.legoBluetoothDevice.connectState === StateEnum.DisconnectedNotAdvertising) {\n            await this.legoBluetoothDevice.closeGatt();\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this.legoBluetoothDevice.userInitiatedDisconnect = false;\n        } else if (!error && this.legoBluetoothDevice.connectState === StateEnum.Interrogating) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info(`Interrogating services for device '${this.legoBluetoothDevice.getName()}'`);\n            }\n        }\n\n        if (this.bluetoothGattCallback !== null) {\n            await this.bluetoothGattCallback.onConnectionStateChange(error, newState);\n        } else {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('this.bluetoothGattCallback is null in ' + this.constructor.name + ' - not calling' +\n                                  ' onConnectionStateChange');\n            }\n        }\n\n    }\n\n    /**\n     * Receives services discovered event, notifies the bluetoothGattCallback (if set) and updates the\n     * LegoBluetoothDeviceImpl by calling its discoverCharacteristicsForService function.\n     *\n     * @param {string} error If error is set the service discovery failed\n     * @param {Array<NativeService>} services\n     *\n     * @return {Promise} Resolves once all the LegoBluetoothDevice#discoverCharacteristicsForService finishes.\n     */\n    async onServicesDiscovered(error, services) {\n        if (this.bluetoothGattCallback !== null) {\n            await this.bluetoothGattCallback.onServicesDiscovered(error, services);\n        }\n\n        if (!error) {\n            if (services.length === 0) {\n                LDSDKLogger.error('Did not find any services for device ' + this.legoBluetoothDevice.getName());\n            } else {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('Did discover services ('+ services.length +') for device: ' + this.legoBluetoothDevice.getName());\n                }\n            }\n\n            // Loop through the newly filled services array, just in case there's more than one.\n            for (let i = 0; i < services.length; i++) {\n                const service = services[i];\n                if (!service || service === null) {\n                    if (LDSDKLogger.isWarnEnabled()) {\n                        LDSDKLogger.warn('Service not initialized - continuing');\n                    }\n                    continue;\n                }\n                const serviceDefinition = BluetoothServiceDefinition.serviceDefinitionWithUUID(UuidHelper.getUuid(service));\n                if (serviceDefinition === null) {\n                    if (LDSDKLogger.isInfoEnabled()) {\n                        LDSDKLogger.info('Did discover service with unsupported UUID ' + UuidHelper.getUuid(service) + '. For' +\n                                         ' details about this service - see' +\n                                         ' https://developer.bluetooth.org/gatt/services/Pages/ServicesHome.aspx for list of service uuids that are part of the BLE spec. Note: Only a subset of' +\n                                         ' services in the BLE spec are supported by this SDK');\n                    }\n                }\n\n                // We start by only discovering the Bluetooth Device Info service. Once we are sure that we are talking\n                // to a Device with a supported firmware version, we discover characteristics for the remaining services\n                if (DeviceInfoServiceDefinition.getInstance().matchesService(service)) {\n                    const discoverCharacteristicsForServiceStart = new Date().getTime();\n                    await this.legoBluetoothDevice.discoverCharacteristicsForService(service);\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('discoverCharacteristicsForService completed. Discovery took ' + (discoverCharacteristicsForServiceStart - new Date().getTime()) + ' ms');\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Receives the characteristic read notification and calls the {@link LegoBluetoothDeviceImpl#handleReadOrUpdatedCharacteristic}\n     * and schedules an execute next operation.\n     *\n     * @param {NativeCharacteristic} characteristic\n     * @param {*} status\n     */\n    async onCharacteristicRead(characteristic, status) {\n        // this.legoBluetoothDevice.synchronousOperationsQueue.front();\n\n        if (this.bluetoothGattCallback !== null) {\n            await this.bluetoothGattCallback.onCharacteristicRead(characteristic, status);\n        } else {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('this.bluetoothGattCallback is null in ' + this.constructor.name + ' - not calling' +\n                                  ' onCharacteristicRead');\n            }\n        }\n\n        await this.legoBluetoothDevice.handleReadOrUpdatedCharacteristic(characteristic);\n        await this.legoBluetoothDevice.executeNextOperationQueue();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/bluetooth/BluetoothDeviceCallback.js","import LDSDKLogger from '../helpers/LDSDKLogger';\nimport ChromeOsBluetoothDeviceWrapper from './ChromeOsBluetoothDeviceWrapper';\nimport LegoDeviceManagerImpl from '../device/LegoDeviceManagerImpl';\nimport DeviceInfoServiceDefinition from '../service_definitions/DeviceInfoServiceDefinition';\nimport {StateEnum} from '../device/LegoDeviceImpl';\nimport StringUtils from '../helpers/StringUtils';\nimport UuidHelper from '../helpers/UuidHelper';\n\n/**\n * @ignore For internal use\n * This class wraps the chrome.bluetooth operations for scanning, getting a device details, getting known devices,\n * and registers listeners for the callbacks fired when devices are detected/removed or changed.\n */\nexport default class ChromeOsBluetoothAdapterWrapper {\n    /**\n     * @private\n     * @type {ChromeOsBluetoothAdapterWrapper}\n     */\n    static instance = null;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    listener = null;\n\n    /**\n     * @private\n     * @type {Map}\n     */\n    wrappers = new Map();\n\n    /**\n     * Get the adapter wrapper instance\n     * @return {ChromeOsBluetoothAdapterWrapper}\n     */\n    static getInstance() {\n        if (ChromeOsBluetoothAdapterWrapper.instance === null) {\n            ChromeOsBluetoothAdapterWrapper.instance = new ChromeOsBluetoothAdapterWrapper();\n            ChromeOsBluetoothAdapterWrapper.instance.registerOnDeviceListeners();\n            ChromeOsBluetoothAdapterWrapper.instance.registerOnServiceListener();\n        }\n        return ChromeOsBluetoothAdapterWrapper.instance;\n    }\n\n    /**\n     * Get the constructor name\n     * @return {string}\n     */\n    getName() {\n        return this.constructor.name;\n    }\n\n    /**\n     *\n     * Promise implementation of the chrome.bluetooth.startDiscovery.\n     *\n     * Before starting the discovery it fires the DeviceAddedForExistingDevices event for all the known LEGO devices\n     * (that is previously paired or seen).\n     *\n     * @return {Promise} Resolves when the discovery has been started. Rejects if startDiscovery fails.\n     */\n    startLeScan() {\n        return new Promise((resolve, reject) => {\n                this.isScanning().then((scanning) => {\n                    if (!scanning) {\n                        chrome.bluetooth.startDiscovery(() => {\n                            if (chrome.runtime.lastError) {\n                                if (chrome.runtime.lastError.message !== 'Already discovering') {\n                                    LDSDKLogger.error('Failed to start discovery: ' + chrome.runtime.lastError.message);\n                                    reject(chrome.runtime.lastError);\n                                }\n                            }\n                            if (LDSDKLogger.isTraceEnabled()) {\n                                LDSDKLogger.debug('Discovery started');\n                            }\n                            resolve();\n                        });\n                    } else {\n                        if (LDSDKLogger.isTraceEnabled()) {\n                            LDSDKLogger.debug('Discovery already running');\n                        }\n                        resolve();\n                    }\n                });\n            })\n            .catch(err => {\n                LDSDKLogger.error('startLeScan :: Failed starting discovery', err);\n                return Promise.reject(err);\n            });\n    }\n\n    /**\n     * Get device for the MAC address\n     * @param {string} address\n     * @return {Promise<NativeDevice>} The promise resolves a {@link Device}\n     */\n    getDevice(address) {\n        return new Promise((resolve, reject) => {\n            chrome.bluetooth.getDevice(address, (device) => {\n                if (chrome.runtime.lastError) {\n                    return reject(chrome.runtime.lastError);\n                }\n                return resolve(device);\n            });\n        });\n    }\n\n    /**\n     * Get a {@link ChromeOsBluetoothDeviceWrapper} for the native device. If a cached instance is found, it will be updated with the data\n     * in the nativeDevice - if no cached instance is found a new instance is added to the cache.\n     * @param {NativeDevice} nativeDevice\n     * @return {ChromeOsBluetoothDeviceWrapper}\n     */\n    getWrappedDevice(nativeDevice) {\n        let wrappedDevice;\n        if (this.wrappers.has(nativeDevice.address)) {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.trace('Cached ChromeOsBluetoothDeviceWrapper found for ' + nativeDevice.address);\n            }\n            wrappedDevice = this.wrappers.get(nativeDevice.address);\n            wrappedDevice.updateNativeDevice(nativeDevice);\n        } else {\n            wrappedDevice = new ChromeOsBluetoothDeviceWrapper(nativeDevice);\n            if (wrappedDevice.isLegoDevice()) {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('Created and cached ChromeOsBluetoothDeviceWrapper for ' + nativeDevice.address);\n                }\n                this.wrappers.set(wrappedDevice.getAddress(), wrappedDevice);\n            }\n        }\n        return wrappedDevice;\n    }\n\n    /**\n     * Add listeners to receive newly found devices and updates to the previously known devices.\n     */\n    registerOnDeviceListeners() {\n        if (!this.listenerRegistered || this.listenerRegistered === null) {\n            chrome.bluetooth.onDeviceAdded.addListener( async (device) => {\n                const wrappedDevice = this.getWrappedDevice(device);\n                if (!wrappedDevice.isLegoDevice()) {\n                    if (LDSDKLogger.isTraceEnabled()) {\n                        LDSDKLogger.debug('onDeviceAdded !isLegoDevice - Device \"' + device.name + '\" added', device);\n                    }\n                    return;\n                }\n\n                if (this.listener !== null) {\n                    if (LDSDKLogger.isTraceEnabled()) {\n                        LDSDKLogger.debug('onDeviceAdded - Invoking listener onDeviceAdded - Device \"' + device.name + '\" added', device);\n                    }\n                    await this.listener.onDeviceAdded(wrappedDevice);\n                } else {\n                    if (LDSDKLogger.isTraceEnabled()) {\n                        LDSDKLogger.debug('onDeviceAdded - Listener NOT set', device);\n                    }\n                }\n            });\n            chrome.bluetooth.onDeviceChanged.addListener( async (device) => {\n                const wrappedDevice = this.getWrappedDevice(device);\n                if (!wrappedDevice.isLegoDevice()) {\n                    if (LDSDKLogger.isTraceEnabled()) {\n                        LDSDKLogger.debug('onDeviceChanged !isLegoDevice - Device \"' + device.name + '\" changed', device);\n                    }\n                    return;\n                }\n\n                if (this.listener !== null) {\n                    if (LDSDKLogger.isTraceEnabled()) {\n                        LDSDKLogger.debug('onDeviceChanged - Invoking listener onDeviceChanged - Device \"' + device.name + '\" changed', device);\n                    }\n                    await this.listener.onDeviceChanged(wrappedDevice);\n                } else {\n                    if (LDSDKLogger.isTraceEnabled()) {\n                        LDSDKLogger.debug('onDeviceChanged - Listener NOT set', device);\n                    }\n                }\n            });\n            chrome.bluetooth.onDeviceRemoved.addListener( async (device) => {\n                const wrappedDevice = this.getWrappedDevice(device);\n                if (!wrappedDevice.isLegoDevice()) {\n                    if (LDSDKLogger.isTraceEnabled()) {\n                        LDSDKLogger.debug('onDeviceRemoved !isLegoDevice - Device \"' + device.name + '\" removed', device);\n                    }\n                    return;\n                }\n\n                if (this.listener !== null) {\n                    if (LDSDKLogger.isTraceEnabled()) {\n                        LDSDKLogger.debug('onDeviceRemoved - Invoking listener onDeviceRemoved - Device \"' + device.name + '\" removed', device);\n                    }\n                    await this.listener.onDeviceRemoved(wrappedDevice);\n                } else {\n                    if (LDSDKLogger.isTraceEnabled()) {\n                        LDSDKLogger.debug('onDeviceRemoved - Listener NOT set', device);\n                    }\n                }\n            });\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this.listenerRegistered = true;\n        }\n    }\n\n    /**\n     * Register for onService* callbacks when connecting to a device\n     */\n    registerOnServiceListener() {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Registering onServiceAdded listener on adapter');\n        }\n        if (typeof this.onServiceListenerRegistered === 'undefined' || this.onServiceListenerRegistered === null) {\n\n            chrome.bluetoothLowEnergy.onServiceAdded.addListener((service) => {\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug('chrome.bluetoothLowEnergy.onServiceAdded called with service ' + StringUtils.getInstanceString(service));\n                }\n                const bluetoothDevice = LegoDeviceManagerImpl.getInstance().getDevice(service.deviceAddress, false);\n                if (bluetoothDevice && bluetoothDevice !== null) {\n                    if (!bluetoothDevice.deviceNativeServices.has(UuidHelper.getUuid(service))) {\n                        bluetoothDevice.deviceNativeServices.set(UuidHelper.getUuid(service), service);\n                        if (bluetoothDevice.deviceNativeServices.size >= 5) {\n                            if (LDSDKLogger.isDebugEnabled()) {\n                                LDSDKLogger.debug('handleService onServiceAdded completed successfully - constructing services array for firing onServicesDiscovered. Service uuid: ' + UuidHelper.getUuid(service) + ', device address: ' + service.deviceAddress);\n                            }\n                            const services = [];\n                            bluetoothDevice.deviceNativeServices.forEach((value, key, map) => {\n                                services.push(value);\n                            });\n                            bluetoothDevice.getBluetoothWrapper().getConnectCallback().onServicesDiscovered(null, services);\n                        }\n                    }\n                } else {\n                    if (LDSDKLogger.isWarnEnabled()) {\n                        LDSDKLogger.warn('No bluetooth device found for service ', JSON.stringify(service));\n                    }\n                }\n            });\n\n            chrome.bluetoothLowEnergy.onServiceChanged.addListener((service) => {\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug('chrome.bluetoothLowEnergy.onServiceChanged called with service', service);\n                }\n            });\n\n            chrome.bluetoothLowEnergy.onServiceRemoved.addListener((service) => {\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug('chrome.bluetoothLowEnergy.onServiceRemoved called with service', service);\n                }\n                const bluetoothDevice = LegoDeviceManagerImpl.getInstance().getDevice(service.deviceAddress, false);\n                if (!bluetoothDevice || bluetoothDevice === null) return;\n\n                if (bluetoothDevice.deviceNativeServices.has(service.uuid)) {\n                    bluetoothDevice.deviceNativeServices.delete(service.uuid);\n                }\n\n            });\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this.onServiceListenerRegistered = true;\n        }\n    }\n\n    /**\n     * Register for characteristic value changes\n     */\n    registerOnCharacteristicValueChangedListener() {\n        if (!this.onCharacteristicValueChangedListenerRegistered || this.onCharacteristicValueChangedListenerRegistered === null) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('Registering onCharacteristicValueChanged listener on adapter');\n            }\n            /*\n            This code will only be called if startCharacteristicNotifications has been enabled for a\n             characteristicId (device specific id)\n             */\n            chrome.bluetoothLowEnergy.onCharacteristicValueChanged.addListener((characteristic) => {\n                if (chrome.runtime.lastError) {\n                    if (LDSDKLogger.isErrorEnabled()) {\n                        LDSDKLogger.error('Failed onCharacteristicValueChanged for ' + StringUtils.getCharacteristicString(characteristic) +'. chrome.runtime.lastError.message: ' + chrome.runtime.lastError.message);\n                    }\n                    return;\n                }\n\n                const cachedDevice = LegoDeviceManagerImpl.getInstance().getDevice(characteristic.service.deviceAddress, false);\n                if (cachedDevice && cachedDevice !== null ) {\n                    if (LDSDKLogger.isTraceEnabled()) {\n                        LDSDKLogger.debug('Got result for onCharacteristicValueChanged for address: ' + characteristic.service.deviceAddress + ', Characteristic: ' + StringUtils.getCharacteristicString(characteristic));\n                    }\n                    cachedDevice.handleReadOrUpdatedCharacteristic(characteristic);\n                } else {\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('The characteristic event received is meant for device address: ' + characteristic.service.deviceAddress + ', but no connected device was found for that address. Characteristic: ', characteristic, ' - Ignoring event');\n                    }\n                    return;\n                }\n\n            });\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this.onCharacteristicValueChangedListenerRegistered = true;\n        } else {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('onCharacteristicValueChangedListenerRegistered is already set - returning');\n            }\n        }\n    }\n\n    /**\n     * Checks if the adapter is discovering and calls chrome.bluetooth.stopDiscovery if it is.\n     * @return {Promise} The promise resolves once scanning stops, and rejects if chrome.runtime.lastError is set.\n     */\n    stopLeScan() {\n        return new Promise((resolve, reject) => {\n            this.isScanning()\n                .then((scanning) => {\n                    if (scanning) {\n                        chrome.bluetooth.stopDiscovery(function () {\n                            if (chrome.runtime.lastError) {\n                                if (chrome.runtime.lastError.message !== 'Failed to stop discovery') {\n                                    LDSDKLogger.error('Failed stopping discovery: \\'' + chrome.runtime.lastError.message + '\\'');\n                                    return reject(chrome.runtime.lastError);\n                                }\n                            }\n                            if (LDSDKLogger.isTraceEnabled()) {\n                                LDSDKLogger.debug('Discovery stopped');\n                            }\n                            return resolve();\n                        });\n                    } else {\n                        if (LDSDKLogger.isTraceEnabled()) {\n                            LDSDKLogger.debug('Discovery already stopped');\n                        }\n                        return resolve();\n                    }\n                })\n                .catch(err => {\n                    LDSDKLogger.error('Failed stopping discovery (catch): ', err);\n                    return reject(err);\n                });\n        });\n    }\n\n\n    /**\n     *\n     * @return {Promise.<bool>} resolves a boolean true if bluetooth is available and turned on, resolves a\n     * boolean false if bluetooth is not available, or the adapter is turned off. In case of errors, it rejects the\n     * promise with an error message.\n     */\n    isBluetoothAvailable() {\n         return new Promise((resolve, reject) => {\n            chrome.bluetooth.getAdapterState((adapter) => {\n                if (chrome.runtime.lastError) {\n                    LDSDKLogger.error('Failed getting adapter state', chrome.runtime.lastError);\n                    return reject(chrome.runtime.lastError);\n                }\n                return resolve(adapter.available);\n            });\n        })\n        .catch(err => {\n            LDSDKLogger.error('Failed getting adapter state', err);\n            return reject(err);\n        });\n\n    }\n\n    /**\n     * If Bluetooth is enabled this function returns whether the adapter is scanning for devices or not. If\n     * Bluetooth is not enabled it will return false;\n     *\n     * @return {Promise.<bool>} - Result is a boolean returned as a promise\n     */\n    isScanning() {\n        return new Promise((resolve, reject) => {\n            return this.isBluetoothEnabledOnDevice()\n                    .then((enabled) => {\n                        if (enabled) {\n                            chrome.bluetooth.getAdapterState((adapter) => {\n                                if (chrome.runtime.lastError) {\n                                    LDSDKLogger.error('Failed getting adapter state', chrome.runtime.lastError);\n                                    return reject(chrome.runtime.lastError);\n                                }\n                                return resolve(adapter.discovering);\n                            });\n                        } else {\n                            return resolve(false);\n                        }\n                    })\n                    .catch(err => {\n                        LDSDKLogger.error('Failed getting adapter state', err);\n                        return reject(err);\n                    });\n        });\n\n    }\n\n    /**\n     * Checks if Bluetooth is enabled\n     *\n     * @return {Promise.<bool>} Resolves to true if enabled, false if it is not enabled. Rejects if any errors\n     * occur.\n     */\n    isBluetoothEnabledOnDevice() {\n        return new Promise((resolve, reject) => {\n            chrome.bluetooth.getAdapterState((adapter) => {\n                if (chrome.runtime.lastError) {\n                    LDSDKLogger.error('Failed getting adapter state: ', chrome.runtime.lastError);\n                    return reject(chrome.runtime.lastError);\n                }\n                return resolve(adapter.powered && adapter.available);\n            });\n        })\n        .catch(err => {\n            LDSDKLogger.error('Failed getting adapter state', err);\n            return Promise.reject(err);\n        });\n    }\n\n    /**\n     * Connects the listener that should receive deviceAdded, deviceChanged, and deviceRemoved callbacks.\n     *\n     * @param {DeviceCallbackListener} listener\n     */\n    connectCallbackListener(listener) {\n        /**\n         * @private\n         * @type {object}\n         */\n        this.listener = listener;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/bluetooth/ChromeOsBluetoothAdapterWrapper.js","/**\n * Created by frj on 22/02/16.\n */\nimport LegoDeviceManagerImpl from '../device/LegoDeviceManagerImpl';\nimport BluetoothServiceDefinition from '../service_definitions/BluetoothServiceDefinition';\nimport SimpleList from '../helpers/SimpleList';\nimport LDSDKLogger from '../helpers/LDSDKLogger';\nimport { StateEnum } from '../device/LegoDeviceImpl';\nimport LDSDKError, { ErrorCode } from '../helpers/LDSDKError';\nimport LegoBluetoothDeviceImpl from './LegoBluetoothDeviceImpl';\nimport UuidHelper from '../helpers/UuidHelper';\nimport BluetoothDeviceCallback  from './BluetoothDeviceCallback';\nimport IdHelper from '../helpers/IdHelper';\nimport StringUtils from '../helpers/StringUtils';\n\n/**\n * This class can be used to offload the main thread and execute the callbacks on a different thread (currently\n * however all the callbacks are simply postponed slightly using setTimeout(callback, timeInMillis).\n *\n * As a user of the SDK you are not supposed to use this class directly, instead you should use the\n * registerCallbackListener and unregisterCallbackListener methods of the {@link LegoBluetoothDeviceManagerImpl} class\n *\n * Created by frj on 18/02/16.\n */\nexport class BluetoothDeviceManagerCallbackHelper {\n\n    constructor() {\n        this.callbackListeners = new Map();\n\n        const requiredCallbackFunctions = [];\n        requiredCallbackFunctions.push('onDeviceDidAppear');\n        requiredCallbackFunctions.push('onDeviceDidDisappear');\n        requiredCallbackFunctions.push('onWillStartConnectingToDevice');\n        requiredCallbackFunctions.push('onDidStartInterrogatingDevice');\n        requiredCallbackFunctions.push('onDidFinishInterrogatingDevice');\n        requiredCallbackFunctions.push('onDidDisconnectFromDevice');\n        requiredCallbackFunctions.push('onDidFailToConnectToDevice');\n\n        this.requiredCallbackFunctions = requiredCallbackFunctions;\n\n    }\n\n    /**\n     * Registers a callback\n     * @param {object} callback\n     * @returns {string} A unique callback id that can be used to unregister the callback later.s\n     */\n    registerCallbackListener(callback) {\n        this.checkCallbackListener(callback);\n        const callbackIdKey = 'generatedCallbackId';\n        let callbackId;\n        if (callback.hasOwnProperty(callbackIdKey)) {\n            callbackId = callback[callbackIdKey];\n            if (!this.callbackListeners.has(callbackId)) {\n                this.callbackListeners.set(callbackId, callback);\n            }\n        } else {\n            callbackId = IdHelper.generateID();\n            while(this.callbackListeners.has(callbackId)) {\n                // in case the map already has a key === callbackId we generate a new one\n                callbackId = IdHelper.generateID();\n            }\n            callback.generatedCallbackId = callbackId;\n            this.callbackListeners.set(callbackId, callback);\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' - Registered callback listener with id '+ callbackId +' - new' +\n                                  ' callbacklisteners size: ' + this.callbackListeners.size + ' listeners');\n            }\n        }\n\n        return callbackId;\n    }\n\n    /**\n     *  Unregisters a callback\n     *\n     * @param {string} callbackId - A unique callback id that was returned when registering the listener.\n     * @returns {boolean} - Returns true if a callback existed with that id, or false if no callback was found with\n     * that id.\n     */\n    unregisterCallbackListener(callbackId) {\n        const result = this.callbackListeners.delete(callbackId);\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug(this.constructor.name + ' - Unregistered callback listener - new' +\n            ' callbacklisteners size: ' +\n                              this.callbackListeners.size + ' listeners');\n        }\n        return result;\n    }\n\n    /**\n     * @ignore\n     *\n     * @param {LegoBluetoothDeviceImpl} legoBluetoothDevice\n     * @return {Promise}\n     */\n    performDeviceDidAppearCallback(legoBluetoothDevice) {\n        return new Promise((resolve) => {\n            LegoDeviceManagerImpl.getInstance().onDeviceDidAppear(legoBluetoothDevice);\n            return resolve();\n        });\n    }\n\n    /**\n     * @ignore\n     *\n     * @param {LegoBluetoothDeviceImpl} legoBluetoothDevice\n     * @return {Promise}\n     */\n    performDeviceDidChangeCallback(legoBluetoothDevice) {\n        return new Promise((resolve) => {\n            const nativeDevice = legoBluetoothDevice.getBluetoothWrapper().getDevice();\n            if (nativeDevice.hasOwnProperty('inquiryRssi') && nativeDevice.inquiryRssi !== -1) {\n                LegoDeviceManagerImpl.getInstance().onDeviceDidAppear(legoBluetoothDevice);\n            }\n            return resolve();\n        });\n    }\n\n    /**\n     * @ignore\n     *\n     * @param {LegoBluetoothDeviceImpl} legoBluetoothDevice\n     * @return {Promise}\n     */\n    performDeviceDidDisappearCallback(legoBluetoothDevice) {\n        return new Promise((resolve) => {\n            LegoDeviceManagerImpl.getInstance().onDeviceDidDisappear(legoBluetoothDevice);\n            return resolve();\n        });\n\n    }\n\n\n    /**\n     * @ignore\n     *\n     * @param {LegoBluetoothDeviceImpl} legoBluetoothDevice\n     * @return {Promise}\n     */\n    performWillStartConnectingToDeviceCallback(legoBluetoothDevice) {\n        return new Promise((resolve) => {\n            LegoDeviceManagerImpl.getInstance().onWillStartConnectingToDevice(legoBluetoothDevice);\n            return resolve();\n        });\n\n    }\n\n    /**\n     * @ignore\n     *\n     * @param {LegoBluetoothDeviceImpl} legoBluetoothDevice\n     * @return {Promise}\n     */\n    performDidStartInterrogatingDeviceCallback(legoBluetoothDevice) {\n        return new Promise((resolve) => {\n            LegoDeviceManagerImpl.getInstance().onDidStartInterrogatingDevice(legoBluetoothDevice);\n            return resolve();\n        });\n\n    }\n\n    /**\n     * @ignore\n     *\n     * @param {LegoBluetoothDeviceImpl} legoBluetoothDevice\n     * @return {Promise}\n     */\n    performDidFinishInterrogatingDeviceCallback(legoBluetoothDevice) {\n        return new Promise((resolve) => {\n            LegoDeviceManagerImpl.getInstance().onDidFinishInterrogatingDevice(legoBluetoothDevice);\n            return resolve();\n        });\n\n    }\n\n    /**\n     *\n     * @param {LegoBluetoothDeviceImpl} legoBluetoothDevice\n     * @param {boolean} autoReconnect\n     * @param {string|null} error\n     * @return {Promise}\n     */\n    performDidDisconnectFromDeviceCallback(legoBluetoothDevice, autoReconnect, error) {\n        return new Promise((resolve) => {\n            LegoDeviceManagerImpl.getInstance().onDidDisconnectFromDevice(legoBluetoothDevice, autoReconnect, error);\n            return resolve();\n        });\n    }\n\n    performDidFailToConnectToDeviceCallback(legoBluetoothDevice, autoReconnect, error) {\n        return new Promise((resolve) => {\n            LegoDeviceManagerImpl.getInstance().onDidFailToConnectToDevice(legoBluetoothDevice, autoReconnect, error);\n            return resolve();\n        });\n    }\n\n    checkCallbackListener(callbackListener) {\n        if (callbackListener === null || callbackListener === undefined) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn(`Attempt to add undefined callback listener to ${this.constructor.name} ignored`);\n            }\n            return;\n        }\n\n        for (let i = 0; i < this.requiredCallbackFunctions.length; i++) {\n            const requiredFuncName = this.requiredCallbackFunctions[i];\n            const requiredFunc = callbackListener[requiredFuncName];\n            if (typeof requiredFunc !== 'function') {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info(`The added callbacklistener of type ${callbackListener.constructor.name} does not have an implementation of the required callback method ${requiredFuncName}`);\n                }\n            }\n        }\n\n    }\n\n\n}\n\nexport class BaseBluetoothGattCallback extends BluetoothDeviceCallback {\n    static MAX_RETRIES = 20;\n    retries = 0;\n    connected = false;\n\n    /**\n     *\n     * @param {LegoBluetoothDeviceImpl} legoBluetoothDevice\n     * @param {LegoBluetoothDeviceManagerImpl} deviceManagerImpl\n     */\n    constructor(legoBluetoothDevice, deviceManagerImpl) {\n        super(legoBluetoothDevice);\n        this.deviceManagerImpl = deviceManagerImpl;\n    }\n\n    /**\n     * Gets the services for the device asynchronously and calls back on the callback param once they have been\n     * acquired.\n     *\n     * @param {function(services: Array<NativeService>)} callback\n     * @param {function(error: LDSDKError)} errorCallback\n     */\n    async lookupServicesWhenConnected(callback, errorCallback) {\n        const address = this.legoBluetoothDevice.getAddress();\n        const nativeDevice = await LegoDeviceManagerImpl.getInstance().getBluetoothAdapter().getDevice(address);\n        const cachedNativeDevice = await this.deviceManagerImpl.getLegoBluetoothDeviceWithAddress(address);\n\n        if (nativeDevice.connected && !nativeDevice.connecting) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info(`Device ${nativeDevice.name} is connected (cached device isConnected: ${cachedNativeDevice !== null ?\n                        cachedNativeDevice.getBluetoothWrapper().isConnected() : 'null'}). Looking up services for ${this.legoBluetoothDevice.getBluetoothDevice().name}`);\n            }\n\n            const services = await this.legoBluetoothDevice.getBluetoothWrapper().discoverServices();\n            if (services.length > 0) {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info(`Looked up services for ${this.legoBluetoothDevice.getBluetoothDevice().name} - found ${services.length}`);\n                }\n                callback(services);\n                return;\n            } else {\n                if (this.retries >= LegoDeviceManagerImpl.getInstance().config.lookupServicesWhenConnectedRetryMaxCount) {\n                    if (LDSDKLogger.isErrorEnabled()) {\n                        LDSDKLogger.error('No services found for ' + nativeDevice.name + ' in retry #' + this.retries + '/' + LegoDeviceManagerImpl.getInstance().config.lookupServicesWhenConnectedRetryMaxCount);\n                    }\n                    const error = LDSDKError.deviceError(ErrorCode.BLUETOOTH_CONNECTION_TIMEOUT, `Unable to get services list from hub: ${nativeDevice.name} [${address}] in ${this.retries} attempts`);\n                    errorCallback(error);\n                    return;\n                }\n            }\n        }\n        if (this.retries < LegoDeviceManagerImpl.getInstance().config.lookupServicesWhenConnectedRetryMaxCount) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                let msg = `Device \"${address} [${nativeDevice.name}]\"`;\n                if (nativeDevice.connected && !nativeDevice.connecting) {\n                    msg += ` is in connected state - but returning empty list of services. Retry service discovery #${this.retries} scheduled in ${LegoDeviceManagerImpl.getInstance().config.lookupServicesWhenConnectedRetryDelay} ms`;\n                } else {\n                    msg += ` is not yet in connected condition [paired: ${nativeDevice.paired}, connectable: ${nativeDevice.connectable}, connected: ${nativeDevice.connected}, connecting: ${nativeDevice.connecting}, nativeDevice.isConnected: ${cachedNativeDevice !== null ? cachedNativeDevice.getBluetoothWrapper().isConnected() : 'null'}]. Retry service discovery #${this.retries}`;\n                }\n                LDSDKLogger.info(msg);\n            }\n\n            if (cachedNativeDevice && cachedNativeDevice !== null &&\n                    cachedNativeDevice.getBluetoothWrapper() && cachedNativeDevice.getBluetoothWrapper() !== null &&\n                    cachedNativeDevice.getBluetoothWrapper().isConnected() === true) {\n                this.retries++;\n                setTimeout(async () => {\n                    await this.lookupServicesWhenConnected(callback, errorCallback);\n                }, LegoDeviceManagerImpl.getInstance().config.lookupServicesWhenConnectedRetryDelay);\n            } else {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.isDebugEnabled('Device ' + this.legoBluetoothDevice.getName() + ' [' + this.legoBluetoothDevice.getAddress() + '] is no longer connected - aborting lookupServicesWhenConnected retries');\n                }\n            }\n        }\n    }\n\n    async onConnectionStateChange(error, newState) {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info(this.constructor.name + '.onConnectionStateChange(' + error + ', ' + newState + ')');\n        }\n        await super.onConnectionStateChange(error, newState);\n\n        if (error) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('onConnectionStateChange, not success');\n            }\n            this.bailOut('Unable to connect. Failed with status: ' + error.message, error);\n            return;\n        }\n\n        if (newState === StateEnum.Interrogating) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + '.onConnectionStateChange - in if (newState' +\n                                  ' === Interrogating) section.' +\n                                  ' State value: ' + newState + ' - calling deviceDidConnect');\n            }\n\n            this.connected = true;\n            await this.deviceManagerImpl.deviceDidConnect(this.legoBluetoothDevice); // fires Interrogating callback\n\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(`onConnectionStateChange - DeviceDidConnect - waiting for onServiceAdded to be called for ${this.legoBluetoothDevice.getName()} [${this.legoBluetoothDevice.getAddress()}]`);\n            }\n\n            const config = LegoDeviceManagerImpl.getInstance().config;\n            // At this point we must wait for onServiceAdded to be called 5 times - there is no onServicesAdded :)\n            // Once all the services have been discovered we need to invoke await this.onServicesDiscovered(null, services);\n            const startTs = (new Date()).getTime();\n            const awaitOnServiceAdded = async () => {\n\n                setTimeout(async () => {\n                    if (this.legoBluetoothDevice.deviceNativeServices.size < config.serviceCountComplete) {\n                        if (((new Date()).getTime() - startTs) < config.waitForAddServicesBeforePollingMillis) {\n                            if (LDSDKLogger.isDebugEnabled()) {\n                                LDSDKLogger.debug('Waiting ' + config.lookupServicesWhenConnectedRetryDelay + 'ms before checking if deviceNativeServices >= ' + config.serviceCountComplete + ' again');\n                            }\n                            await awaitOnServiceAdded();\n                        } else {\n                            if (LDSDKLogger.isWarnEnabled()) {\n                                LDSDKLogger.warn('Did not get ' + config.serviceCountComplete + ' services from onServiceAdded callbacks before '+ config.waitForAddServicesBeforePollingMillis +'ms timeout (deviceServices: ' + this.legoBluetoothDevice.deviceNativeServices.size + ')');\n                            }\n                        }\n                    } else {\n                        if (LDSDKLogger.isInfoEnabled()) {\n                            LDSDKLogger.info(`onConnectionStateChange - DeviceDidConnect - got ${this.legoBluetoothDevice.deviceNativeServices.size} services for ${this.legoBluetoothDevice.getName()} [${this.legoBluetoothDevice.getAddress()}]`);\n                        }\n                    }\n                }, config.lookupServicesWhenConnectedRetryDelay);\n            };\n\n            try {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('Waiting up to ' + config.waitForAddServicesBeforePollingMillis + 'ms for onServiceAdded to be called ' + config.serviceCountComplete + ' times');\n                }\n                await awaitOnServiceAdded();\n            } catch (err) {\n                if (LDSDKLogger.isErrorEnabled()) {\n                    LDSDKLogger.error(err);\n                }\n            };\n\n            if (this.legoBluetoothDevice.deviceNativeServices.size < config.serviceCountComplete) {\n                try {\n                    if (LDSDKLogger.isInfoEnabled()) {\n                        LDSDKLogger.info('DeviceNativeServices is still empty, onServiceAdded not called within ' + config.waitForAddServicesBeforePollingMillis + 'ms of the connection. Polling getServices up to ' + config.lookupServicesWhenConnectedRetryMaxCount() + ' times ');\n                    }\n                    await this.pollGetServices();\n                } catch (err) {\n                    if (LDSDKLogger.isErrorEnabled()) {\n                        LDSDKLogger.error(err);\n                    }\n                }\n            }\n\n        } else if (newState !== StateEnum.InterrogationFinished) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('newState !== StateEnum.InterrogationFinished', newState, StateEnum.InterrogationFinished );\n            }\n            if (newState === StateEnum.Connecting || newState === StateEnum.DisconnectedAdvertising) {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('onConnectionStateChange, ignoring transient state, newState is ' + newState, ' Looking up services');\n                }\n            } else {\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('onConnectionStateChange, not connected, newState is ' + newState);\n                }\n                this.bailOut('Disconnected from device', error);\n            }\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('onConnectionStateChange, returning :: NewState is ' + newState);\n            }\n        }\n    }\n\n    pollGetServicesRetry = 1;\n    pollGetServices() {\n        if (this.hasOwnProperty('retries'))\n        return new Promise((resolve, reject) => {\n            const config = LegoDeviceManagerImpl.getInstance().config;\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('pollGetServices called for ' + StringUtils.getDeviceString(this.legoBluetoothDevice));\n                }\n                this.legoBluetoothDevice.getBluetoothWrapper().discoverServices()\n                        .then((services) => {\n                            if (LDSDKLogger.isInfoEnabled()) {\n                                LDSDKLogger.info('pollGetServices got ' + services.length + ' services');\n                            }\n                            for (let idx = 0; idx < services.length; idx++) {\n                                const service = services[idx];\n                                if (!this.legoBluetoothDevice.deviceNativeServices.has(UuidHelper.getUuid(service))) {\n                                    this.legoBluetoothDevice.deviceNativeServices.set(UuidHelper.getUuid(service), service);\n                                }\n                            }\n                            return resolve(services);\n                        })\n                        .then((services) => {\n                            if (this.legoBluetoothDevice.deviceNativeServices.size < config.serviceCountComplete) {\n                                if (this.pollGetServicesRetry < config.lookupServicesWhenConnectedRetryMaxCount) {\n                                    if (LDSDKLogger.isDebugEnabled()) {\n                                        LDSDKLogger.debug('pollGetServices got 0 services and retry ' + this.pollGetServicesRetry + ' < ' + config.lookupServicesWhenConnectedRetryMaxCount + ' - scheduling retry');\n                                    }\n                                    this.pollGetServicesRetry++;\n                                    setTimeout(() => {\n                                        return this.pollGetServices();\n                                    }, config.lookupServicesWhenConnectedRetryDelay);\n\n                                } else {\n                                    if (LDSDKLogger.isErrorEnabled()) {\n                                        LDSDKLogger.error('pollGetServices got 0 services in ' + this.pollGetServicesRetry + ' retries - It is not possible to use this hub in the current state - aborting hub connection');\n                                    }\n                                    this.cancelDeviceConnection(this.legoBluetoothDevice.getAddress());\n\n                                    const error = LDSDKError.deviceError(ErrorCode.BLUETOOTH_CONNECTION_TIMEOUT, 'Connect request timed out');\n                                    this.callbackHelper.performDidFailToConnectToDeviceCallback(this.legoBluetoothDevice, false, error);\n                                    this.bailOut('Discovering services failed with error: ' + error.message, error);\n                                    return reject('Discovering services failed with error: ' + error.message);\n                                }\n                            } else {\n                                if (LDSDKLogger.isInfoEnabled()) {\n                                    LDSDKLogger.info('pollGetServices got ' + this.legoBluetoothDevice.deviceNativeServices.size + ' services');\n                                }\n                                const discoveredServices = [];\n                                this.legoBluetoothDevice.deviceNativeServices.forEach((value, key, map) => {\n                                    discoveredServices.push(value);\n                                });\n                                return this.onServicesDiscovered(null, discoveredServices);\n                            }\n\n                        })\n                        .catch(err => {\n                            // Failed discovery\n                            return resolve([]);\n                        });\n\n        });\n    }\n\n    /**\n     * @param {string} error If error is set the service discovery failed\n     * @param {Array<NativeService>} services\n     *\n     * @return {Promise} Resolves once all the LegoBluetoothDevice#discoverCharacteristicsForService finishes.\n     */\n    async onServicesDiscovered(error, services) {\n        await super.onServicesDiscovered(error, services);\n\n        if (error) {\n            this.bailOut('Fetching services failed: ', error);\n        } else {\n            if (LDSDKLogger.isDebugEnabled) {\n                LDSDKLogger.debug(this.constructor.name + ' - Services discovered, calling deviceInterrogationFinished' +\n                                  ' for device', this.legoBluetoothDevice.getName());\n            }\n            await this.deviceManagerImpl.deviceInterrogationFinished(this.legoBluetoothDevice);\n            if (LDSDKLogger.isDebugEnabled) {\n                LDSDKLogger.debug(this.constructor.name + ' - : Completed deviceInterrogationFinished' +\n                                  ' for device', this.legoBluetoothDevice.getName());\n            }\n\n        }\n    }\n\n    bailOut(message, error) {\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('bailOut(', message, ' - error: ', error);\n        }\n        if (this.connected) {\n            this.deviceManagerImpl.deviceDidDisconnect(this.legoBluetoothDevice, error);\n        } else {\n            this.deviceManagerImpl.deviceDidFailToConnect(this.legoBluetoothDevice, error);\n        }\n    }\n}\n\nclass DeviceConnectTimeoutCountDownTimer {\n\n    legoBluetoothDevice = null;\n    legoBluetoothDeviceManagerImplRef = null;\n    timerId = -1;\n\n    constructor(legoBluetoothDevice, legoBluetoothDeviceManagerImplRef, millisInFuture) {\n        this.legoBluetoothDevice = legoBluetoothDevice;\n        this.legoBluetoothDeviceManagerImplRef = legoBluetoothDeviceManagerImplRef;\n\n        this.timerId = setTimeout(() => {\n            this.onFinish();\n        }, millisInFuture);\n    }\n\n    cancel() {\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Invoking ' + this.constructor.name + '.cancel() - clearing connect timerId: ' + this.timerId + ' for ' + this.legoBluetoothDevice.getAddress());\n        }\n        clearTimeout(this.timerId);\n        this.timerId = -1;\n    }\n\n    onFinish() {\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Invoking ' + this.constructor.name + '.onFinish() - Connect timed out for ' + this.legoBluetoothDevice.getAddress() +' - timerId: ' + this.timerId);\n        }\n        if (this.legoBluetoothDevice === null) {\n            LDSDKLogger.error('Received a connection time out but could not find device to cancel connect request for');\n            return;\n        }\n        if (LDSDKLogger.isWarnEnabled()) {\n            LDSDKLogger.warn(`Connect request timed out for device: ${this.legoBluetoothDevice.getName()}`);\n        }\n        this.legoBluetoothDeviceManagerImplRef.removeConnectTimeoutTimerForDevice(this.legoBluetoothDevice);\n        this.legoBluetoothDeviceManagerImplRef.cancelDeviceConnection(this.legoBluetoothDevice.getAddress());\n\n        const error = LDSDKError.deviceError(ErrorCode.BLUETOOTH_CONNECTION_TIMEOUT, 'Connect request timed out');\n        this.legoBluetoothDeviceManagerImplRef.callbackHelper.performDidFailToConnectToDeviceCallback(this.legoBluetoothDevice, false, error);\n    }\n}\n\nexport class DeviceCallbackListener {\n    /**\n     *\n     * @param {LegoBluetoothDeviceManagerImpl} legoBluetoothDeviceManager\n     */\n    constructor(legoBluetoothDeviceManager) {\n        this.legoBluetoothDeviceManager = legoBluetoothDeviceManager;\n    }\n\n    /**\n     *\n     * @param {string} deviceAddress - The mac address of the device\n     */\n    async onDevice(deviceAddress) {\n        const nativeDevice = await this.legoBluetoothDeviceManager.bluetoothAdapter.getDevice(deviceAddress);\n        const wrappedDevice = this.legoBluetoothDeviceManager.bluetoothAdapter.getWrappedDevice(nativeDevice);\n\n        if (wrappedDevice.isLegoDevice()) {\n            const newDevice = !this.legoBluetoothDeviceManager.devices.has(deviceAddress);\n            const legoBluetoothDevice = LegoBluetoothDeviceImpl.deviceWithWrapper(wrappedDevice, wrappedDevice.getRssi(), LegoDeviceManagerImpl.getInstance());\n\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('onDevice (performDeviceDidAppearCallback): ', legoBluetoothDevice, 'newDevice', newDevice);\n            }\n            legoBluetoothDevice.setAdvertising(true);\n            await this.legoBluetoothDeviceManager.callbackHelper.performDeviceDidAppearCallback(legoBluetoothDevice);\n\n\n            if (legoBluetoothDevice.advertising === false) {\n            // if (newDevice) {\n                // await legoBluetoothDevice.updateAdvertising();\n                legoBluetoothDevice.setAdvertising(true);\n                if (LDSDKLogger.isInfoEnabled()) {\n                    LDSDKLogger.info('onDevice (new device) - Setting device in devices map. Key: ['+ legoBluetoothDevice.getDeviceId() +'] => ' + legoBluetoothDevice.toString());\n                }\n                await this.legoBluetoothDeviceManager.callbackHelper.performDeviceDidAppearCallback(legoBluetoothDevice);\n\n            } else {\n                // legoBluetoothDevice.updateWrapper(wrappedDevice);\n                // await legoBluetoothDevice.updateAdvertising();\n\n                if (wrappedDevice.getName() !== legoBluetoothDevice.getName()) {\n                    const oldName = legoBluetoothDevice.getName();\n                    const newName = wrappedDevice.getName();\n                    legoBluetoothDevice.deviceName = wrappedDevice.getName();\n                    this.legoBluetoothDeviceManager.setDevice(legoBluetoothDevice);\n\n                    await legoBluetoothDevice.callbackHelper.performDidChangeNameCallback(this, oldName, newName);\n                }\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug(`onDevice - State: ${legoBluetoothDevice.getConnectState()} - ${wrappedDevice.getName()} [${wrappedDevice.getAddress()}] - pairing: ${wrappedDevice.isPairing()}, paired: ${wrappedDevice.getPaired()}, connecting: ${wrappedDevice.getConnecting()}, connected: ${wrappedDevice.getConnected()}`);\n                }\n\n                switch (legoBluetoothDevice.getConnectState()) {\n                    case StateEnum.InterrogationFinished:\n                        if (!wrappedDevice.getConnected()) {\n                            if (LDSDKLogger.isDebugEnabled()) {\n                                LDSDKLogger.debug('State=InterrogationFinished but connected flag=false => disconnecting. NativeDevice (adapter): ', nativeDevice);\n                            }\n                            await this.legoBluetoothDeviceManager.deviceDidDisconnect(legoBluetoothDevice);\n                        }\n                        break;\n                    case StateEnum.Interrogating:\n                        if (!wrappedDevice.isPairing() && !wrappedDevice.getConnecting() && !wrappedDevice.getConnected()) {\n                            await this.legoBluetoothDeviceManager.deviceDidFailToConnect(legoBluetoothDevice);\n                        }\n                        break;\n                    case StateEnum.DisconnectedAdvertising:\n                            // onDeviceChanged events when discovering that has an rssi of -1 seem to be irrelevant\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('State=DisconnectedAdvertising - NativeDevice: ', wrappedDevice.toString());\n                        }\n                        if (!nativeDevice.connecting && !nativeDevice.connected && (!nativeDevice.hasOwnProperty('inquiryRssi') || nativeDevice.inquiryRssi === -1)) {\n                            // shouldUpdateLastSeenTime = false;\n                            // legoBluetoothDevice.updateConnectionStateUponConnectionStateChange(null,\n                            // StateEnum.DisconnectedNotAdvertising);\n                            // Removing the above lines fixes Advertising /NotAdvertising\n                        } else if (nativeDevice.pairing === false && nativeDevice.connecting === false && nativeDevice.connected === true) {\n                            // Paired and connected without WeDo setting it to connecting state - restarting connect\n                            LegoDeviceManagerImpl.getInstance().connectToDevice(deviceAddress);\n                        }\n                        break;\n                    case StateEnum.Connecting:\n                        if (!wrappedDevice.isPairing() /* && wrappedDevice.getPaired() */ && !wrappedDevice.getConnecting() && wrappedDevice.getConnected()) {\n                            if (LDSDKLogger.isInfoEnabled()) {\n                                LDSDKLogger.info('onDevice - State: Connecting - Already paired device. Changing' +\n                                                 ' state to Interrogating.', wrappedDevice.toString());\n                            }\n                            const connectCallback = wrappedDevice.getConnectCallback();\n                            if (connectCallback && connectCallback !== null) {\n                                connectCallback.onConnectionStateChange(null, StateEnum.Interrogating);\n                            }\n                        } else if (wrappedDevice.isPairing() && wrappedDevice.getPaired()) {\n                            if (LDSDKLogger.isDebugEnabled()) {\n                                LDSDKLogger.debug('onDevice isPairing=true', wrappedDevice.toString());\n                            }\n                            // await this.legoBluetoothDeviceManager.reconnectToDevice(legoBluetoothDevice);\n                        } else if (!wrappedDevice.isPairing() /* && wrappedDevice.getPaired() */ && !wrappedDevice.getConnected() && !wrappedDevice.getConnecting()) {\n                            if (LDSDKLogger.isDebugEnabled()) {\n                                LDSDKLogger.debug('In Connecting state - but neither pairing, connecting nor' +\n                                                  ' connected fields are true.' +\n                                                  ' Transient state while internal chromeos state changes BT connect state for the device', wrappedDevice.toString());\n                            }\n                            // await this.legoBluetoothDeviceManager.reconnectToDevice(legoBluetoothDevice);\n                        } else {\n                            if (LDSDKLogger.isDebugEnabled()) {\n                                LDSDKLogger.debug('In Connecting state - in else - dumping wrapped', wrappedDevice.toString());\n                            }\n                        }\n                        break;\n                    case StateEnum.DisconnectedNotAdvertising:\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('State=DisconnectedNotAdvertising - NativeDevice (adapter): ', nativeDevice);\n                        }\n                        if (!nativeDevice.connecting && !nativeDevice.connected && (nativeDevice.hasOwnProperty('inquiryRssi') && nativeDevice.inquiryRssi !== -1)) {\n                            // shouldUpdateLastSeenTime = false;\n                            legoBluetoothDevice.setAdvertising(true);\n                            legoBluetoothDevice.updateConnectionStateUponAdvertisingChange();\n                            // legoBluetoothDevice.updateConnectionStateUponConnectionStateChange(null, StateEnum.DisconnectedNotAdvertising);\n                        } else if (nativeDevice.paired === true && nativeDevice.connecting === false && nativeDevice.connected === true) {\n                            // Paired and connected without WeDo setting it to connecting state - restarting connect\n                            LegoDeviceManagerImpl.getInstance().connectToDevice(deviceAddress);\n                        }\n                        break;\n                    default:\n                        if (LDSDKLogger.isInfoEnabled()) {\n                            LDSDKLogger.info(`onDevice (existing device): ${wrappedDevice.getName()} [${wrappedDevice.getAddress()}] - ConnectState: ${legoBluetoothDevice.getConnectState()} - WrappedDevice: ` , wrappedDevice.getDevice());\n                        }\n                }\n                await legoBluetoothDevice.updateWithAdvertisementDataAndRSSI(wrappedDevice.getRssi());\n                await this.legoBluetoothDeviceManager.callbackHelper.performDeviceDidChangeCallback(legoBluetoothDevice);\n            }\n\n            this.legoBluetoothDeviceManager.deviceIdentifierToLastSeenTimeStamp.set(wrappedDevice.getAddress(), new Date().getTime());\n\n            if (LegoDeviceManagerImpl.getInstance().config.shouldUpdateOnTheOnDeviceEvents()) {\n                if (LegoDeviceManagerImpl.getInstance().getDevice(legoBluetoothDevice.getAddress()) !== null) {\n                    // Still a 'managed' device - do the performUpdateDeviceInfo call\n                if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('Calling legoBluetoothDevice.performUpdateDeviceInfo from onDevice - ' + wrappedDevice.getName() + ' ['+ wrappedDevice.getAddress() +'] - connectState: ' + legoBluetoothDevice.getConnectState());\n                }\n                await legoBluetoothDevice.performUpdateDeviceInfo();\n                } else {\n                    // Device has been removed from the managed devices list - inform the registered listeners that the\n                    // device has disappeared\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('Calling LegoDeviceManagerImpl.getInstance().onDeviceDidDisappear from onDevice - ' + wrappedDevice.getName() + ' ['+ wrappedDevice.getAddress() +'] - connectState: ' + legoBluetoothDevice.getConnectState());\n                    }\n                    await LegoDeviceManagerImpl.getInstance().onDeviceDidDisappear(legoBluetoothDevice);\n                }\n            }\n\n        } else {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.trace('Not a lego uuid. NativeDevice', nativeDevice, 'wrapperDevice', wrappedDevice);\n            }\n        }\n    }\n\n    /**\n     *\n     * @param {ChromeOsBluetoothDeviceWrapper} wrappedDevice\n     */\n    async onDeviceAdded(wrappedDevice) {\n        if (wrappedDevice.isLegoDevice()) {\n            if (!wrappedDevice.getDevice().inquiryRssi || wrappedDevice.getDevice().inquiryRssi === -1) {\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug(`FRJ Device ${wrappedDevice.getName()} (${wrappedDevice.getAddress()}) onDeviceAdded ignored since it does not have a proper inquiryRssi property`, wrappedDevice.getDevice());\n                }\n                return;\n            }\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(`FRJ onDeviceAdded - Device ${wrappedDevice.getName()} (${wrappedDevice.getAddress()}) added - RSSI: ${wrappedDevice.getDevice().inquiryRssi}`);\n            }\n            await this.onDevice(wrappedDevice.getAddress());\n        } else {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.debug(`FRJ onDeviceAdded for non-LEGO device '${wrappedDevice.getName()}'`);\n            }\n        }\n    }\n\n    /**\n     *\n     * @param {ChromeOsBluetoothDeviceWrapper} wrappedDevice\n     */\n    async onDeviceChanged(wrappedDevice) {\n        if (wrappedDevice.isLegoDevice()) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(`FRJ onDeviceChanged - Device ${wrappedDevice.getName()} (${wrappedDevice.getAddress()}) changed - RSSI: ${wrappedDevice.getDevice().inquiryRssi}`);\n            }\n            await this.onDevice(wrappedDevice.getAddress());\n        } else {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.debug(`FRJ onDeviceChanged for non-LEGO device '${wrappedDevice.getName()}'`);\n            }\n        }\n    }\n\n    /**\n     *\n     * @param {ChromeOsBluetoothDeviceWrapper} wrappedDevice\n     */\n    async onDeviceRemoved(wrappedDevice) {\n        if (wrappedDevice.isLegoDevice()) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(`FRJ onDeviceRemoved - Device ${wrappedDevice.getName()} (${wrappedDevice.getAddress()}) removed`);\n            }\n            const nativeDevice = await this.legoBluetoothDeviceManager.bluetoothAdapter.getDevice(wrappedDevice.getAddress());\n            const updatedWrappedDevice = await this.legoBluetoothDeviceManager.bluetoothAdapter.getWrappedDevice(nativeDevice);\n            const legoBluetoothDevice = LegoBluetoothDeviceImpl.deviceWithWrapper(updatedWrappedDevice, updatedWrappedDevice.getRssi(), LegoDeviceManagerImpl.getInstance());\n            LegoDeviceManagerImpl.getInstance().onDeviceDidDisappear(legoBluetoothDevice);\n        }\n    }\n\n}\n\nexport default class LegoBluetoothDeviceManagerImpl {\n\n    static REFRESH_DEVICE_LIST_DEFAULT_INTERVAL = 2000;  // [ms]\n    static REFRESH_DEVICE_LIST_MINIMUM_INTERVAL = 1000;   // [ms]\n    static START_STOP_SCANNING_INTERVAL = 600;   // [ms]\n\n    bluetoothAdapter = null;\n\n    _devices = new Map(); // list of LegoBluetoothDevice\n    deviceIdentifierToLastSeenTimeStamp = new Map();\n\n    deviceToConnectTimerDic = new Map();\n    deviceToReconnectCount = new Map();\n\n    primaryServiceUUIds = new SimpleList();\n\n    callbackHelper = new BluetoothDeviceManagerCallbackHelper();\n\n    stopScanningTimeoutHandle = null;\n    startScanningTimeoutHandle = null;\n\n    static rssiComparatorDescending(lhs, rhs) {\n        const lhsRSSI = lhs.getRSSIValue();\n        const rhsRSSI = rhs.getRSSIValue();\n\n        if (lhsRSSI === rhsRSSI) {\n            return 0;\n        } else if (lhsRSSI < rhsRSSI) {\n            return 1;\n        } else {\n            return -1;\n        }\n    };\n\n    /**\n     *\n     * @param {ChromeOsBluetoothAdapterWrapper} bluetoothAdapterWrapper\n     */\n    constructor(bluetoothAdapterWrapper) {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Constructing ', this.constructor.name, `for device \"${bluetoothAdapterWrapper.getName()}\"`);\n        }\n\n        // Add primary service UUIDs\n        this.primaryServiceUUIds.add(BluetoothServiceDefinition.ioServiceDefinition().getServiceUUID());\n        this.primaryServiceUUIds.add(BluetoothServiceDefinition.deviceServiceDefinition().getServiceUUID());\n        this.primaryServiceUUIds.add(BluetoothServiceDefinition.batteryServiceDefinition().getServiceUUID());\n        this.primaryServiceUUIds.add(BluetoothServiceDefinition.deviceInfoServiceDefinition().getServiceUUID());\n\n        this.bluetoothAdapter = bluetoothAdapterWrapper;\n\n        this.bluetoothAdapter.connectCallbackListener(new DeviceCallbackListener(this));\n\n    }\n\n    /**\n     * @ignore - Internal map, should not be accessed directly by client code\n     * This is a map of all known LegoBluetoothDeviceImpl instances - key in the map is the MAC address.\n     * @return {Map<string, LegoBluetoothDeviceImpl>}\n     */\n    get devices() {\n        return this._devices;\n    }\n\n    /**\n     * @ignore - Private\n     * Set the device in the internal map\n     * @param {LegoBluetoothDeviceImpl} device\n     */\n    setDevice(device) {\n        const appeared = !this.devices.has(device.getAddress());\n        this.devices.set(device.getAddress(), device);\n\n        if (appeared) {\n            this.callbackHelper.performDeviceDidAppearCallback(device);\n        }\n    }\n\n    /**\n     *\n     * @param {string} newDeviceAddress\n     * @return {LegoBluetoothDeviceImpl} - Returns null if not found\n     */\n    getLegoBluetoothDeviceWithAddress(newDeviceAddress) {\n        if (this.devices.has(newDeviceAddress)) {\n            const device = this.devices.get(newDeviceAddress);\n            if (device) {\n/*\n                if (LDSDKLogger.isTraceEnabled()) {\n                    LDSDKLogger.debug('Found cached device', device.getName());\n                }\n*/\n                return device;\n            }\n        }\n        return null;\n    }\n\n    cleanUpListOfDiscoveredDevices() {\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('cleanUpListOfDiscoveredDevices running');\n        }\n        const devicesToRemove = new SimpleList();\n        const updateAdvertisingDevicesIntervalMillis = LegoDeviceManagerImpl.getInstance().config.updateAdvertisingDevicesIntervalMillis;\n        this.devices.forEach((device, deviceId) => {\n            if (device !== null) {\n                if (this.deviceIdentifierToLastSeenTimeStamp.has(deviceId)) {\n                    const lastSeenDateInMillis = this.deviceIdentifierToLastSeenTimeStamp.get(deviceId);\n                    const lastAdvertisingPackageTooOld = (new Date().getTime() - lastSeenDateInMillis) > updateAdvertisingDevicesIntervalMillis;\n                    if (lastAdvertisingPackageTooOld) {\n                        device.setAdvertising(false);\n                    }\n                    if ((device.getConnectState() === StateEnum.DisconnectedNotAdvertising\n                            || device.getConnectState() === StateEnum.DisconnectedAdvertising)\n                            && lastAdvertisingPackageTooOld) {\n                        this.deviceIdentifierToLastSeenTimeStamp.delete(deviceId);\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('cleanUpListOfDiscoveredDevices Filtering out ' + device.getName() + ' ['+deviceId+']');\n                        }\n                        devicesToRemove.add(device);\n                    }\n                }\n            }\n        });\n\n        for (let i = 0; i < devicesToRemove.length(); i++) {\n            const device = devicesToRemove.get(i);\n            if (!device || device === null) {\n                continue;\n            } else {\n                this.devices.delete(device.getDeviceId());\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug(this.constructor.name+'.cleanUpListOfDiscoveredDevices :: Deleting device from' +\n                                  ' devices with key: ['+device.getDeviceId()+']. Devices size: ' + this.devices.size);\n                }\n                this.callbackHelper.performDeviceDidDisappearCallback(device);\n            }\n        }\n\n        // Schedule a new cleanup\n        if ( this.cleanUpListOfDiscoveredDevicesTimeoutId ) {\n            clearTimeout(this.cleanUpListOfDiscoveredDevicesTimeoutId );\n        }\n        this.cleanUpListOfDiscoveredDevicesTimeoutId = setTimeout(() => {\n            this.cleanUpListOfDiscoveredDevices();\n        }, LegoDeviceManagerImpl.getInstance().config.updateAdvertisingDevicesIntervalMillis);\n    }\n\n\n    async scan() {\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Do scan...');\n        }\n        // Ensure that Bluetooth is available on the device and it is enabled\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Scan start time: ', new Date().getTime());\n        }\n        const available = await this.isBluetoothAvailable();\n        if (!available) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('Scan isBluetoothAvailable time: ', new Date().getTime());\n            }\n            throw new Error('Bluetooth is not available on device');\n        }\n\n        const enabled = await this.isBluetoothEnabled();\n        if (!enabled) {\n            throw new Error('Bluetooth is not enabled');\n        }\n\n        if (LegoDeviceManagerImpl.getInstance().config.shouldStartStopRepeatedScanning()) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' - wait for startRepeatingScanning' );\n            }\n            await this.startRepeatingScanning();\n        } else {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' - wait for startScan' );\n            }\n            await this.startScan();\n        }\n\n        await this.startRepeatingCleanUpListOfDiscoveredDevices();\n    }\n\n    async stopScanning() {\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Stop scanning...');\n        }\n        this.stopRepeatingDeviceDisappearanceDiscovery();\n        if (LegoDeviceManagerImpl.getInstance().config.shouldStartStopRepeatedScanning()) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' - wait for stopRepeatingScanning' );\n            }\n            await this.stopRepeatingScanning();\n        } else {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.constructor.name + ' - wait for stopScan' );\n            }\n            await this.stopScan();\n        }\n    }\n\n    /**\n     *\n     * @param {LegoBluetoothDeviceImpl} legoBluetoothDevice\n     */\n    async connectToDevice(legoBluetoothDevice) {\n        const cachedDevice = this.getLegoBluetoothDeviceWithAddress(legoBluetoothDevice.getAddress());\n        if (cachedDevice !== null && legoBluetoothDevice.instanceId !== cachedDevice.instanceId) {\n            legoBluetoothDevice = cachedDevice;\n        }\n\n        this.callbackHelper.performWillStartConnectingToDeviceCallback(legoBluetoothDevice);\n        this.addConnectTimeoutTimerForDevice(legoBluetoothDevice, LegoDeviceManagerImpl.getInstance().config.connectRequestTimeoutInterval);\n\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Connecting to device: ', legoBluetoothDevice.getBluetoothDevice());\n        }\n        try {\n            await legoBluetoothDevice.connectGatt(true, new BaseBluetoothGattCallback(legoBluetoothDevice, this));\n        } catch (err) {\n            LDSDKLogger.error('connectToDevice - legoBluetoothDevice.connectGatt failed', err);\n            throw err;\n        }\n\n    }\n\n    async deviceDidDisconnect(legoBluetoothDevice, status = 0, userInitiated = false) {\n        const cachedDevice = this.getLegoBluetoothDeviceWithAddress(legoBluetoothDevice.getAddress());\n        if (cachedDevice !== null && legoBluetoothDevice.instanceId !== cachedDevice.instanceId) {\n            legoBluetoothDevice = cachedDevice;\n        }\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Device disconnect: ' + legoBluetoothDevice);\n        }\n        await legoBluetoothDevice.cleanUp();\n\n        let errorMessage = '';\n// LDSDKLogger.info('deviceDidDisconnect - status: ', status);\n        if (status === undefined || status === 0) {\n            errorMessage = '';\n        } else if (status === 8) {\n            // Connection lost e.g. due to out of range or Hub lid removed\n            errorMessage = `Connection lost to device: ${legoBluetoothDevice.getName()}`;\n            LDSDKLogger.error(errorMessage);\n        } else if (status === 19) {\n            // We do not want to treat this as an error\n            errorMessage = '';\n            // Happens e.g. when the user holds down the button on the device for a few seconds\n            LDSDKLogger.error(`Connection closed from device: ${legoBluetoothDevice.getName()}`);\n        } else {\n            errorMessage = `Connection closed unexpectedly to device: ${legoBluetoothDevice.getName()}`;\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn(errorMessage);\n            }\n        }\n\n        let error;\n        if (!(errorMessage === undefined || errorMessage === '')) {\n            error = LDSDKError.deviceError(ErrorCode.BLUETOOTH_CONNECTION_ERROR, errorMessage);\n        } else {\n            error = null;\n        }\n\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info(`Device did disconnect with status ${status}`);\n        }\n\n        const shouldAttemptReconnect = this.shouldAllowReconnectToDevice(legoBluetoothDevice);\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug(`Device ${legoBluetoothDevice.getName()} - shouldAttemptReconnect: ${shouldAttemptReconnect}`);\n        }\n        if (shouldAttemptReconnect) {\n            legoBluetoothDevice.updateConnectionStateUponConnectionStateChange(null, StateEnum.DisconnectedAdvertising);\n        }\n\n        await this.callbackHelper.performDidDisconnectFromDeviceCallback(legoBluetoothDevice, shouldAttemptReconnect, error);\n\n        if (!userInitiated) {\n            await this.performReconnect(legoBluetoothDevice, shouldAttemptReconnect);\n        }\n\n    }\n\n    async deviceDidFailToConnect(legoBluetoothDevice, status = 0) {\n\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info(`Device did fail to connect with status ${status}`);\n        }\n\n        await legoBluetoothDevice.cleanUp();\n\n        this.removeConnectTimeoutTimerForDevice(legoBluetoothDevice);\n\n        const shouldAttemptReconnect = this.shouldAllowReconnectToDevice(legoBluetoothDevice);\n        if (shouldAttemptReconnect) {\n            legoBluetoothDevice.updateConnectionStateUponConnectionStateChange(null, StateEnum.DisconnectedAdvertising);\n        }\n\n        await this.callbackHelper.performDidFailToConnectToDeviceCallback(legoBluetoothDevice, shouldAttemptReconnect, null);\n\n        await this.performReconnect(legoBluetoothDevice, shouldAttemptReconnect);\n    }\n\n    async performReconnect(legoBluetoothDevice, shouldAttemptReconnect) {\n        if (shouldAttemptReconnect) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('performReconnect -- shouldAttemptReconnect is true - calling reconnect: ' + legoBluetoothDevice.toString());\n            }\n            this.reconnectToDevice(legoBluetoothDevice);\n        } else {\n            this.resetReconnectCountForDevice(legoBluetoothDevice);\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('performReconnect -- shouldAttemptReconnect is false - disconnecting from: ' + legoBluetoothDevice.toString());\n            }\n            await legoBluetoothDevice.disconnectGatt(this, false);\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.constructor.name+'.performReconnect :: Deleting device from devices with key:' +\n                                 ' ['+legoBluetoothDevice.getDeviceId()+']. Devices size: ' + this.devices.size);\n            }\n\n        }\n    }\n\n    async deviceDidConnect(legoBluetoothDevice) {\n        await this.callbackHelper.performDidStartInterrogatingDeviceCallback(legoBluetoothDevice);\n        // LECQA-152: Remove the timeout timer already when connecting and give the chromebook more time to interrogate.\n        this.removeConnectTimeoutTimerForDevice(legoBluetoothDevice);\n    }\n\n    async deviceInterrogationFinished(legoBluetoothDevice) {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('deviceInterrogationFinished for device: ' + legoBluetoothDevice.getAddress() );\n        }\n        await this.removeConnectTimeoutTimerForDevice(legoBluetoothDevice);\n        this.resetReconnectCountForDevice(legoBluetoothDevice);\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug(this.constructor.name + ' - Awaiting' +\n                              ' callbackHelper.performDidFinishInterrogatingDeviceCallback for' +\n                              ' legoBluetoothDevice', legoBluetoothDevice.getName());\n        }\n        await this.callbackHelper.performDidFinishInterrogatingDeviceCallback(legoBluetoothDevice);\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug(this.constructor.name + ' - Completed' +\n                              ' callbackHelper.performDidFinishInterrogatingDeviceCallback');\n        }\n    }\n\n    addConnectTimeoutTimerForDevice(legoBluetoothDevice, timeout) {\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Creating connect timeout timer for ' + legoBluetoothDevice.getName() + ' [' + legoBluetoothDevice.getAddress()+ ']');\n        }\n        const timer = new DeviceConnectTimeoutCountDownTimer(legoBluetoothDevice, this, timeout);\n        this.deviceToConnectTimerDic.set(legoBluetoothDevice.getAddress(), timer);\n    }\n\n    removeConnectTimeoutTimerForDevice(legoBluetoothDevice) {\n        if (!legoBluetoothDevice || legoBluetoothDevice === null) {\n            return;\n        }\n        const timer = this.deviceToConnectTimerDic.get(legoBluetoothDevice.getAddress());\n        if (timer !== null && timer !== undefined) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Removing connect timeout timer for ' + legoBluetoothDevice.getName() + ' [' + legoBluetoothDevice.getAddress()+ ']');\n            }\n            timer.cancel();\n        }\n        this.deviceToConnectTimerDic.delete(legoBluetoothDevice.getAddress());\n    }\n\n    registerCallbackListener(listener) {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Registering '+ this.callbackHelper.constructor.name+' listener of type: ' + listener.constructor.name);\n        }\n        const callbackId = this.callbackHelper.registerCallbackListener(listener);\n        return callbackId;\n    }\n\n    unregisterCallbackListener(listenerId) {\n        const result = this.callbackHelper.unregisterCallbackListener(listenerId);\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('Unregistering '+ this.callbackHelper.constructor.name+' listener with id: ' + listenerId);\n        }\n        return result;\n    }\n\n    getAdvertisingDevicesInterval() {\n        return this.updateAdvertisingDevicesIntervalMillis;\n    }\n\n    updateAdvertisingDevicesInterval(interval) {\n        if (interval > LegoBluetoothDeviceManagerImpl.REFRESH_DEVICE_LIST_MINIMUM_INTERVAL) {\n            this.updateAdvertisingDevicesIntervalMillis = interval;\n        } else {\n            this.updateAdvertisingDevicesIntervalMillis = LegoBluetoothDeviceManagerImpl.REFRESH_DEVICE_LIST_MINIMUM_INTERVAL;\n        }\n    }\n\n    /**\n     *\n     * @param {string} legoDeviceAddress - The mac address of the hub to disconnect\n     */\n    async cancelDeviceConnection(legoDeviceAddress) {\n        const legoBluetoothDevice = this.devices.get(legoDeviceAddress);\n        if (legoBluetoothDevice && legoBluetoothDevice !== null) {\n            this.devices.delete(legoDeviceAddress);  // TODO: Do we need to delete it?\n            await legoBluetoothDevice.disconnectGatt(this, true);\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug(this.constructor.name+'.cancelDeviceConnection :: Deleted device from devices with' +\n                                  ' key: ['+legoDeviceAddress+']. Devices size: ' + this.devices.size);\n            }\n        }\n    }\n\n    /**\n     *\n     * @param {number} connectionState - @see {@link StateEnum}\n     * @return {SimpleList<LegoBluetoothDeviceImpl>}\n     */\n    devicesInState(connectionState) {\n        const devicesInStateList = new SimpleList();\n        this.devices.forEach((device, deviceId) => {\n            if (device.getConnectState() === connectionState) {\n                devicesInStateList.add(device);\n            }\n        });\n\n        if (devicesInStateList.size() > 0) {\n            if (connectionState === StateEnum.DisconnectedAdvertising || connectionState === StateEnum.Connecting) {\n                devicesInStateList.sort(LegoBluetoothDeviceManagerImpl.rssiComparatorDescending);\n            }\n        }\n\n        return devicesInStateList;\n    }\n\n    /**\n     *\n     * @return {SimpleList<LegoBluetoothDeviceImpl>}\n     */\n    allDevices() {\n        const allDevicesList = new SimpleList();\n        this.devices.forEach((device, deviceId) => {\n            allDevicesList.add(device);\n        });\n        if (LDSDKLogger.isTraceEnabled()) {\n            LDSDKLogger.debug(this.constructor.name + '.allDevices called. Original list:', this.devices, ', Copy:', allDevicesList, ' Original list size: ' + this.devices.size + ', Copy list size: ' + allDevicesList.size());\n        }\n        allDevicesList.sort(LegoBluetoothDeviceManagerImpl.rssiComparatorDescending);\n\n        return allDevicesList;\n    }\n\n    async isBluetoothEnabled() {\n        return await this.bluetoothAdapter.isBluetoothAvailable() && await this.bluetoothAdapter.isBluetoothEnabledOnDevice();\n    }\n\n    async isBluetoothAvailable() {\n        return await this.bluetoothAdapter.isBluetoothAvailable();\n    }\n\n    resetReconnectCountForDevice(legoBluetoothDevice) {\n        this.deviceToReconnectCount.delete(legoBluetoothDevice.getDeviceId());\n    }\n\n    async reconnectToDevice(legoBluetoothDevice) {\n        this.removeConnectTimeoutTimerForDevice(legoBluetoothDevice);\n        let reconnectCount = 0;\n        if (this.deviceToReconnectCount.has(legoBluetoothDevice.getAddress())) {\n            reconnectCount = this.deviceToReconnectCount.get(legoBluetoothDevice.getAddress());\n        }\n        const reconnectAttempt = reconnectCount + 1;\n\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug(`Reconnecting to ${legoBluetoothDevice.getName()} - reconnect attempt ${reconnectAttempt}`);\n        }\n        this.deviceToReconnectCount.set(legoBluetoothDevice.getAddress(), reconnectAttempt);\n\n        await legoBluetoothDevice.disconnectGatt(this, false);\n        await this.connectToDevice(legoBluetoothDevice);\n\n    }\n\n    shouldAllowReconnectToDevice(legoBluetoothDevice) {\n        if (!LegoDeviceManagerImpl.getInstance().config.shouldAutomaticallyReconnectOnConnectionLost()) {\n            return false;\n        }\n\n        if (legoBluetoothDevice.hasUserInitiatedDisconnect()) {\n            return false;\n        }\n\n        if (legoBluetoothDevice.buttonPressed) {\n            return false;\n        }\n\n        if (this.deviceToReconnectCount.size > 0) {\n            const reconnectCount = this.deviceToReconnectCount.get(legoBluetoothDevice.getAddress());\n            if (reconnectCount && reconnectCount !== null) {\n                return (reconnectCount < 1);\n            }\n        }\n        return true;\n\n    }\n\n    parseUuids(advertisedData) {\n        const uuids = new SimpleList();\n\n        const view = new DataView(advertisedData);\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('AdvertisedData: ' + new Int8Array(advertisedData));\n        }\n\n        return uuids;\n    }\n\n    clearStartScanningTimeoutHandle() {\n        if (this.startScanningTimeoutHandle !== null) {\n            clearTimeout(this.startScanningTimeoutHandle);\n            this.startScanningTimeoutHandle = null;\n        }\n    }\n\n    clearStopScanningTimeoutHandle() {\n        if (this.stopScanningTimeoutHandle !== null) {\n            clearTimeout(this.stopScanningTimeoutHandle);\n            this.stopScanningTimeoutHandle = null;\n        }\n    }\n\n    async startScan() {\n        try {\n            const start = new Date().getTime();\n            await this.bluetoothAdapter.startLeScan();\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('startLeScan completed in ' + (new Date().getTime()-start) + ' ms');\n            }\n        } catch (err) {\n            // No op - we want to continue\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Failed starting scan: ', err);\n            }\n        }\n    }\n\n    async stopScan() {\n        try {\n            const start = new Date().getTime();\n            await this.bluetoothAdapter.stopLeScan();\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('stopLeScan completed in ' + (new Date().getTime()-start) + ' ms');\n            }\n        } catch (err) {\n            // No op - we want to continue\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Failed stopping scan: ', err);\n            }\n        }\n    }\n\n    async startScanBackground () {\n        await this.startScan();\n        this.clearStopScanningTimeoutHandle();\n        this.stopScanningTimeoutHandle = setTimeout( async () => {\n            await this.stopScanBackground();\n            this.clearStopScanningTimeoutHandle();\n        }, LegoDeviceManagerImpl.getInstance().config.startStopScanningInterval);\n    }\n\n    async stopScanBackground() {\n        await this.stopScan();\n        this.clearStartScanningTimeoutHandle();\n        this.startScanningTimeoutHandle = setTimeout(async () => {\n            await this.startScanBackground();\n            this.clearStartScanningTimeoutHandle();\n        }, LegoDeviceManagerImpl.getInstance().config.startStopScanningInterval);\n    }\n\n    startRepeatingScanning() {\n        this.clearStartScanningTimeoutHandle();\n        this.startScanningTimeoutHandle = setTimeout( async () => {\n            await this.startScanBackground();\n            this.clearStartScanningTimeoutHandle();\n        }, 0);\n    }\n\n    async stopRepeatingScanning() {\n        this.clearStartScanningTimeoutHandle();\n        this.clearStopScanningTimeoutHandle();\n        await this.stopScan();\n    }\n\n    async isScanning() {\n        return await this.bluetoothAdapter.isScanning();\n    }\n\n    startRepeatingCleanUpListOfDiscoveredDevices() {\n        this.cleanUpListOfDiscoveredDevices();\n    }\n\n    stopRepeatingDeviceDisappearanceDiscovery() {\n        if ( this.cleanUpListOfDiscoveredDevicesTimeoutId ) {\n            clearTimeout(this.cleanUpListOfDiscoveredDevicesTimeoutId );\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/bluetooth/LegoBluetoothDeviceManagerImpl.js","/**\n * Created by frj on 22/02/16.\n */\n\nexport default class LegoDeviceManager {\n    /**\n     * The default connect request timeout in milliseconds\n     */\n    static DEFAULT_CONNECT_REQUEST_TIMEOUT = 12000;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/device/LegoDeviceManager.js","import LDSDKLogger from './LDSDKLogger';\n\nexport default class StorageHelper {\n\n    static _isEmpty(obj) {\n        if (typeof obj === 'undefined') {\n            return true;\n        }\n\n        if (typeof obj === 'string' || typeof obj === 'number') {\n            return obj.toString().trim().length === 0;\n        }\n\n        for(const prop in obj) {\n            if(obj.hasOwnProperty(prop))\n                return false;\n        }\n        return JSON.stringify(obj) === JSON.stringify({});\n    }\n\n    static async _checkItemsAndKey(key, items) {\n        return new Promise((resolve, reject) => {\n            if (!this._isEmpty(items)) {\n                if (!this._isEmpty(key)) {\n                    const myValue = items[key];\n                    if (!this._isEmpty(myValue)) {\n                        return resolve(myValue);\n                    }\n                } else {\n                    return resolve(items);\n                }\n            }\n            return resolve(undefined);\n        });\n    }\n\n    static async saveToLocalStorage(key, value) {\n        return new Promise((resolve, reject) => {\n            if (!this._isEmpty(key) && !this._isEmpty(value) && chrome && chrome.storage && chrome.storage.local) {\n                const obj = {};\n                obj[key] = value;\n                chrome.storage.local.set(obj, () => {\n                    return resolve(true);\n                });\n            } else {\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug(`saveToLocalStorage - chrome.storage.local is not available on this device - skipping persist of \"${key}\" - ${JSON.stringify(value)}`);\n                }\n                return resolve(false);\n            }\n        });\n    }\n\n    static async saveToSyncStorage(key, value) {\n        return new Promise((resolve, reject) => {\n            if (!this._isEmpty(key) && !this._isEmpty(value) && chrome && chrome.storage && chrome.storage.sync) {\n                const obj = {};\n                obj[key] = value;\n                chrome.storage.sync.set(obj, () => {\n                    return resolve(true);\n                });\n            } else {\n                if (LDSDKLogger.isDebugEnabled()) {\n                    LDSDKLogger.debug(`saveToSyncStorage - chrome.storage.sync is not available on this device - skipping persist of ${key} - ${JSON.stringify(value)}`);\n                }\n                return resolve(false);\n            }\n        });\n    }\n\n    static async getFromLocalStorage(key) {\n        return new Promise((resolve, reject) => {\n            if (chrome && chrome.storage && chrome.storage.local) {\n                chrome.storage.local.get(key, (items) => {\n                    return this._checkItemsAndKey(key, items)\n                        .then((result) => resolve(result));\n                });\n            } else {\n                if (LDSDKLogger.isTraceEnabled()) {\n                    LDSDKLogger.debug(`getFromLocalStorage - chrome.storage.local is not available on this device - skipping get of key ${key}`);\n                }\n                return resolve(undefined);\n            }\n        });\n    }\n\n    static async getFromSyncStorage(key) {\n        return new Promise((resolve, reject) => {\n            if (chrome && chrome.storage && chrome.storage.sync) {\n                chrome.storage.sync.get(key, (items) => {\n                    return this._checkItemsAndKey(key, items)\n                        .then((result) => resolve(result));\n                });\n            } else {\n                if (LDSDKLogger.isTraceEnabled()) {\n                    LDSDKLogger.debug(`getFromSyncStorage - chrome.storage.sync is not available on this device - skipping get of key ${key}`);\n                }\n                return resolve(undefined);\n            }\n        });\n    }\n\n}\n\nwindow.StorageHelper = window.StorageHelper || StorageHelper;\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/StorageHelper.js","import IdHelper from './IdHelper';\nexport default class TimerUtil {\n    static timers = new Map();\n\n    /**\n     * Start a new timer and get the generated id, that is required by the other timer functions\n     * @return {string} - An alphanumeric unique id\n     */\n    static startTimer() {\n        const timerKey = IdHelper.generateID();\n        TimerUtil.timers.set(timerKey, TimerUtil.now());\n        return timerKey;\n    }\n\n    /**\n     * Get the elapsed number of milliseconds since the timer was started - but keep the timer running for further measurements\n     * @param timerKey - The key returned by the startTimer call\n     * @return {number} - The number of milliseconds elapsed since starting the timer\n     */\n    static elapsedTime(timerKey = null) {\n        if (TimerUtil.timers.has(timerKey)) {\n            return TimerUtil.now() - TimerUtil.timers.get(timerKey);\n        }\n        return -1;\n    }\n\n    /**\n     * Get the elapsed number of milliseconds since the timer was started, and reset the timer to current timestamp.\n     * @param timerKey - The key returned by the startTimer call\n     * @return {number} - The number of milliseconds elapsed since starting the timer\n     */\n    static resetTimer(timerKey = null) {\n        if (TimerUtil.timers.has(timerKey)) {\n            const now = TimerUtil.now();\n            const elapsed = TimerUtil.elapsedTime(timerKey);\n            TimerUtil.timers.set(timerKey, now);\n            return elapsed;\n        }\n        return -1;\n    }\n\n    /**\n     * Stop the timer and return the number of milliseconds since the timer was started\n     * @param timerKey\n     * @return {number} - The number of milliseconds elapsed since starting the timer\n     */\n    static stopTimer(timerKey = null) {\n        if (timerKey === null) return -1;\n\n        const elapsed = TimerUtil.elapsedTime(timerKey);\n        TimerUtil.timers.delete(timerKey);\n        return elapsed;\n    }\n\n    /**\n     * Get the current number of milliseconds since Epoch\n     * @return {number} - Number of milliseconds since jan 1 1970 00:00:00\n     */\n    static now() {\n        if (!Date.now) {\n            Date.now = function now() {\n                return new Date().getTime();\n            };\n        }\n        return Date.now();\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/TimerUtil.js","/**\n * Created by frj on 11/02/16.\n */\nimport LDSDKLogger from '../helpers/LDSDKLogger';\n\nexport default class InputCommand {\n\n    static HEADER_SIZE = 3;\n    static COMMAND_ID_INPUT_VALUE = 0;\n    static COMMAND_ID_INPUT_FORMAT = 1;\n\n    static COMMAND_TYPE_READ = 1;\n    static COMMAND_TYPE_WRITE = 2;\n\n    constructor(commandId, commandType, connectId, payloadData) {\n        const commandBytes = new Int8Array(InputCommand.HEADER_SIZE + payloadData.byteLength);\n        const payloadBytes = new Int8Array(payloadData);\n\n        commandBytes[0] = commandId;\n        commandBytes[1] = commandType;\n        commandBytes[2] = connectId;\n\n        commandBytes.set(payloadBytes, InputCommand.HEADER_SIZE); // Append the format bytes from position 3\n\n        this.data = commandBytes.buffer;\n    }\n\n    /**\n     *\n     * @param {InputFormat} format\n     * @param {number} connectId\n     * @return {InputCommand}\n     */\n    static commandWriteInputFormat(format, connectId) {\n        return new InputCommand(InputCommand.COMMAND_ID_INPUT_FORMAT, InputCommand.COMMAND_TYPE_WRITE, connectId, format.writeFormatData());\n    }\n\n    /**\n     *\n     * @param {number} connectId\n     * @return {InputCommand}\n     */\n    static commandReadInputFormatForConnectId(connectId) {\n        return new InputCommand(InputCommand.COMMAND_ID_INPUT_FORMAT, InputCommand.COMMAND_TYPE_READ, connectId, new Uint8Array(0));\n    }\n\n    /**\n     *\n     * @param {number} connectId\n     * @return {InputCommand}\n     */\n    static commandReadValueForConnectId(connectId) {\n        return new InputCommand(InputCommand.COMMAND_ID_INPUT_VALUE, InputCommand.COMMAND_TYPE_READ, connectId, new Uint8Array(0));\n    }\n\n    /**\n     *\n     * @return {ArrayBuffer}\n     */\n    getData() {\n        return (this.data === null) ? null : this.data.slice();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/InputCommands.js","/**\n * Created by frj on 12/02/16.\n */\nimport LDSDKLogger from '../helpers/LDSDKLogger';\n\nexport default class OutputCommand {\n    static HEADER_SIZE = 3;\n\n    static WRITE_MOTOR_POWER_COMMAND_ID = 0x01;\n\n    static PLAY_PIEZO_TONE_COMMAND_ID = 0x02;\n    static STOP_PIEZO_TONE_COMMAND_ID = 0x03;\n\n    static WRITE_RGB_COMMAND_ID = 0x04;\n\n    static WRITE_DIRECT_ID = 0x05;\n\n    static COMMAND_PAYLOAD_SIZE_PIEZO = 4;\n    static COMMAND_PAYLOAD_SIZE_RGB_LIGHT = 3;\n\n\n    /**\n     *\n     * @param {number} connectId\n     * @param {commandId} commandId\n     * @param {ArrayBuffer} payloadData\n     */\n    constructor(connectId, commandId, payloadData) {\n        const tempDataArray = new Uint8Array(OutputCommand.HEADER_SIZE + payloadData.byteLength);\n        tempDataArray[0] = connectId;\n        tempDataArray[1] = commandId;\n        tempDataArray[2] = payloadData.byteLength;\n        tempDataArray.set(new Uint8Array(payloadData), 3);\n\n        // LDSDKLogger.trace('OutputCommand data: ' + tempDataArray);\n        this.data = tempDataArray.buffer;\n    }\n\n    /**\n     *\n     * @param {number} power\n     * @param {number} connectId\n     * @return {OutputCommand}\n     */\n    static commandWriteMotorPower(power, connectId) {\n        return new OutputCommand(connectId, OutputCommand.WRITE_MOTOR_POWER_COMMAND_ID, new Uint8Array([power]));\n    }\n\n    /**\n     *\n     * @param {number} frequency\n     * @param {number} duration\n     * @param {number} connectId\n     * @return {OutputCommand}\n     */\n    static commandWritePiezoToneFrequency(frequency, duration, connectId) {\n        const payloadBuffer = new DataView(new ArrayBuffer(4));\n        payloadBuffer.setUint16(0, frequency, true); // true -> little endian\n        payloadBuffer.setUint16(2, duration, true); // true -> little endian\n\n        return new OutputCommand(connectId, OutputCommand.PLAY_PIEZO_TONE_COMMAND_ID, payloadBuffer.buffer);\n    }\n\n    /**\n     *\n     * @param {number} red\n     * @param {number} green\n     * @param {number} blue\n     * @param {number} connectId\n     * @return {OutputCommand}\n     */\n    static commandWriteRGBLight(red, green, blue, connectId) {\n        const payloadBuffer = new DataView(new ArrayBuffer(3));\n        payloadBuffer.setUint8(0, red);\n        payloadBuffer.setUint8(1, green);\n        payloadBuffer.setUint8(2, blue);\n\n        return new OutputCommand(connectId, OutputCommand.WRITE_RGB_COMMAND_ID, payloadBuffer.buffer);\n    }\n\n    /**\n     *\n     * @param {number} index\n     * @param {number} connectId\n     * @return {OutputCommand}\n     */\n    static commandWriteRGBLightIndex(index, connectId) {\n        const payloadBuffer = new DataView(new ArrayBuffer(1));\n        payloadBuffer.setUint8(0, index);\n        return new OutputCommand(connectId, OutputCommand.WRITE_RGB_COMMAND_ID, payloadBuffer.buffer);\n    }\n\n    /**\n     *\n     * @param {ArrayBuffer} dataBuffer\n     * @param {number} connectId\n     * @return {OutputCommand}\n     */\n    static commandWithDirectWriteThroughData(dataBuffer, connectId) {\n        return new OutputCommand(connectId, OutputCommand.WRITE_DIRECT_ID, dataBuffer);\n    }\n\n    /**\n     *\n     * @param {number} connectId\n     * @return {OutputCommand}\n     */\n    static commandWritePiezoToneStopForConnectId(connectId) {\n        return new OutputCommand(connectId, OutputCommand.STOP_PIEZO_TONE_COMMAND_ID, new Uint8Array(0));\n    }\n\n    /**\n     *\n     * @return {ArrayBuffer}\n     */\n    getData() {\n        return (this.data === null) ? null : this.data.slice();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/OutputCommand.js","/**\n * Created by frj on 11/02/16.\n */\n\n// 'use strict';\nimport InputFormat, { InputFormatUnit } from '../InputFormat';\nimport LegoService from './LegoService';\nimport LDSDKLogger from '../../helpers/LDSDKLogger';\n\n/**\n * Service implementation handling current readings from the hub\n */\nexport default class CurrentSensor extends LegoService {\n\n    // x = 2;\n\n    /**\n     * @ignore\n     * @param {ConnectInfo} connectInfo\n     * @param {BluetoothIO} io\n     */\n    constructor(connectInfo, io) {\n        super(connectInfo, io);\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this.SERVICE_CURRENT_SENSOR_NAME = 'Current Sensor';\n    }\n\n    /**\n     * Return the name of the sensor\n     * @return {string}\n     */\n    getServiceName() {\n        return this.SERVICE_CURRENT_SENSOR_NAME;\n    }\n\n    /**\n     * Get the default input format for the Current Sensor.\n     *\n     * Note: By default notifications are not enabled for the Current sensor as the measurements can fluctuate\n     * and cause a lot of BLE traffic. Enable notifications only if you need them.\n     * Use {@link InputFormat#inputFormatBySettingNotificationsEnabled} on the default input format to get an input format\n     * with notifications enabled and then update the input format for the voltage sensor using the {@link CurrentSensor#updateInputFormat}\n     *\n     * @return {InputFormat}\n     */\n    getDefaultInputFormat() {\n        return InputFormat.inputFormat(this.getConnectInfo().getConnectId(), this.getConnectInfo().getType(), 0, 30, InputFormatUnit.SI, false);\n    }\n\n    /**\n     * @ignore\n     * Create an instance of the CurrentSensor\n     *\n     * @param {ConnectInfo} connectInfo\n     * @param {BluetoothIO} io\n     * @return {CurrentSensor}\n     */\n    static createService(connectInfo, io) {\n        return new CurrentSensor(connectInfo, io);\n    }\n\n    /**\n     * Get the current sensor value as milli amperes\n     * @return {number} - Returns a float number representing the measurement in milli amperes.\n     */\n    getValueAsMilliAmps() {\n        if (this.inputFormat !== null && this.inputFormat.getMode() === 0 && this.inputFormat.getUnit() === InputFormatUnit.SI) {\n            return this.getValueAsFloat();\n        } else {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Can only retrieve milli amps from Current Sensor when sensor is in mode 0 and uses SI units');\n            }\n            return 0;\n        }\n    }\n\n    /**\n     * @ignore\n     * Handle updated value data for the sensor\n     * @param {ArrayBuffer} valueData\n     */\n    handleUpdatedValueData(valueData = null) {\n        super.handleUpdatedValueData(valueData);\n        this.callbackHelper.performDidUpdateMilliAmps(this, this.getValueAsMilliAmps());\n    }\n\n    /**\n     * Get the simple service data as an object for using in the callback handlers\n     * @return {{valueAsMilliAmps: number}}\n     */\n    getSimpleServiceData() {\n        return {\n            valueAsMilliAmps: this.getValueAsMilliAmps()\n        };\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/services/CurrentSensor.js","/**\n * Created by frj on 11/02/16.\n */\n\n// 'use strict';\nimport LegoService from './LegoService';\n\n/**\n * Generic Service is meant to be used for third party services / unkown services.\n * This service has no default input format - so to read values from the service you need to set a format.\n *\n * It also does not know how to handle updated value data - so this you must also handle and possibly override the default implementation in {@link LegoService#handleUpdatedValueData}.\n *\n * @see {@link LegoService#updateInputFormat}\n * @see {@link LegoService#handleUpdatedValueData}\n *\n */\nexport default class GenericService extends LegoService {\n\n    /**\n     * @private\n     * @type {string}\n     */\n    static SERVICE_GENERIC_NAME = 'Generic IO';\n\n    /**\n     * @ignore\n     * @param {ConnectInfo} connectInfo\n     * @param {BluetoothIO} io\n     */\n    constructor(connectInfo, io) {\n        super(connectInfo, io);\n    }\n\n    /**\n     * Get the service name\n     * @return {string}\n     */\n    getServiceName() {\n        return GenericService.SERVICE_GENERIC_NAME;\n    }\n\n    /**\n     * There is no default input format for a generic sensor. Create an {@link InputFormat} if you need it, and set it on the service using {@link LegoService#updateInputFormat}\n     * @return {null}\n     */\n    getDefaultInputFormat() {\n        return null;\n    }\n\n    /**\n     * @ignore\n     * Create an instance of the generic service\n     * @param connectInfo\n     * @param io\n     * @return {GenericService}\n     */\n    createService(connectInfo, io) {\n        return new GenericService(connectInfo, io);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/services/GenericService.js","/**\n * Created by frj on 11/02/16.\n */\n\nimport InputFormat, { InputFormatUnit } from '../InputFormat';\nimport LegoService from './LegoService';\nimport DataFormat from '../DataFormat';\nimport LDSDKLogger from '../../helpers/LDSDKLogger';\n\n/**\n *\n * @type {object} MotionSensorMode\n * @property {number} MOTION_SENSOR_MODE_DETECT - Detect mode - produces value that reflect the relative distance from the sensor to objects in front of it\n * @property {number} MOTION_SENSOR_MODE_COUNT - Count mode - produces values that reflect how many times the sensor has been activated\n * @property {number} MOTION_SENSOR_MODE_UNKNOWN - Unknown (unsupported) mode\n */\nexport const MotionSensorMode = {\n    /**\n     * Detect mode - produces value that reflect the relative distance from the sensor to objects in front of it\n     */\n    MOTION_SENSOR_MODE_DETECT: 0,\n\n    /**\n     * Count mode - produces values that reflect how many times the sensor has been activated\n     */\n    MOTION_SENSOR_MODE_COUNT: 1,\n\n    /**\n     * Unknown (unsupported) mode\n     */\n    MOTION_SENSOR_MODE_UNKNOWN: 2,\n\n    /**\n     * Helper for getting the enum  - if the value is not one of the supported values - MOTION_SENSOR_MODE_UNKNOWN is\n     * returned\n     * @param {number} mode\n     * @return {number}\n     */\n    fromInteger: function(mode) {\n        switch (parseInt(mode)) {\n            case this.MOTION_SENSOR_MODE_DETECT:\n                return this.MOTION_SENSOR_MODE_DETECT;\n            case this.MOTION_SENSOR_MODE_COUNT:\n                return this.MOTION_SENSOR_MODE_COUNT;\n            case this.MOTION_SENSOR_MODE_UNKNOWN:\n            default:\n                return this.MOTION_SENSOR_MODE_UNKNOWN;\n        }\n    },\n\n    asString: function(mode) {\n        switch (parseInt(mode)) {\n            case this.MOTION_SENSOR_MODE_DETECT:\n                return 'MOTION_SENSOR_MODE_DETECT';\n            case this.MOTION_SENSOR_MODE_COUNT:\n                return 'MOTION_SENSOR_MODE_COUNT';\n            case this.MOTION_SENSOR_MODE_UNKNOWN:\n            default:\n                return 'MOTION_SENSOR_MODE_UNKNOWN';\n        }\n    }\n};\n\n/**\n * The motion sensor can be used for measuring distance to an object or detecting bumps.\n *\n * Note that there will be one instance of the MotionSensor per connected motion sensor.\n */\nexport default class MotionSensor extends LegoService {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    static MAX_DISTANCE = 10;\n    /**\n     * @private\n     * @type {number}\n     */\n    static MIN_DISTANCE = 0;\n    /**\n     * @private\n     * @type {string}\n     */\n    static SERVICE_MOTION_SENSOR_NAME = 'Motion Sensor';\n\n    /**\n     * @ignore\n     * @param {ConnectInfo} connectInfo\n     * @param {BluetoothIO} io\n     */\n    constructor(connectInfo, io) {\n        super(connectInfo, io);\n        this.addValidDataFormats();\n    }\n\n    /**\n     * @ignore - Not to be used by client code\n     * Create a new instance of the Motion sensor service\n     * @param {ConnectInfo} connectInfo\n     * @param {BluetoothIO} io\n     * @return {MotionSensor}\n     */\n    static createService(connectInfo, io) {\n       return new MotionSensor(connectInfo, io);\n    }\n\n    /**\n     * Get the service name\n     * @return {string}\n     */\n    getServiceName() {\n        return MotionSensor.SERVICE_MOTION_SENSOR_NAME;\n    }\n\n    /**\n     * Get the default input format for the Motion sensor service\n     * The default input format measures distance to an object using delta interval 1, in SI units and has notifications enabled.\n     * @return {InputFormat}\n     */\n    getDefaultInputFormat() {\n        return InputFormat.inputFormat(this.getConnectInfo().getConnectId(), this.getConnectInfo().getType(), MotionSensorMode.MOTION_SENSOR_MODE_DETECT, 1, InputFormatUnit.SI, true);\n    }\n\n    /**\n     * @ignore\n     * Adds the valid data formats for the motion sensor service\n     */\n    addValidDataFormats() {\n        this.addValidDataFormat(DataFormat.create('Detect', MotionSensorMode.MOTION_SENSOR_MODE_DETECT, InputFormatUnit.RAW, 1, 1));\n        this.addValidDataFormat(DataFormat.create('Detect', MotionSensorMode.MOTION_SENSOR_MODE_DETECT, InputFormatUnit.PERCENTAGE, 1, 1));\n        this.addValidDataFormat(DataFormat.create('Detect', MotionSensorMode.MOTION_SENSOR_MODE_DETECT, InputFormatUnit.SI, 4, 1));\n        this.addValidDataFormat(DataFormat.create('Count', MotionSensorMode.MOTION_SENSOR_MODE_COUNT, InputFormatUnit.RAW, 4, 1));\n        this.addValidDataFormat(DataFormat.create('Count', MotionSensorMode.MOTION_SENSOR_MODE_COUNT, InputFormatUnit.PERCENTAGE, 1, 1));\n        this.addValidDataFormat(DataFormat.create('Count', MotionSensorMode.MOTION_SENSOR_MODE_COUNT, InputFormatUnit.SI, 4, 1));\n    }\n\n    /**\n     * Get the distance if the sensor mode is MotionSensorMode.MOTION_SENSOR_MODE_COUNT then 0 is returned.\n     * @return {number} - The distance between 0 and 10\n     */\n    getDistance() {\n        if (this.getMotionSensorMode() !== MotionSensorMode.MOTION_SENSOR_MODE_DETECT) {\n            return 0;\n        }\n\n        const number = this.getNumberFromValueData();\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug(this.getServiceName() + ' - distance: ' + number);\n        }\n        if (number !== null) {\n            return number;\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * Get the count - if the sensor mode is MotionSensorMode.MOTION_SENSOR_MODE_DETECT then 0 is returned.\n     * @return {number} - The count\n     */\n    getCount() {\n        if (this.getMotionSensorMode() !== MotionSensorMode.MOTION_SENSOR_MODE_COUNT) {\n            return 0;\n        }\n\n        const number = this.getNumberFromValueData();\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug(this.getServiceName() + ' - count: ' + number + ', this.valueData: ' + (this.valueData !== null ? new Int8Array(this.valueData) : 'null'));\n        }\n        if (number !== null) {\n            return number;\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * Get the current motion sensor mode.\n     * @return {number} - @see {@link MotionSensorMode}\n     */\n    getMotionSensorMode() {\n        return MotionSensorMode.fromInteger(this.getInputFormatMode());\n    }\n\n    /**\n     * Set the current motion sensor mode\n     * @param {number} motionSensorMode - @see {@link MotionSensorMode}\n     */\n    setMotionSensorMode(motionSensorMode) {\n        this.updateCurrentInputFormatWithNewMode(motionSensorMode);\n    }\n\n    /**\n     * @ignore\n     * Handle updated data\n     * @param {ArrayBuffer} valueData\n     */\n    async handleUpdatedValueData(valueData = null) {\n        const oldDistance = this.getDistance();\n        super.handleUpdatedValueData(valueData);\n\n        if (this.getMotionSensorMode() === MotionSensorMode.MOTION_SENSOR_MODE_DETECT) {\n            const newDistance = this.getDistance();\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info(this.getServiceName() + ' - handleUpdatedValueData. Old distance: ' + oldDistance + ',  New distance: ' + newDistance + ', SensorMode: MotionSensorMode.MOTION_SENSOR_MODE_DETECT');\n            }\n            await this.callbackHelper.performDidUpdateMotionSensorDistanceCallback(this, oldDistance, newDistance);\n        } else {\n            const newCount = this.getCount();\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info(this.getServiceName() + ' - handleUpdatedValueData. New count: ' + newCount + ', SensorMode: MotionSensorMode.MOTION_SENSOR_MODE_COUNT (' + this.getMotionSensorMode() + ')');            }\n            await this.callbackHelper.performDidUpdateMotionSensorCountCallback(this, newCount);\n        }\n    }\n\n    /**\n     * Get a simple version of the motion sensor service object\n     * @return {{deviceId: string, isInternalService: boolean, serviceName: string, serviceData: ({}|*), numberValue: number, updateInputFormat: simpleService.updateInputFormat, handleUpdatedInputFormat: simpleService.handleUpdatedInputFormat}}\n     */\n    getSimpleService() {\n        const superService = super.getSimpleService();\n        const self = this;\n        superService['setMotionSensorMode'] = function (motionSensorMode) {\n            self.setMotionSensorMode(motionSensorMode);\n        };\n        return superService;\n    }\n\n\n    /**\n     * Get the simple service data for use in the service callback handler\n     * @return {{count: number, distance: number, motionSensorMode: number}}\n     */\n    getSimpleServiceData() {\n        const superServiceData = super.getSimpleServiceData();\n        superServiceData['count'] = this.getCount();\n        superServiceData['distance'] = this.getDistance();\n        superServiceData['motionSensorMode'] = this.getMotionSensorMode();\n        return superServiceData;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/services/MotionSensor.js","/**\n * Created by frj on 03/03/16.\n */\n\nimport LegoService from './LegoService';\nimport LDSDKLogger from '../../helpers/LDSDKLogger';\n\n/**\n * Tones that can be played using the PiezoTonePlayer\n *\n * @type {object} PiezoTonePlayerNote\n * @property {number} PIEZO_NOTE_C - Note 'C'\n * @property {number} PIEZO_NOTE_CIS - Note 'C#'\n * @property {number} PIEZO_NOTE_D - Note 'D'\n * @property {number} PIEZO_NOTE_DIS - Note 'D#'\n * @property {number} PIEZO_NOTE_E - Note 'E'\n * @property {number} PIEZO_NOTE_F - Note 'F'\n * @property {number} PIEZO_NOTE_FIS - Note 'F#'\n * @property {number} PIEZO_NOTE_G - Note 'G'\n * @property {number} PIEZO_NOTE_GIS - Note 'G#'\n * @property {number} PIEZO_NOTE_A - Note 'A'\n * @property {number} PIEZO_NOTE_AIS - Note 'A#'\n * @property {number} PIEZO_NOTE_B - Note 'B'\n */\nexport const PiezoTonePlayerNote = {\n    /**\n     * C\n     */\n    PIEZO_NOTE_C: 1,\n    /**\n     * C#\n     */\n    PIEZO_NOTE_CIS: 2,\n    /**\n     * D\n     */\n    PIEZO_NOTE_D: 3,\n    /**\n     * D#\n     */\n    PIEZO_NOTE_DIS: 4,\n    /**\n     * E\n     */\n    PIEZO_NOTE_E: 5,\n    /**\n     * F\n     */\n    PIEZO_NOTE_F: 6,\n    /**\n     * F#\n     */\n    PIEZO_NOTE_FIS: 7,\n    /**\n     * G\n     */\n    PIEZO_NOTE_G: 8,\n    /**\n     * G#\n     */\n    PIEZO_NOTE_GIS: 9,\n    /**\n     * A\n     */\n    PIEZO_NOTE_A: 10,\n    /**\n     * A#\n     */\n    PIEZO_NOTE_AIS: 11,\n    /**\n     * B\n     */\n    PIEZO_NOTE_B: 12,\n\n    fromInteger: function (val) {\n        switch (parseInt(val)) {\n            case 0:\n                return this.PIEZO_NOTE_C;\n            case 1:\n                return this.PIEZO_NOTE_CIS;\n            case 2:\n                return this.PIEZO_NOTE_D;\n            case 3:\n                return this.PIEZO_NOTE_DIS;\n            case 4:\n                return this.PIEZO_NOTE_E;\n            case 5:\n                return this.PIEZO_NOTE_F;\n            case 6:\n                return this.PIEZO_NOTE_F;\n            case 7:\n                return this.PIEZO_NOTE_FIS;\n            case 8:\n                return this.PIEZO_NOTE_G;\n            case 9:\n                return this.PIEZO_NOTE_GIS;\n            case 10:\n                return this.PIEZO_NOTE_A;\n            case 11:\n                return this.PIEZO_NOTE_AIS;\n            case 12:\n                return this.PIEZO_NOTE_B;\n            default:\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn(`Reached default case when trying to determine Piezo Node for value: ${val} note was set to ${this.PIEZO_NOTE_C}`);\n                }\n                return this.PIEZO_NOTE_C;\n        }\n    }\n};\n\n\n/**\n * The Piezo Tone Player can be used for controlling the Piezo speaker in the hub\n */\nexport default class PiezoTonePlayer extends LegoService {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    static PIEZO_TONE_MAX_FREQUENCY = 1500;\n    /**\n     * @private\n     * @type {number}\n     */\n    static PIEZO_TONE_MAX_DURATION = 65536;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    static SERVICE_PIEZO_TONE_PLAYER_NAME = 'Piezo';\n\n\n    /**\n     * @ignore\n     *\n     * @param {ConnectInfo} connectInfo\n     * @param {BluetoothIO} io\n     */\n    constructor(connectInfo, io) {\n        super(connectInfo, io);\n    }\n\n    /**\n     * @ignore\n     * Create an instance of the piezo tone player service\n     * @param {ConnectInfo} connectInfo\n     * @param {BluetoothIO} io\n     * @return {PiezoTonePlayer}\n     */\n    static createService(connectInfo, io) {\n        return new PiezoTonePlayer(connectInfo, io);\n    }\n\n    /**\n     * Get the service name\n     * @return {string}\n     */\n    getServiceName() {\n        return PiezoTonePlayer.SERVICE_PIEZO_TONE_PLAYER_NAME;\n    }\n\n    /**\n     * Play a frequency for the given duration in ms\n     *\n     * @param {number} frequency The frequency to play (max supported frequency is 1500Hz)\n     * @param {number} duration  The duration to play (max supported is 65536 milliseconds).\n     */\n    playFrequency(frequency, duration) {\n        frequency = Math.round(Math.max(0, frequency));\n        duration = Math.round(Math.max(0, duration));\n        if (frequency > PiezoTonePlayer.PIEZO_TONE_MAX_FREQUENCY) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn(`Cannot play frequenzy ${frequency}, max supported frequency is ${PiezoTonePlayer.PIEZO_TONE_MAX_FREQUENCY}`);\n            }\n            frequency = PiezoTonePlayer.PIEZO_TONE_MAX_FREQUENCY;\n        }\n        if (duration > PiezoTonePlayer.PIEZO_TONE_MAX_DURATION) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn(`Cannot play piezo tone with duration ${duration} ms, max supported frequency is ${PiezoTonePlayer.PIEZO_TONE_MAX_DURATION} ms`);\n            }\n            duration = PiezoTonePlayer.PIEZO_TONE_MAX_DURATION;\n        }\n\n        this.getIo().writePiezoToneFrequency(frequency, duration, this.getConnectInfo().getConnectId());\n    }\n\n    /**\n     * Play a note.\n     * The highest supported note is F# in 6th octave\n     *\n     * @param {PiezoTonePlayerNote} note     The note to play (max supported is F# in the 6th octave)\n     * @param {number} octave   The octave in which to play the note\n     * @param {number} duration The duration to play (max supported is 65536 milli seconds).\n     */\n    playNote(note, octave, duration) {\n        octave = Math.round(Math.max(0, octave));\n        duration = Math.round(Math.max(0, duration));\n        if (octave > 6) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn(`Highest supported note is F# in 6th octave - invalid octave: ${octave}`);\n            }\n        }\n        if (octave === 6 && note > PiezoTonePlayerNote.PIEZO_NOTE_FIS) {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Cannot play note. Highest supported note is F# in 6th octave');\n            }\n        }\n\n        /**\n         * The basic formula for the frequencies of the notes of the equal tempered scale is given by\n         * fn = f0 * (a)n\n         * where\n         * f0 = the frequency of one fixed note which must be defined. A common choice is setting the A above middle C (A4) at f0 = 440 Hz.\n         * n = the number of half steps away from the fixed note you are. If you are at a higher note, n is positive. If you are on a lower note, n is negative.\n         * fn = the frequency of the note n half steps away.\n         * a = (2)1/12 = the twelfth root of 2 = the number which when multiplied by itself 12 times equals 2 = 1.059463094359...\n         */\n\n        const base = 440.0;\n        const octavesAboveMiddle = octave - 4;\n        const halfStepsAwayFromBase = note - PiezoTonePlayer.PiezoTonePlayerNote.PIEZO_NOTE_A + (octavesAboveMiddle * 12);\n        const frequency = base * Math.pow(Math.pow(2.0, 1.0 / 12), halfStepsAwayFromBase);\n\n        this.playFrequency(Math.round(frequency), duration);\n    }\n\n    /**\n     * Stop playing any currently playing tone.\n     */\n    stopPlaying() {\n        this.getIo().writePiezoToneStop(this.getConnectInfo().getConnectId());\n    }\n\n    /**\n     * Get simple representation of the Piezo tone player service\n     * @return {{deviceId: string, isInternalService: boolean, serviceName: string, serviceData: ({}|*), numberValue: number, updateInputFormat: simpleService.updateInputFormat, handleUpdatedInputFormat: simpleService.handleUpdatedInputFormat}}\n     */\n    getSimpleService() {\n        const superService = super.getSimpleService();\n        const self = this;\n        superService['playFrequency'] = function (frequency, duration) {\n            self.playFrequency(frequency, duration);\n        };\n        superService['playNote'] = function (note, octave, duration) {\n            self.playNote(note, octave, duration);\n        };\n        superService['stopPlaying'] = function () {\n            self.stopPlaying();\n        };\n        return superService;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/services/PiezoTonePlayer.js","/**\n * Created by frj on 11/02/16.\n */\n\n// 'use strict';\nimport InputFormat, { InputFormatUnit } from '../InputFormat';\nimport DataFormat from '../DataFormat';\nimport LegoService from './LegoService';\nimport LDSDKLogger from '../../helpers/LDSDKLogger';\n\n/**\n *\n * @type {object} RGBLightMode\n * @property {number} RGB_LIGHT_MODE_DISCRETE - Discrete mode allows selecting a color index from a set of predefined colors\n * @property {number} RGB_LIGHT_MODE_ABSOLUTE - Absolute mode allows selecting any color by specifying its RGB component values\n * @property {number} RGB_LIGHT_MODE_UNKNOWN - Unknown mode\n *\n */\nexport const RGBLightMode = {\n    RGB_LIGHT_MODE_DISCRETE: 0,\n    RGB_LIGHT_MODE_ABSOLUTE: 1,\n    RGB_LIGHT_MODE_UNKNOWN: 2,\n\n    /**\n     * Helper for getting the enum  - if the value is not one of the supported values - RGB_LIGHT_MODE_UNKNOWN is\n     * returned\n     * @param {number} value\n     * @return {number}\n     */\n    fromInteger: function(value) {\n        switch (parseInt(value)) {\n            case this.RGB_LIGHT_MODE_DISCRETE:\n                return this.RGB_LIGHT_MODE_DISCRETE;\n            case this.RGB_LIGHT_MODE_ABSOLUTE:\n                return this.RGB_LIGHT_MODE_ABSOLUTE;\n            case this.RGB_LIGHT_MODE_UNKNOWN:\n            default:\n                return this.RGB_LIGHT_MODE_UNKNOWN;\n        }\n    },\n\n    asString: function(value) {\n        switch (parseInt(value)) {\n            case this.RGB_LIGHT_MODE_DISCRETE:\n                return 'DISCRETE';\n            case this.RGB_LIGHT_MODE_ABSOLUTE:\n                return 'ABSOLUTE';\n            case this.RGB_LIGHT_MODE_UNKNOWN:\n            default:\n                return 'UNKNOWN';\n        }\n    }\n};\n\nexport class RGBColor {\n    constructor(red, green, blue) {\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n    }\n\n    getColor() {\n        return { red: this.red, green: this.green, blue: this.blue};\n    }\n\n    getRed() {\n        return this.red;\n    }\n\n    getGreen() {\n        return this.green;\n    }\n\n    getBlue() {\n        return this.blue;\n    }\n\n    toString() {\n        return '[ '+JSON.stringify(this.getColor())+' ]';\n    }\n}\n\n/**\n * The RGBLight can be used for controlling the RGB light LED in the hub\n */\nexport default class RGBLight extends LegoService {\n\n    /**\n     * @ignore\n     * @param {ConnectInfo} connectInfo\n     * @param {BluetoothIO} io\n     */\n    constructor(connectInfo, io) {\n        super(connectInfo, io);\n        /**\n         * @private\n         * @type {string}\n         */\n        this.SERVICE_RGB_LIGHT_NAME = 'RGB Light';\n        /**\n         * @private\n         * @type {RGBColor}\n         */\n        this.color = this.getDefaultColor();\n        /**\n         * @private\n         * @type {number}\n         */\n        this.colorIndex = 0;\n\n        this.addValidDataFormats();\n    }\n\n    /**\n     * Get the name of the service\n     * @return {string}\n     */\n    getServiceName() {\n        return this.SERVICE_RGB_LIGHT_NAME;\n    }\n\n    /**\n     * Get the default input format for the RGB Light\n     * @return {InputFormat}\n     */\n    getDefaultInputFormat() {\n        return InputFormat.inputFormat(this.getConnectInfo().getConnectId(), this.getConnectInfo().getType(), RGBLightMode.RGB_LIGHT_MODE_DISCRETE, 1, InputFormatUnit.RAW, true);\n    }\n\n    /**\n     * @ignore\n     * Create an instance of the RGBLight service\n     * @param {ConnectInfo} connectInfo\n     * @param {BluetoothIO} io\n     * @return {RGBLight}\n     */\n    static createService(connectInfo, io) {\n        return new RGBLight(connectInfo, io);\n    }\n\n    /**\n     * Set the RGB color - ignored if mode is not RGB_LIGHT_MODE_ABSOLUTE\n     * @param {RGBColor} rgbColor\n     */\n    setColor(rgbColor) {\n        if (this.getRGBMode() === RGBLightMode.RGB_LIGHT_MODE_ABSOLUTE) {\n            this.color = rgbColor;\n\n            this.getIo().writeColor(rgbColor.getRed(), rgbColor.getGreen(), rgbColor.getBlue(), this.getConnectInfo().getConnectId());\n        } else {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Ignoring attempt to set RGB color. It is only supported when RGB is in mode' +\n                                 ' Absolute.');\n            }\n        }\n    }\n\n    /**\n     *\n     * @return {RGBColor} - Returns the RGBColor that was set last. If no RGBColor has been set it returns the\n     * default RGB color (0,0,255)\n     */\n    getColor() {\n        return this.color;\n    }\n\n    /**\n     * Get the default RGB color (red: 0, green: 0, blue: 255)\n     * @return {RGBColor}. Returns the default RGB color (0,0,255)\n     */\n    getDefaultColor() {\n        // We have no reliable way of reading the default color of the Hub, so it is hardcoded here\n        return new RGBColor(0, 0, 255);\n    }\n\n    /**\n     * Get the current color index\n     * @return {*|number}\n     */\n    getColorIndex() {\n        return this.colorIndex;\n    }\n\n    /**\n     * Update the color index for the RGB light. The call is ignored if the RGB light mode is not RGB_LIGHT_MODE_DISCRETE.\n     * @param {number} index - The value to se\n     */\n    setColorIndex(index) {\n        if (this.getRGBMode() === RGBLightMode.RGB_LIGHT_MODE_DISCRETE) {\n            this.colorIndex = index;\n            this.getIo().writeColorIndex(index, this.getConnectInfo().getConnectId());\n        } else {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Ignoring attempt to set RGB color index. It is only supported when RGB is in mode Discrete.');\n            }\n        }\n    }\n\n    /**\n     * Get the default color index\n     * @return {number} - The default color index for the RGB light.\n     */\n    getDefaultColorIndex() {\n        // We have no reliable way of reading the default color of the Hub, so it is hardcoded here\n        return 3;\n    }\n\n    /**\n     * Get the default RGBMode\n     * @return {number} - See {@link RGBLightMode} for values that can be returned\n     */\n    getRGBMode() {\n        return RGBLightMode.fromInteger(this.getInputFormatMode());\n    }\n\n    /**\n     * Update the RGBMode for the RGB light service\n     * @param {number} rgbMode - See {@link RGBLightMode}\n     */\n    setRGBMode(rgbMode) {\n        this.updateCurrentInputFormatWithNewMode(rgbMode);\n    }\n\n    /**\n     * Switch off the RGB light\n     */\n    switchOff() {\n        if (this.getRGBMode() === RGBLightMode.RGB_LIGHT_MODE_ABSOLUTE) {\n            this.setColor(new RGBColor(0, 0, 0));\n        } else if (this.getRGBMode() === RGBLightMode.RGB_LIGHT_MODE_DISCRETE) {\n            this.setColorIndex(0);\n        } else {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn(`Cannot switch off RGB - unknown mode: ${this.getInputFormatMode()}`);\n            }\n        }\n    }\n\n    /**\n     * Set the RGBLight to its default color\n     */\n    switchToDefaultColor() {\n        if (this.getRGBMode() === RGBLightMode.RGB_LIGHT_MODE_ABSOLUTE) {\n            this.setColor(this.getDefaultColor());\n        } else if (this.getRGBMode() === RGBLightMode.RGB_LIGHT_MODE_DISCRETE) {\n            this.setColorIndex(this.getDefaultColorIndex());\n        } else {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn(`Cannot switch to default color - unknown mode: ${this.getInputFormatMode()}`);\n            }\n        }\n    }\n\n    /**\n     * @ignore\n     * @param valueData\n     */\n    handleUpdatedValueData(valueData = null) {\n        if (this.getRGBMode() === RGBLightMode.RGB_LIGHT_MODE_ABSOLUTE) {\n            const oldColor = this.color;\n            this.color = this.colorFromData(valueData);\n\n            super.handleUpdatedValueData(valueData);\n            this.callbackHelper.performRGBLightDidUpdateValueCallback(this, oldColor, this.color);\n        } else if (this.getRGBMode() === RGBLightMode.RGB_LIGHT_MODE_DISCRETE) {\n            const oldColorIndex = this.colorIndex;\n            this.colorIndex = this.getIntegerFromData(valueData);\n\n            super.handleUpdatedValueData(valueData);\n            this.callbackHelper.performRGBLightDidUpdateColorIndexCallback(this, oldColorIndex, this.colorIndex);\n        } else {\n            LDSDKLogger.error(`Cannot handle response for RGB in unknown mode ${this.getInputFormatMode()}`);\n        }\n    }\n\n    /**\n     * @ignore\n     * Get the RGBColor from the ArrayBuffer data\n     * @param {ArrayBuffer} data\n     * @return {RGBColor|null} Returns an RGBColor representing the color specified in the ArrayBuffer. If the number of bytes in the buffer is different from 3 - null is returned.\n     */\n    colorFromData(data) {\n        if (data.byteLength === 3) {\n            const dataBuffer = new DataView(data);\n            return new RGBColor(dataBuffer.getUint8(0), dataBuffer.getUint8(1), dataBuffer.getUint8(2));\n        }\n\n        LDSDKLogger.error(`Cannot create color from data: ${new Uint8Array(data)} `);\n        return null;\n    }\n\n    /**\n     * @ignore\n     * Populate the valid data formats for the RGB Light.\n     */\n    addValidDataFormats() {\n        this.addValidDataFormat(DataFormat.create('Discrete', RGBLightMode.RGB_LIGHT_MODE_DISCRETE, InputFormatUnit.RAW, 1, 1));\n        this.addValidDataFormat(DataFormat.create('Discrete', RGBLightMode.RGB_LIGHT_MODE_DISCRETE, InputFormatUnit.PERCENTAGE, 1, 1));\n        this.addValidDataFormat(DataFormat.create('Discrete', RGBLightMode.RGB_LIGHT_MODE_DISCRETE, InputFormatUnit.SI, 4, 1));\n\n        this.addValidDataFormat(DataFormat.create('Absolute', RGBLightMode.RGB_LIGHT_MODE_ABSOLUTE, InputFormatUnit.RAW, 1, 3));\n        this.addValidDataFormat(DataFormat.create('Absolute', RGBLightMode.RGB_LIGHT_MODE_ABSOLUTE, InputFormatUnit.PERCENTAGE, 1, 3));\n        this.addValidDataFormat(DataFormat.create('Absolute', RGBLightMode.RGB_LIGHT_MODE_ABSOLUTE, InputFormatUnit.SI, 4, 3));\n    }\n\n    /**\n     * Get the simple service representation\n     * @return {{deviceId: string, isInternalService: boolean, serviceName: string, serviceData: ({}|*), numberValue: number, updateInputFormat: simpleService.updateInputFormat, handleUpdatedInputFormat: simpleService.handleUpdatedInputFormat}}\n     */\n    getSimpleService() {\n        const superService = super.getSimpleService();\n        const self = this;\n        superService['setRGBMode'] = function (rgbMode) {\n            self.setRGBMode(rgbMode);\n        };\n        superService['setColor'] = function (rgbColor) {\n            self.setColor(rgbColor);\n        };\n        superService['setColorIndex'] = function (index) {\n            self.setColorIndex(index);\n        };\n        superService['switchOff'] = function () {\n            self.switchOff();\n        };\n        superService['switchToDefaultColor'] = function () {\n            self.switchToDefaultColor();\n        };\n        return superService;\n    }\n\n    /**\n     * Get the simple service data for use in the service callback handler\n     * @return {{rgbMode: {RGBLightMode|number}, color: RGBColor, defaultColor: RGBColor, colorIndex: number, defaultColorIndex: number}}\n     */\n    getSimpleServiceData() {\n        return {\n            rgbMode: this.getRGBMode(),\n            color: this.getColor(),\n            defaultColor: this.getDefaultColor(),\n            colorIndex: this.getColorIndex(),\n            defaultColorIndex: this.getDefaultColorIndex()\n        };\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/services/RGBLight.js","/**\n * Created by frj on 11/02/16.\n */\n\n// 'use strict';\nimport LegoService from './LegoService';\nimport LDSDKLogger from '../../helpers/LDSDKLogger';\n\n/**\n *\n * @type {object} MotorDirection enum\n * @property {number} MOTOR_DIRECTION_DRIFTING - Drifting (Floating)\n * @property {number} MOTOR_DIRECTION_LEFT - Running left\n * @property {number} MOTOR_DIRECTION_RIGHT - Running right\n * @property {number} MOTOR_DIRECTION_BRAKING - Braking\n */\nexport const MotorDirection = {\n\n    /**\n     * Drifting (Floating)\n     */\n    MOTOR_DIRECTION_DRIFTING: 0,\n\n    /**\n     * Running left\n     */\n    MOTOR_DIRECTION_LEFT: 1,\n\n    /**\n     * Running right\n     */\n    MOTOR_DIRECTION_RIGHT: 2,\n\n    /**\n     * Brake\n     */\n    MOTOR_DIRECTION_BRAKING: 3,\n\n    /**\n     * Helper for getting the enum  - if the value is not one of the supported values - MOTOR_DIRECTION_DRIFTING is\n     * returned\n     * @param {number} value\n     * @return {number}\n     */\n    fromInteger: function(value) {\n        switch (parseInt(value)) {\n            case this.MOTOR_DIRECTION_DRIFTING:\n                return this.MOTOR_DIRECTION_DRIFTING;\n            case this.MOTOR_DIRECTION_LEFT:\n                return this.MOTOR_DIRECTION_LEFT;\n            case this.MOTOR_DIRECTION_RIGHT:\n                return this.MOTOR_DIRECTION_RIGHT;\n            case this.MOTOR_DIRECTION_BRAKING:\n                return this.MOTOR_DIRECTION_BRAKING;\n            default:\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn(`Reached default case when trying to determine MotorDirection for value: ${value} direction set to ${this.MOTOR_DIRECTION_DRIFTING}`);\n                }\n                return this.MOTOR_DIRECTION_DRIFTING;\n        }\n    }\n};\n\n\n/**\n * The SimpleMotor can be used for controlling a motor connected to the hub.\n *\n * Note that there will be one instance of the SimpleMotor per connected motor.\n */\nexport default class SimpleMotor extends LegoService {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    static MOTOR_MIN_SPEED = 1;\n    /**\n     * @private\n     * @type {number}\n     */\n    static MOTOR_MAX_SPEED = 100;\n    /**\n     * @private\n     * @type {number}\n     */\n    static MOTOR_POWER_DRIFT = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    static MOTOR_POWER_BRAKE = 127;\n    // Only send values in the range 35-100.\n    // An offset is needed as values below 35 is not enough power to actually make the motor turn.\n    /**\n     * @private\n     * @type {number}\n     */\n    static MOTOR_POWER_OFFSET = 35;\n    /**\n     * @private\n     * @type {string}\n     */\n    static SERVICE_MOTOR_NAME = 'Motor';\n\n    /**\n     * @ignore\n     * @param {ConnectInfo} connectInfo\n     * @param {BluetoothIO} io\n     */\n    constructor(connectInfo, io) {\n        super(connectInfo, io);\n        this.mostRecentSendPower = SimpleMotor.MOTOR_POWER_BRAKE;\n    }\n\n    /**\n     * Get the service name of the SimpleMotor service\n     * @return {string}\n     */\n    getServiceName() {\n        return SimpleMotor.SERVICE_MOTOR_NAME;\n    }\n\n    /**\n     * Get the current motor power\n     * @return {number}\n     */\n    getPower() {\n        if (this.isBraking() || this.isDrifting()) {\n            return 0;\n        }\n        return Math.abs(this.mostRecentSendPower);\n    }\n\n    /**\n     * Get the direction the motor is rotating\n     * @return {number|*} - See {@link MotorDirection} for the valid values\n     */\n    getDirection() {\n        return this.getDirectionForPower(this.mostRecentSendPower);\n    }\n\n    /**\n     * Return if the motor is braking\n     * @return {boolean} - True if the motor is braking, false otherwise\n     */\n    isBraking() {\n        return this.mostRecentSendPower === SimpleMotor.MOTOR_POWER_BRAKE;\n    }\n\n    /**\n     * Return if the motor is drifting\n     * @return {boolean} - True if the motor is drifting, false otherwise\n     */\n    isDrifting() {\n        return this.mostRecentSendPower === SimpleMotor.MOTOR_POWER_DRIFT;\n    }\n\n    /**\n     * Set the motor power and run it in the specified direction\n     * @param {number} direction - See {@link MotorDirection} for the valid values\n     * @param {number} power - A value between 1 and 100 - the higher the value the faster the motor turns.\n     */\n    run(direction, power) {\n        const checkedPower = Math.min(Math.abs(Math.round(power)), SimpleMotor.MOTOR_MAX_SPEED);\n        if (checkedPower === SimpleMotor.MOTOR_POWER_DRIFT) {\n            this.drift();\n        } else {\n            this.sendPower(this.convertUnsignedMotorPowerToSigned(checkedPower, direction));\n        }\n    }\n\n    /**\n     * Stop the motor\n     */\n    brake() {\n        this.sendPower(SimpleMotor.MOTOR_POWER_BRAKE);\n    }\n\n    /**\n     * Make the motor drift\n     */\n    drift() {\n        this.sendPower(SimpleMotor.MOTOR_POWER_DRIFT);\n    }\n\n    /**\n     * @ignore\n     * Set the motor power directly\n     *\n     * @param {number} power - If power === SimpleMotor.MOTOR_POWER_BRAKE (127) or power === SimpleMotor.MOTOR_POWER_DRIFT (0), the motor will stop. If power is a positive int the motor will rotate to the right, if negative it will rotate left.\n     */\n    sendPower(power) {\n        if (this.mostRecentSendPower === power) {\n            // LECQA-91: To prevent overloading the hub with writeMotorPower requests in a loop sending the same value\n            // continously\n            return;\n        }\n        const directionForPower = this.getDirectionForPower(power);\n        let outputCommand;\n        if (power === SimpleMotor.MOTOR_POWER_BRAKE || power === SimpleMotor.MOTOR_POWER_DRIFT) {\n            // Brake and Float should not be affected by the offset\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info(`SimpleMotor :: this.io.writeMotorPower(power, offset, this.connectInfo.getConnectId()) --- power: ${power}, offset: 0, connectId: ${this.connectInfo.getConnectId()} -- stopping motor`);\n            }\n            outputCommand = this.io.writeMotorPower(power, 0, this.connectInfo.getConnectId());\n        } else {\n            const absolutePower = Math.min(Math.abs(Math.round(power)), SimpleMotor.MOTOR_MAX_SPEED);\n            if (MotorDirection.MOTOR_DIRECTION_LEFT === directionForPower) {\n                // Power must be a negative value for the motor to turn counter clockwise\n                power = -absolutePower;\n            } else if (MotorDirection.MOTOR_DIRECTION_RIGHT === directionForPower) {\n                // Power must be a positive value for the motor to turn clockwise\n                power = absolutePower;\n            }\n\n            let offset = 0;\n            try {\n                if (this.getDevice().getDeviceInfo().getFirmwareRevision().getMajorVersion() >= 1) {\n                    // On version 0.x of the firmware, PVM offset is handled in the firmware\n                    offset = SimpleMotor.MOTOR_POWER_OFFSET;\n                }\n            } catch (e) {}\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info(`SimpleMotor :: this.io.writeMotorPower(power, offset, this.connectInfo.getConnectId()) --- power: ${power}, offset: ${offset}, connectId: ${this.connectInfo.getConnectId()}  (absolutePower value: ${absolutePower})`);\n            }\n            outputCommand = this.io.writeMotorPower(power, offset, this.connectInfo.getConnectId());\n        }\n\n        this.mostRecentSendPower = power;\n\n        try {\n            this.handleUpdatedValueData(outputCommand.getData());\n        } catch (e) {\n            LDSDKLogger.error(e);\n        }\n    }\n\n    /**\n     * @ignore\n     *\n     * @param {number} power\n     * @param {number} direction\n     * @return {number}\n     */\n    convertUnsignedMotorPowerToSigned(power, direction) {\n        let resultPower = Math.min(power, SimpleMotor.MOTOR_MAX_SPEED);\n\n        let directionEnum = direction;\n        if (typeof directionEnum === 'number') {\n            directionEnum = MotorDirection.fromInteger(direction);\n        }\n        if (directionEnum === MotorDirection.MOTOR_DIRECTION_LEFT) {\n            resultPower = -resultPower;\n        }\n\n        return resultPower;\n    }\n\n    /**\n     * @ignore\n     *\n     * Get the direction based on the power\n     * @param {number} power - A signed power value\n     * @return {number} direction - One of the MotorDirection values [MOTOR_DIRECTION_DRIFTING, MOTOR_DIRECTION_BRAKING, MOTOR_DIRECTION_RIGHT, MOTOR_DIRECTION_LEFT]\n     */\n    getDirectionForPower(power) {\n        let directionForPower;\n        if (SimpleMotor.MOTOR_POWER_DRIFT === power) {\n            directionForPower = MotorDirection.MOTOR_DIRECTION_DRIFTING;\n        } else if (SimpleMotor.MOTOR_POWER_BRAKE === power) {\n            directionForPower = MotorDirection.MOTOR_DIRECTION_BRAKING;\n        } else if (power > 0) {\n            directionForPower = MotorDirection.MOTOR_DIRECTION_RIGHT;\n        } else if (power < 0) {\n            directionForPower = MotorDirection.MOTOR_DIRECTION_LEFT;\n        } else {\n            directionForPower = MotorDirection.MOTOR_DIRECTION_DRIFTING;\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info(`simpleMotor.getDirectionFromPower --- unsupported power value: ${power} --- returning MOTOR_DIRECTION_DRIFTING: ${directionForPower}`);\n            }\n        }\n        return directionForPower;\n    }\n\n    /*\n        getDefaultInputFormat() {\n            return InputFormat.inputFormat(this.getConnectInfo().getConnectId(), this.getConnectInfo().getType(), 0, 30, InputFormatUnit.SI, true);\n        }\n    */\n\n    /**\n     * Return a simple representation of the service\n     * @return {{deviceId: string, isInternalService: boolean, serviceName: string, serviceData: ({}|*), numberValue: number, updateInputFormat: simpleService.updateInputFormat, handleUpdatedInputFormat: simpleService.handleUpdatedInputFormat}}\n     */\n    getSimpleService() {\n        const superService = super.getSimpleService();\n        const self = this;\n        superService['numberValue'] = this.getPower(); // LECQA-89 and LECQA-90: Use the getPower() value when sending\n        superService['run'] = function (direction, power) {\n            self.run(direction, power);\n        };\n        superService['brake'] = function () {\n            self.brake();\n        };\n        superService['drift'] = function () {\n            self.drift();\n        };\n        return superService;\n    }\n\n    /**\n     * Get the simple service data for use in the service callback handler\n     * @return {{power: number}}\n     */\n    getSimpleServiceData() {\n        return {\n            power: this.getPower()\n        };\n    }\n\n    /**\n     * @ignore\n     * Create an instance of the service\n     * @param {ConnectInfo} connectInfo\n     * @param {BluetoothIO} io\n     * @return {SimpleMotor}\n     */\n    static createService(connectInfo, io) {\n        return new SimpleMotor(connectInfo, io);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/services/SimpleMotor.js","/**\n * Created by frj on 11/02/16.\n */\n\nimport LegoService from './LegoService';\nimport DataFormat from '../DataFormat';\nimport InputFormat, { InputFormatUnit } from '../InputFormat';\nimport LDSDKLogger from '../../helpers/LDSDKLogger';\n\n/**\n *\n * @type {object} TiltSensorDirection\n * @property {number} NEUTRAL\n * @property {number} BACKWARD\n * @property {number} RIGHT\n * @property {number} LEFT\n * @property {number} FORWARD\n * @property {number} UNKNOWN\n *\n */\nexport const TiltSensorDirection = {\n    NEUTRAL: 0,\n\n    BACKWARD: 3,\n\n    RIGHT: 5,\n\n    LEFT: 7,\n\n    FORWARD: 9,\n\n    UNKNOWN: 10,\n\n    /**\n     * Helper for getting the enum  - if the value is not one of the supported values - UNKNOWN is\n     * returned\n     * @param {number} value\n     * @return {number}\n     */\n    fromInteger: function (value) {\n        switch (parseInt(value)) {\n            case 0:\n                return this.NEUTRAL;\n            case 3:\n                return this.BACKWARD;\n            case 5:\n                return this.RIGHT;\n            case 7:\n                return this.LEFT;\n            case 9:\n                return this.FORWARD;\n            case 10:\n            default:\n                LDSDKLogger.error('Reached default case when trying to determine TitlSensorDirection for value: ' + value + ' direction set to ' + this.UNKNOWN);\n                return this.UNKNOWN;\n        }\n    },\n\n    asString: function (value) {\n        switch (parseInt(value)) {\n            case this.NEUTRAL:\n                return 'NEUTRAL';\n            case this.BACKWARD:\n                return 'BACKWARD';\n            case this.RIGHT:\n                return 'RIGHT';\n            case this.LEFT:\n                return 'LEFT';\n            case this.FORWARD:\n                return 'FORWARD';\n            case this.UNKNOWN:\n            default:\n                LDSDKLogger.error('Reached default case when trying to determine TitlSensorDirection for value: ' + value + ' direction set to ' + this.UNKNOWN);\n                return 'UNKNOWN';\n        }\n    }\n\n\n\n};\n\n/**\n *\n * @type {object} TiltSensorMode\n * @property {number} ANGLE - Angle mode\n * @property {number} TILT - Tilt mode\n * @property {number} CRASH - Crash mode\n * @property {number} UNKNOWN - Unknown mode\n */\nexport const TiltSensorMode = {\n    ANGLE: 0,\n\n    TILT: 1,\n\n    CRASH: 2,\n\n    UNKNOWN: 4,\n\n    /**\n     * Helper for getting the enum  - if the value is not one of the supported values - UNKNOWN is\n     * returned\n     * @param {number} value\n     * @return {number}\n     */\n    fromInteger: function (value) {\n        switch (parseInt(value)) {\n            case 0:\n                return this.ANGLE;\n            case 1:\n                return this.TILT;\n            case 2:\n                return this.CRASH;\n            case 3:\n            default:\n                LDSDKLogger.error('Reached default case when trying to determine TiltSensorMode for value: ' + value + ' mode set to ' + this.UNKNOWN);\n                return this.UNKNOWN;\n        }\n    },\n\n    asString: function (value) {\n        switch (parseInt(value)) {\n            case this.ANGLE:\n                return 'ANGLE';\n            case this.TILT:\n                return 'TILT';\n            case this.CRASH:\n                return 'CRASH';\n            case this.UNKNOWN:\n            default:\n                LDSDKLogger.error('Reached default case when trying to determine TiltSensorMode for value: ' + value + ' mode set to ' + this.UNKNOWN);\n                return 'UNKNOWN';\n        }\n    }\n};\n\n/**\n * Value object for holding a tilt sensor angle measurement as (x, y).\n *\n */\nexport class TiltSensorAngle {\n\n    constructor(x = 0.0, y = 0.0) {\n        /**\n         * X value\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * Y value\n         * @type {number}\n         */\n        this.y = y;\n    }\n\n    toString() {\n        return '[' + this.x + ', ' + this.y + ']';\n    }\n}\n\n/**\n * Value object for holding tilt sensor crash counts as (x, y, z)\n */\nexport class TiltSensorCrash {\n    constructor(x = 0, y = 0, z = 0) {\n        /**\n         * Crash count in the X axis\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * Crash count in the Y axis\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * Crash count in the Z axis\n         * @type {number}\n         */\n        this.z = z;\n    }\n\n    toString() {\n        return '[' + this.x + ', ' + this.y + ', ' + this.z + ']';\n    }\n}\n\n/**\n * The tilt sensor can be used for measuring tilt angle and crash count.\n *\n * Note that there will be one instance of the TiltSensor per connected tilt sensor.\n */\nexport default class TiltSensor extends LegoService {\n\n    /**\n     * Create a new TiltSensorAngle instance\n     * @param {number} x\n     * @param {number} y\n     * @return {TiltSensorAngle}\n     */\n    static tiltSensorAngleMake(x, y) {\n        return new TiltSensorAngle(x, y);\n    }\n\n    /**\n     * Construct a new TiltSensorCrash instance\n     * @param {number} x\n     * @param {number} y\n     * @param {number} z\n     * @return {TiltSensorCrash}\n     */\n    static tiltSensorCrashMake(x, y, z) {\n        return new TiltSensorCrash(x, y, z);\n    }\n\n    /**\n     * Check if the two TiltSensorAngles are equal (acceptable diff is 0.01 - see the source code for details)\n     *\n     * @param {TiltSensorAngle} angle1\n     * @param {TiltSensorAngle} angle2\n     * @return {boolean}\n     */\n    static tiltSensorAngleEqualToAngle(angle1, angle2) {\n        const acceptableDiff = 0.01;\n        return (angle1.x - angle2.x < acceptableDiff && angle1.y - angle2.y < acceptableDiff);\n    }\n\n    /**\n     * Check if two crash instances are equal\n     * @param {TiltSensorCrash} crash1\n     * @param {TiltSensorCrash} crash2\n     * @return {boolean}\n     */\n    static tiltSensorCrashEqualToCrash(crash1, crash2) {\n        return (crash1.x === crash2.x && crash1.y === crash2.y && crash1.z === crash2.z);\n    }\n\n\n    /**\n     * @ignore\n     *\n     * @param {ConnectInfo} connectInfo\n     * @param {BluetoothIO} io\n     */\n    constructor(connectInfo, io) {\n        super(connectInfo, io);\n        this.SERVICE_TILT_SENSOR_NAME = 'Tilt Sensor';\n\n        this.addValidDataFormats();\n    }\n\n    /**\n     * Get the service name for the tilt sensor\n     * @return {string}\n     */\n    getServiceName() {\n        return this.SERVICE_TILT_SENSOR_NAME;\n    };\n\n    /**\n     * @ignore\n     * Create a tilt service instance\n     * @param {ConnectInfo} connectInfo\n     * @param {BluetoothIO} io\n     * @return {TiltSensor}\n     */\n    static createService(connectInfo, io) {\n        return new TiltSensor(connectInfo, io);\n    }\n\n    /**\n     * Get the most recent direction reading from the sensor.\n     *\n     * If no direction reading has been received, of if the sensor is not in mode {@link TiltSensorMode.TILT}\n     * the return value of this method will be {@link TiltSensorDirection.UNKNOWN}.\n     * @return {number} - See {@link TiltSensorDirection} for valid values\n     */\n    getDirection() {\n        if (this.getInputFormat() === null || this.getInputFormat().getMode() !== TiltSensorMode.TILT) {\n            return TiltSensorDirection.UNKNOWN;\n        }\n\n        const directionInt = this.getNumberFromValueData();\n        if (directionInt === null) {\n            return TiltSensorDirection.UNKNOWN;\n        }\n\n        if (directionInt < 10) {\n            return TiltSensorDirection.fromInteger(directionInt);\n        } else {\n            return TiltSensorDirection.UNKNOWN;\n        }\n    }\n\n    /**\n     * The most recent angle reading from the sensor. The angle represents the angle the sensor is tilted in the x, y and z-direction.\n     * <p/>\n     * If no angle reading has been received, of if the sensor is not in mode {@link TiltSensorMode#ANGLE}\n     * the return value of this method will be a {@link TiltSensorAngle}\n     * @return {TiltSensorAngle} - The angle of the tilt sensor\n     */\n    getAngle() {\n        if (this.getInputFormat() === null || this.getInputFormat().getMode() !== TiltSensorMode.ANGLE) {\n            return new TiltSensorAngle();\n        }\n\n        const dataSetNumbers = this.getNumbersFromValueDataSet(this.valueData);\n        if (dataSetNumbers !== null && dataSetNumbers.length === 2) {\n            return TiltSensor.tiltSensorAngleMake(dataSetNumbers[0], dataSetNumbers[1]);\n        }\n        return new TiltSensorAngle();\n    }\n\n    /**\n     * The most recent crash reading from the sensor. The value represents the number of times the sensor has been 'bumped' in\n     * the x, y, and z-direction. The value can be reset by sending the {@link LegoService#sendResetStateRequest}.\n     * <p/>\n     * If no angle reading has been received, or if the sensor is not in mode {@link TiltSensorMode#CRASH}\n     * the return value of this method will be a {@link TiltSensorCrash} instance with 0 as value for both x, y and z.\n     * @return {TiltSensorCrash}\n     */\n    getCrash() {\n        if (this.getInputFormat() === null || this.getInputFormat().getMode() !== TiltSensorMode.CRASH) {\n            return new TiltSensorCrash();\n        }\n\n        const dataSetNumbers = this.getNumbersFromValueDataSet(this.valueData);\n        if (dataSetNumbers !== null && dataSetNumbers.length === 3) {\n            return TiltSensor.tiltSensorCrashMake(dataSetNumbers[0] & (255), dataSetNumbers[1] & (255), dataSetNumbers[2] & (255));\n        }\n        return new TiltSensorCrash();\n    }\n\n    /**\n     * Get the current Tilt sensor mode\n     * @return {number} - @see {@link TiltSensorMode}\n     */\n    getTiltSensorMode() {\n        return TiltSensorMode.fromInteger(this.getInputFormatMode());\n    }\n\n    /**\n     * Set the current tilt sensor mode\n     * @param {number} tiltSensorMode - @see {@link TiltSensorMode}\n     */\n    setTiltSensorMode(tiltSensorMode) {\n        this.updateCurrentInputFormatWithNewMode(tiltSensorMode);\n    }\n\n    /**\n     * @ignore\n     * Add the valid data formats for the Tilt sensor\n     */\n    addValidDataFormats() {\n        this.addValidDataFormat(DataFormat.create('Angle', TiltSensorMode.ANGLE, InputFormatUnit.RAW, 1, 2));\n        this.addValidDataFormat(DataFormat.create('Angle', TiltSensorMode.ANGLE, InputFormatUnit.PERCENTAGE, 1, 2));\n        this.addValidDataFormat(DataFormat.create('Angle', TiltSensorMode.ANGLE, InputFormatUnit.SI, 4, 2));\n\n        this.addValidDataFormat(DataFormat.create('Tilt', TiltSensorMode.TILT, InputFormatUnit.RAW, 1, 1));\n        this.addValidDataFormat(DataFormat.create('Tilt', TiltSensorMode.TILT, InputFormatUnit.PERCENTAGE, 1, 1));\n        this.addValidDataFormat(DataFormat.create('Tilt', TiltSensorMode.TILT, InputFormatUnit.SI, 4, 1));\n\n        this.addValidDataFormat(DataFormat.create('Crash', TiltSensorMode.CRASH, InputFormatUnit.RAW, 1, 3));\n        this.addValidDataFormat(DataFormat.create('Crash', TiltSensorMode.CRASH, InputFormatUnit.PERCENTAGE, 1, 3));\n        this.addValidDataFormat(DataFormat.create('Crash', TiltSensorMode.CRASH, InputFormatUnit.SI, 4, 3));\n    }\n\n\n    /**\n     * Get default inputformat for {@link TiltSensor}\n     * @return {InputFormat}\n     */\n    getDefaultInputFormat() {\n        return InputFormat.inputFormat(\n                super.getConnectInfo().getConnectId(),\n                super.getConnectInfo().getType(), // device type 34\n                TiltSensorMode.TILT,\n                1,\n                InputFormatUnit.SI,\n                true);\n    };\n\n    /**\n     * @ignore\n     * Process updated value data as TiltSensor value\n     * @param {ArrayBuffer} valueData\n     */\n    handleUpdatedValueData(valueData = null) {\n        // Remember the old values before calling 'handleUpdatedValueData'\n        const oldDirection = this.getDirection();\n        const oldAngle = this.getAngle();\n        const oldCrash = this.getCrash();\n\n        super.handleUpdatedValueData(valueData);\n\n        const mode = this.getTiltSensorMode();\n        if (mode === TiltSensorMode.TILT) {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.trace(this.getServiceName() + ' TILT :: this.getDirection = ' + this.getDirection());\n            }\n            this.callbackHelper.performDidUpdateTiltDirection(this, oldDirection, this.getDirection());\n        } else if (mode === TiltSensorMode.ANGLE) {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.trace(this.getServiceName() + ' ANGLE :: this.getAngle = ' + this.getAngle());\n            }\n            this.callbackHelper.performDidUpdateTiltAngle(this, oldAngle, this.getAngle());\n        } else if (mode === TiltSensorMode.CRASH) {\n            if (LDSDKLogger.isTraceEnabled()) {\n                LDSDKLogger.trace(this.getServiceName() + ' CRASH :: this.getCrash = ' + this.getCrash());\n            }\n            this.callbackHelper.performDidUpdateTiltCrash(this, oldCrash, this.getCrash());\n        } else {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info(this.getServiceName() + ' unknown mode: '+ mode);\n            }\n        }\n    }\n\n    /**\n     * @ignore\n     */\n    sendDefaultInputFormat() {\n\n    }\n\n    /**\n     * Get the simple representation of the Tilt sensor for use in the service callback handler\n     * @return {{deviceId: string, isInternalService: boolean, serviceName: string, serviceData: ({}|*), numberValue: number, updateInputFormat: simpleService.updateInputFormat, handleUpdatedInputFormat: simpleService.handleUpdatedInputFormat}}\n     */\n    getSimpleService() {\n        const superService = super.getSimpleService();\n        const self = this;\n        superService['setTiltSensorMode'] = function (tiltSensorMode) {\n            self.setTiltSensorMode(tiltSensorMode);\n        };\n        return superService;\n    }\n\n    /**\n     * Get the simple service data representation for use in the service callback handler\n     * @return {{angle: TiltSensorAngle, crash: TiltSensorCrash, direction: TiltSensorDirection, tiltSensorMode: TiltSensorMode}}\n     */\n    getSimpleServiceData() {\n        return {\n            angle: this.getAngle(),\n            crash: this.getCrash(),\n            direction: this.getDirection(),\n            tiltSensorMode: this.getTiltSensorMode()\n        };\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/services/TiltSensor.js","/**\n * Created by frj on 11/02/16.\n */\n\nimport InputFormat, { InputFormatUnit } from '../InputFormat';\nimport LegoService from './LegoService';\n\n/**\n * Service implementation handling voltage readings from the hub\n */\nexport default class VoltageSensor extends LegoService {\n\n    /**\n     * @ignore\n     * @param {ConnectInfo} connectInfo\n     * @param {BluetoothIO} io\n     */\n    constructor(connectInfo, io) {\n        super(connectInfo, io);\n        /**\n         * @private\n         * @type {string}\n         */\n        this.SERVICE_VOLTAGE_SENSOR_NAME = 'Voltage Sensor';\n    }\n\n    /**\n     * Get the service name for VoltageSensor\n     * @return {string}\n     */\n    getServiceName() {\n        return this.SERVICE_VOLTAGE_SENSOR_NAME;\n    }\n\n    /**\n     * Get the default input format for the Voltage Sensor.\n     *\n     * Note: By default notifications are not enabled for the Voltage sensor as the measurements can fluctuate\n     * and cause a lot of BLE traffic. Enable notifications only if you need them.\n     * Use @link {InputFormat.inputFormatBySettingNotificationsEnabled} on the default input format to get an input format\n     * with notifications enabled and then update the input format for the voltage sensor using the {VoltageSensor.updateInputFormat}\n     *\n     * @return {InputFormat}\n     */\n    getDefaultInputFormat() {\n        // Only one available mode for voltage sensor\n        return InputFormat.inputFormat(this.getConnectInfo().getConnectId(), this.getConnectInfo().getType(), 0, 30, InputFormatUnit.SI, false);\n    }\n\n    /**\n     * @ignore\n     * Create a Voltage Sensor instance\n     * @param connectInfo\n     * @param io\n     * @return {VoltageSensor}\n     */\n    static createService(connectInfo, io) {\n        return new VoltageSensor(connectInfo, io);\n    }\n\n    /**\n     * Get the value as milli volts\n     * @return {number} - The voltage in millivolts\n     */\n    getValueAsMilliVolts() {\n        if (this.inputFormat !== null && this.inputFormat.getMode() === 0 && this.inputFormat.getUnit() === InputFormatUnit.SI) {\n            return this.getValueAsFloat();\n        } else {\n            // LDSDKLogger.warn('Can only retrieve milli volts from Voltage Sensor when sensor is in mode 0 and uses SI units');\n            return 0;\n        }\n    }\n\n    /**\n     * @ignore\n     * Handle an updated value from the sensor\n     * @param {ArrayBuffer} valueData\n     */\n    handleUpdatedValueData(valueData = null) {\n        super.handleUpdatedValueData(valueData);\n        this.callbackHelper.performDidUpdateMilliVolts(this, this.getValueAsMilliVolts());\n    }\n\n    /**\n     * Get the simple service data for use in the service callback handler - see also @link {LegoService.getSimpleService}\n     * @return {{valueAsMilliVolts: number}}\n     */\n    getSimpleServiceData() {\n        return {\n            valueAsMilliVolts: this.getValueAsMilliVolts()\n        };\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/services/VoltageSensor.js","/**\n * Created by frj on 19/02/16.\n */\nimport BaseServiceDefinition from './BaseServiceDefinition';\nimport CharacteristicDefinition from './CharacteristicDefinition';\nimport UuidHelper from '../helpers/UuidHelper';\n\nexport default class BatteryServiceDefinition extends BaseServiceDefinition {\n\n    static BATTERY_SERVICE_UUID = '180F';\n    static BATTERY_LEVEL_CHARACTERISTIC_UUID = '2A19';\n\n    static instance = null;\n\n    batteryLevel = -1;\n\n    constructor() {\n        super();\n    }\n\n    static getInstance() {\n        if (BatteryServiceDefinition.instance === null) {\n            BatteryServiceDefinition.instance = new BatteryServiceDefinition();\n            BatteryServiceDefinition.instance.init();\n        }\n        return BatteryServiceDefinition.instance;\n    }\n\n    init() {\n        this.serviceUUID = UuidHelper.getSpecUuid(BatteryServiceDefinition.BATTERY_SERVICE_UUID);\n        this.serviceName = 'BatteryService';\n\n        this.batteryLevel = new CharacteristicDefinition(\n                'InputValues',\n                this,\n                UuidHelper.getSpecUuid(BatteryServiceDefinition.BATTERY_LEVEL_CHARACTERISTIC_UUID),\n                true,\n                0/* (BluetoothHelper.Properties.PROPERTY_NOTIFY.ordinal() |\n                 BluetoothHelper.Properties.PROPERTY_NOTIFY.ordinal()) */,\n                0,\n                0/* BluetoothHelper.Permissions.PERMISSION_READ.ordinal() */);\n\n        this.characteristicDefinitions.add(this.batteryLevel);\n    }\n\n    getBatteryLevel() {\n        return this.batteryLevel;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/service_definitions/BatteryServiceDefinition.js","module.exports = require('./_global').document && document.documentElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_html.js\n// module id = 99\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ie8-dom-define.js\n// module id = 100\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iobject.js\n// module id = 101\n// module chunks = 0","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg){\n  return cof(arg) == 'Array';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-array.js\n// module id = 102\n// module chunks = 0","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-step.js\n// module id = 103\n// module chunks = 0","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys      = require('./_object-keys-internal')\n  , hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){\n  return $keys(O, hiddenKeys);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gopn.js\n// module id = 104\n// module chunks = 0","exports.f = Object.getOwnPropertySymbols;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gops.js\n// module id = 105\n// module chunks = 0","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has         = require('./_has')\n  , toObject    = require('./_to-object')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function(O){\n  O = toObject(O);\n  if(has(O, IE_PROTO))return O[IE_PROTO];\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gpo.js\n// module id = 106\n// module chunks = 0","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-keys-internal.js\n// module id = 107\n// module chunks = 0","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export')\n  , core    = require('./_core')\n  , fails   = require('./_fails');\nmodule.exports = function(KEY, exec){\n  var fn  = (core.Object || {})[KEY] || Object[KEY]\n    , exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-sap.js\n// module id = 108\n// module chunks = 0","module.exports = require('./_hide');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_redefine.js\n// module id = 109\n// module chunks = 0","'use strict';\nvar global      = require('./_global')\n  , core        = require('./_core')\n  , dP          = require('./_object-dp')\n  , DESCRIPTORS = require('./_descriptors')\n  , SPECIES     = require('./_wks')('species');\n\nmodule.exports = function(KEY){\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_set-species.js\n// module id = 110\n// module chunks = 0","var ctx                = require('./_ctx')\n  , invoke             = require('./_invoke')\n  , html               = require('./_html')\n  , cel                = require('./_dom-create')\n  , global             = require('./_global')\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nvar run = function(){\n  var id = +this;\n  if(queue.hasOwnProperty(id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function(event){\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!setTask || !clearTask){\n  setTask = function setImmediate(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(require('./_cof')(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if(MessageChannel){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n    defer = function(id){\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if(ONREADYSTATECHANGE in cel('script')){\n    defer = function(id){\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_task.js\n// module id = 111\n// module chunks = 0","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.get-iterator-method.js\n// module id = 112\n// module chunks = 0","module.exports = function arraybufferEqual (buf1, buf2) {\n  if (buf1 === buf2) {\n    return true;\n  }\n\n  if (buf1.byteLength !== buf2.byteLength) {\n    return false;\n  }\n\n  var view1 = new DataView(buf1);\n  var view2 = new DataView(buf2);\n\n  var i = buf1.byteLength;\n  while (i--) {\n    if (view1.getUint8(i) !== view2.getUint8(i)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/arraybuffer-equal/index.js\n// module id = 113\n// module chunks = 0","import IOServiceDefinition from '../service_definitions/IOServiceDefinition';\nimport BluetoothHelper from '../helpers/BluetoothHelper';\nimport LDSDKLogger from '../helpers/LDSDKLogger';\nimport ByteUtils from '../helpers/ByteUtils';\nimport InputCommand from '../io/InputCommands';\nimport OutputCommand from '../io/OutputCommand';\nimport InputFormat from '../io/InputFormat';\nimport IO from '../io/IO';\nimport StringUtils from '../helpers/StringUtils';\nimport UuidHelper from '../helpers/UuidHelper';\n\n/**\n * Created by frj on 29/02/16.\n */\n\n/**\n * @ignore For internal use\n * The BluetoothIO handles the communication for a specific service connected to the hub\n */\nexport default class BluetoothIO extends IO {\n    service = null;\n\n    inputValueCharacteristic = null;\n    inputFormatCharacteristic = null;\n    inputCommandCharacteristic = null;\n    outputCommandCharacteristic = null;\n\n    serviceDefinition = null;\n\n    /**\n     * @private\n     * @type {Map}\n     */\n    inputFormats = new Map();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    receivedMessagesCounter = 0;\n\n    /**\n     * Create a new BluetoothIO instance, from the service and associatedDevice params.\n     *\n     * @param {NativeService} service\n     * @param {LegoBluetoothDeviceImpl} associatedDevice\n     * @return {BluetoothIO} BluetoothIO instance or null if any of the characteristics for the service are null.\n     */\n    static async bluetoothIO(service, associatedDevice) {\n        if (service === null || service === undefined) {\n            throw new Error('Cannot create BluetoothIO with null service');\n        }\n\n        const serviceDefinition = IOServiceDefinition.getInstance();\n\n        const inputValueCharacteristic = await BluetoothHelper.create(serviceDefinition.getInputValue().getUuid(), service);\n        const inputFormatCharacteristic = await BluetoothHelper.create(serviceDefinition.getInputFormat().getUuid(), service);\n        const inputCommandCharacteristic = await BluetoothHelper.create(serviceDefinition.getInputCommand().getUuid(), service);\n        const outputCommandCharacteristic = await BluetoothHelper.create(serviceDefinition.getOutputCommand().getUuid(), service);\n\n        if (inputValueCharacteristic === null\n                || inputFormatCharacteristic === null\n                || inputCommandCharacteristic === null\n                || outputCommandCharacteristic === null) {\n            LDSDKLogger.error(`IOService missing mandatory characteristic. inputValueCharacteristic: ${StringUtils.getCharacteristicString(inputValueCharacteristic)}, inputFormatCharacteristic: ${StringUtils.getCharacteristicString(inputFormatCharacteristic)}, inputCommandCharacteristic: ${StringUtils.getCharacteristicString(inputCommandCharacteristic)}, outputCommandCharacteristic: ${StringUtils.getCharacteristicString(outputCommandCharacteristic)}`);\n            return null;\n        }\n\n        await associatedDevice.setCharacteristicNotification(inputValueCharacteristic, true);\n        await associatedDevice.setCharacteristicNotification(inputFormatCharacteristic, true);\n\n        return new BluetoothIO(service,\n                associatedDevice,\n                serviceDefinition,\n                inputValueCharacteristic,\n                inputFormatCharacteristic,\n                inputCommandCharacteristic,\n                outputCommandCharacteristic);\n    }\n\n    /**\n     * @ignore\n     * @constructs\n     * @param {NativeService} service\n     * @param {LegoBluetoothDeviceImpl} associatedDevice\n     * @param {IOServiceDefinition} ioServiceDefinition\n     * @param {NativeCharacteristic} inputValueCharacteristic\n     * @param {NativeCharacteristic} inputFormatCharacteristic\n     * @param {NativeCharacteristic} inputCommandCharacteristic\n     * @param {NativeCharacteristic} outputCommandCharacteristic\n     */\n    constructor(service, associatedDevice, ioServiceDefinition, inputValueCharacteristic, inputFormatCharacteristic, inputCommandCharacteristic, outputCommandCharacteristic) {\n        super();\n\n        /**\n         * @private\n         * @type {IOServiceDefinition|null}\n         */\n        this.serviceDefinition = ioServiceDefinition;\n\n        /**\n         * @private\n         * @type {NativeCharacteristic|null}\n         */\n        this.inputValueCharacteristic = inputValueCharacteristic;\n\n        /**\n         * @private\n         * @type {NativeCharacteristic|null}\n         */\n        this.inputFormatCharacteristic = inputFormatCharacteristic;\n\n        /**\n         * @private\n         * @type {NativeCharacteristic|null}\n         */\n        this.inputCommandCharacteristic = inputCommandCharacteristic;\n\n        /**\n         * @private\n         * @type {NativeCharacteristic|null}\n         */\n        this.outputCommandCharacteristic = outputCommandCharacteristic;\n\n        /**\n         * @private\n         * @type {CurrentSensor|GenericService|MotionSensor|PiezoTonePlayer|RGBLight|SimpleMotor|TiltSensor|VoltageSensor|null}\n         */\n        this.service = service;\n\n        /**\n         * @private\n         * @type {LegoBluetoothDeviceImpl}\n         */\n        this.associatedDevice = associatedDevice;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this.receivedMessagesCounter = 0;\n\n    }\n\n    /**\n     * Check if the associated device is connected\n     * @return {boolean}\n     */\n    isDeviceConnected() {\n        return this.associatedDevice.getBluetoothWrapper().isConnected();\n    }\n\n    /**\n     * @ignore\n     * Increments the counter for received messages\n     */\n    incrementReceivedMessages() {\n        this.receivedMessagesCounter++;\n    }\n\n    /**\n     * Get the received message count\n     * @return {number}\n     */\n    getReceivedMessagesCount() {\n        return this.receivedMessagesCounter;\n    }\n\n    /**\n     * Add a write of characteristic to the queue to get the value for the sensor connected to connectId\n     * @param {number} connectId - The connectId of the service we wish to read the value for\n     */\n    readValueForConnectId(connectId) {\n        this.writeInputCommand(InputCommand.commandReadValueForConnectId(connectId));\n    }\n\n    /**\n     * Reset the state for the connectId by sending {0x44, 0x11, 0xAA} to the connected peripheral\n     * @param {number} connectId - The connectId of the device we wish to reset the state for\n     */\n    resetStateForConnectId(connectId) {\n        // Byte sequence sent to sensor to reset any state (for instance, crash-count for tilt sensor)\n        const resetBytes = new Uint8Array([68, 17, 170]); // {0x44, 0x11, 0xAA};\n        this.writeData(resetBytes, connectId);\n    }\n\n    /**\n     * Add a write inputformat command to the queue.\n     * @param {InputFormat} inputFormat - The inputformat to write to the device\n     * @param {number} connectId - The connectId of the device we wish to update the InputFormat for\n     */\n    writeInputFormat(inputFormat, connectId) {\n        this.writeInputCommand(InputCommand.commandWriteInputFormat(inputFormat, connectId));\n    }\n\n    /**\n     * Reads the inputformat for the given connectId by writing a command with InputCommand.COMMAND_TYPE_READ to the hub\n     * @param {number} connectId - The connectId for the device to read the inputFormat for\n     */\n    readInputFormatForConnectId(connectId) {\n        this.writeInputCommand(InputCommand.commandReadInputFormatForConnectId(connectId));\n    }\n\n    /**\n     * Adds a WriteInputCommand operation to the queue\n     * @param {InputCommand} command - Generic input command to write\n     */\n    writeInputCommand(command) {\n        if (this.isDeviceConnected()) {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info('Writing Input Command: ', ByteUtils.bytesToHex(command.getData()));\n            }\n            this.associatedDevice.addWriteOfCharacteristicToQueue(this.inputCommandCharacteristic, command.getData());\n        } else {\n            if (LDSDKLogger.isInfoEnabled()) {\n                LDSDKLogger.info(`isDeviceConnected returns false for ${this.associatedDevice.getAddress()} - not adding write of characteristic to queue`);\n            }\n        }\n    }\n\n    /**\n     * Adds a writeMotorPower command to the queue\n     *\n     * @param {number} power - The speed of rotation\n     * @param {number} offset - An offset to add to the power\n     * @param {number} connectId - The connectId of the motor\n     * @return {OutputCommand}\n     */\n    writeMotorPower(power, offset=0, connectId) {\n        const isPositive = power >= 0;\n        power = Math.abs(power);\n\n        const actualPower = ((100.0 - offset) / 100.0) * power + offset;\n        let actualResultInt = Math.round(actualPower);\n\n        if (!isPositive) {\n            actualResultInt = -actualResultInt;\n        }\n\n        const outputCommand = OutputCommand.commandWriteMotorPower(actualResultInt, connectId);\n        this.writeOutputCommand(outputCommand);\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Writing motor power command: ', new Int8Array(outputCommand.getData()));\n        }\n        return outputCommand;\n    }\n\n    /**\n     * Writes a command to the queue that plays a frequency for a duration\n     *\n     * @param {number} frequency - The frequency in Hz\n     * @param {number} duration - The time that the frequency is playing for - in milliseconds\n     * @param {number} connectId - The connectId of the Piezo\n     */\n    writePiezoToneFrequency(frequency, duration, connectId) {\n        const outputCommand = OutputCommand.commandWritePiezoToneFrequency(frequency, duration, connectId);\n        this.writeOutputCommand(outputCommand);\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Writing piezo tone play command: ', new Uint8Array(outputCommand.getData()));\n        }\n    }\n\n    /**\n     * Writes command to queue that stops playing the piezo tone\n     * @param {number} connectId - The connectId of the Piezo\n     */\n    writePiezoToneStop(connectId) {\n        const outputCommand = OutputCommand.commandWritePiezoToneStopForConnectId(connectId);\n        this.writeOutputCommand(outputCommand);\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Writing piezo tone stop command: ', new Uint8Array(outputCommand.getData()));\n        }\n    }\n\n    /**\n     * Writes command to queue that sets the color of the LED as RGB\n     * @param {number} red - Value for red color (0-255)\n     * @param {number} green - Value for green color (0-255)\n     * @param {number} blue - Value for blue color (0-255)\n     * @param {number} connectId - The connectId of the LED\n     */\n    writeColor(red, green, blue, connectId) {\n        const outputCommand = OutputCommand.commandWriteRGBLight(red, green, blue, connectId);\n        this.writeOutputCommand(outputCommand);\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Writing RGB command: ', new Uint8Array(outputCommand.getData()));\n        }\n    }\n\n    /**\n     * Writes command to queue that sets the color of the LED as colorIndex.\n     * @param {number} index - The color index (0-16), 0 being off\n     * @param {number} connectId - The connectId of the LED\n     */\n    writeColorIndex(index, connectId) {\n        const outputCommand = OutputCommand.commandWriteRGBLightIndex(index, connectId);\n        this.writeOutputCommand(outputCommand);\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Writing RGB Index command: ', new Uint8Array(outputCommand.getData()));\n        }\n    }\n\n    /**\n     * Writes command to queue that writes data directly\n     *\n     * @param {TypedArray} data - Typed array with direct command bytes\n     * @param {number} connectId - The connectId of the device to write the data to\n     */\n    writeData(data, connectId) {\n        const outputCommand = OutputCommand.commandWithDirectWriteThroughData(data, connectId);\n        this.writeOutputCommand(outputCommand);\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug('Direct write with data: ', new Int8Array(outputCommand.getData()));\n        }\n    }\n\n    /**\n     * Adds an output command to the queue for execution.\n     *\n     * @param {OutputCommand} command - The command to execute as a typed array (Int8Array, Uint8Array etc)\n     */\n    writeOutputCommand(command) {\n        if (this.isDeviceConnected()) {\n            this.associatedDevice.addWriteOfCharacteristicToQueue(this.outputCommandCharacteristic,\n                                                                  command.getData());\n        }\n    }\n\n    /**\n     * Receives the response for the write command.\n     *\n     * @param {NativeCharacteristic} characteristic - The characteristic for which the command was executed\n     * @param {string} error - The error param is set if and only if the command failed\n     */\n    handleWriteResponseFromIOServiceWithCharacteristic(characteristic, error) {\n        if (error === null || error === undefined) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Did write data ', new Int8Array(characteristic.value));\n            }\n        } else {\n            LDSDKLogger.error('Failed to write data for characteristic ', JSON.stringify(characteristic));\n        }\n    }\n\n    /**\n     * Handles updated inputformat (after a write of new format), or updated input values for the characteristic.\n     * The characteristic must either be the InputFormatCharacteristic, or the InputValue characteristic, other\n     * characteristics are ignored (logged as a Warning).\n     *\n     * In case of updates to the inputformat, this function will delegate to the @see {@link #handleUpdatedInputFormatData} function\n     *\n     * In case of updates to the inputvalue, this function will delegate to the @see {@link #handleUpdatedInputValueData} function\n     *\n     * @param {NativeCharacteristic} characteristic\n     */\n    handleUpdatedInputServiceCharacteristic(characteristic) {\n        if (characteristic && characteristic !== null) {\n            if (this.serviceDefinition.getInputFormat().matchesCharacteristic(characteristic)) {\n                this.handleUpdatedInputFormatData(characteristic.value);\n            } else if (this.serviceDefinition.getInputValue().matchesCharacteristic(characteristic)) {\n                this.handleUpdatedInputValueData(characteristic.value);\n            } else {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('handleUpdatedInputServiceCharacteristic - No match for characteristic uuid ', UuidHelper.getUuid(characteristic));\n                }\n            }\n        } else {\n            if (LDSDKLogger.isWarnEnabled()) {\n                LDSDKLogger.warn('Illegal argument - handleUpdatedInputServiceCharacteristic requires the characteristic parameter to be set');\n            }\n        }\n\n    }\n\n    /**\n     * Handler method for updates to the input format.\n     * @param {ArrayBuffer} data - The data received from the native characteristic.\n     */\n    handleUpdatedInputFormatData(data) {\n        const format = InputFormat.inputFormatFromBuffer(data);\n        if (format !== null && format !== undefined) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Did receive Input Format: ', format.toString());\n            }\n\n            // If we already have input format with an earlier revision, delete all those\n            // as all known formats must have the same version\n            if (this.inputFormats.size > 0) {\n                const anyFormat = this.inputFormats.values().next().value;\n                if (anyFormat.getRevision() !== format.getRevision()) {\n                    this.inputFormats.clear();\n                }\n            }\n\n            this.inputFormats.set(format.getConnectId(), format);\n\n            if (this.ioCallbackHelper) {\n                this.ioCallbackHelper.performDidReceiveInputFormatCallback(this, format);\n            } else {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('No this.ioCallbackHelper set in ', this.constructor.name, ' unable to notify performDidReceiveInputFormatCallback');\n                }\n            }\n\n        }\n    }\n\n    /**\n     * This function should not be called by clients.\n     *\n     * It is called by the device characteristic listener, parses the received data as specified in the InputFormat\n     * for the IO device and finally forwards the parsed data to the IoCallbackHelper.\n     *\n     * If no InputFormat has yet been registered for this IO device, a call to @see {@link #readInputFormatForConnectId}\n     * is performed and this function resolves without processing the received data any further.\n     *\n     * If an inputformat for the IO device is found the data is parsed and subsequently a Map is created and finally\n     *  once the entire payload has been parsed the Map is sent as argument to @see {@link IoCallbackHelper#performDidReceiveValueDataCallback}\n     *\n     * @param {ArrayBuffer} data The data received in the notification.\n     * @return {Promise} The promise resolves\n     */\n    handleUpdatedInputValueData(data) { // NOTE: This can be called very frequently and exhaust the resources\n        // setTimeout(() => {\n        if (typeof data === 'undefined') {\n            return Promise.resolve();\n        }\n        this.incrementReceivedMessages();\n        return new Promise((resolve, reject) => {\n            try {\n                const dataBuffer = new DataView(data);\n\n                let offset = 0;\n                const valueFormatRevision = dataBuffer.getUint8(offset++);\n\n                let hasMoreValues = true;\n                const idToValue = new Map();\n\n                while (hasMoreValues) {\n                    const valueConnectId = dataBuffer.getUint8(offset++);\n                    if (this.inputFormats.size === 0) {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('Cannot parse value - has not yet received any Input Format from device');\n                        }\n                        this.readInputFormatForConnectId(valueConnectId); // HUB is sending data, so it must have an Input\n                        // Format registered\n                        return resolve();\n                    }\n\n                    const format = this.inputFormats.get(valueConnectId);\n                    if (format === null || format === undefined) {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('No known Input Format for input with Connect ID ', valueConnectId);\n                        }\n                        return resolve();\n                    }\n\n                    if (format.getRevision() !== valueFormatRevision) {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug(`Format revision ${valueFormatRevision} in received value does not match last received Input Format revision ${format.getRevision()}`);\n                        }\n                        this.readInputFormatForConnectId(valueConnectId); // HUB is sending data, so it must have an Input Format\n                        // registered\n                        return resolve();\n                    }\n\n                    const payload = dataBuffer.buffer.slice(offset, offset + format.getNumberOfBytes());\n                    offset += format.getNumberOfBytes();\n\n                    idToValue.set(valueConnectId, payload);\n\n                    if (offset >= dataBuffer.byteLength) {\n                        hasMoreValues = false;\n                    }\n                }\n\n                if (this.ioCallbackHelper) {\n                    // LDSDKLogger.warn(`this.ioCallbackHelper.performDidReceiveValueDataCallback called with idToValue map of size: ${idToValue.size}`);\n                    this.ioCallbackHelper.performDidReceiveValueDataCallback(this, idToValue);\n                } else {\n                    if (LDSDKLogger.isWarnEnabled()) {\n                        LDSDKLogger.warn('No this.ioCallbackHelper set in ', this.constructor.name, ' unable to notify performDidReceiveValueDataCallback');\n                    }\n                }\n                return resolve();\n            } catch (error) {\n                return reject(error);\n            }\n        });\n\n        // }, 5);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/bluetooth/BluetoothIO.js","import arraybufferEqual from 'arraybuffer-equal';\n\nexport default class ArrayHelper {\n\n    /**\n     * @param {ArrayBuffer}\n     * @param {ArrayBuffer}\n     *\n     * @return {boolean}\n     */\n    static isArrayBuffersEqual(buffer1 = null, buffer2 = null) {\n        if (buffer1 === null && buffer2 === null) {\n            return true;\n        }\n\n        if ((buffer1 === null && buffer2 !== null) || (buffer1 !== null && buffer2 === null)) {\n            return false;\n        }\n\n        return arraybufferEqual(buffer1, buffer2);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/ArrayHelper.js","/**\n * Created by frj on 20/02/16.\n */\n\n/**\n * @ignore Internal use only\n */\nexport default class ByteUtils {\n\n    /**\n     * Convert a hex string into a byte array\n     * @param hex\n     * @returns {Array}\n     */\n    static hexToBytes(hex) {\n        const bytes = [];\n        for (let c = 0; c < hex.length; c += 2) {\n            bytes.push(parseInt(hex.substr(c, 2), 16));\n        }\n        return bytes;\n    }\n\n    /**\n     * Convert a byte array into a hex string\n     *\n     * @param bytes\n     * @returns {string}\n     */\n    static bytesToHex(bytes) {\n        const hex = [];\n        for (let i = 0; i < bytes.length; i++) {\n            hex.push((bytes[i] >>> 4).toString(16));\n            hex.push((bytes[i] & 0xF).toString(16));\n        }\n        return hex.join('');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/ByteUtils.js","import UuidHelper from './UuidHelper';\nimport DeviceInfoServiceDefinition from '../service_definitions/DeviceInfoServiceDefinition';\nimport BluetoothServiceDefinition from '../service_definitions/BluetoothServiceDefinition';\nimport StringUtils from '../helpers/StringUtils';\nimport DeviceServiceDefinition from '../service_definitions/DeviceServiceDefinition';\nimport IOServiceDefinition from '../service_definitions/IOServiceDefinition';\nimport IdHelper from './IdHelper';\nimport LDSDKLogger from './LDSDKLogger';\n\n/**\n * Created by frj on 28/02/16.\n */\n/**\n * @ignore Internal use only\n */\nfunction getService(deviceAddress, uuid) {\n    const service = {};\n    service.deviceAddress = deviceAddress;\n    service.uuid = uuid;\n    service.isPrimary = true;\n    service.instanceId = IdHelper.generateID();\n    return service;\n}\n\n/**\n * @ignore Internal use only\n */\nfunction getCharacteristic(uuid, value = null) {\n    const characteristic = {};\n    characteristic.properties = [];\n    characteristic.uuid = uuid;\n    characteristic.instanceId = uuid;\n    if (value !== null) {\n        characteristic.properties.push('write');\n        characteristic.value = value;\n    } else {\n        characteristic.properties.push('read');\n        characteristic.properties.push('notify');\n    }\n    characteristic.service = getService('fooaddress');\n    return characteristic;\n}\n\nglobal.chrome = global.chrome || {};\nglobal.chrome.runtime = global.chrome.runtime || {};\nglobal.chrome.runtime.lastError = undefined;\nglobal.chrome.bluetooth = global.chrome.bluetooth || {\n\n            getAdapterState: function (cbAdapter) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetooth.getAdapterState invoked');\n                }\n\n                const adapter = {\n                    discovering: true,\n                    powered: true,\n                    available: true\n                };\n                setTimeout(() => {\n                    cbAdapter(adapter);\n                }, 100);\n            },\n\n            startDiscovery: function (callback) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetooth.startDiscovery invoked');\n                }\n\n                setTimeout(() => {\n                    callback();\n                }, 100);\n            },\n            stopDiscovery: function (callback) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetooth.stopDiscovery invoked');\n                }\n\n                setTimeout(() => {\n                    callback();\n                }, 100);\n            },\n\n            getDevices: function (devicesCallback) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetooth.getDevices invoked');\n                }\n\n                const devices = [];\n                setTimeout(() => {\n                    devicesCallback(devices);\n                }, 100);\n            },\n\n            getDevice: function (deviceAddress, deviceCallback) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetooth.getDevice ['+ deviceAddress +'] invoked');\n                }\n\n                setTimeout(() => {\n                    const device = {\n                        address: deviceAddress,\n                        name: deviceAddress.toUpperCase().replace(/:/g, ''),\n                        inquiryRssi: -44,\n                        connecting: false,\n                        connected: false,\n                        connectable: true,\n                        paired: false,\n                        uuids: [DeviceServiceDefinition.getInstance().getServiceUUID()]\n                    };\n                    deviceCallback(device);\n                }, 50);\n            },\n\n            onDeviceAdded: {\n                addListener: function (callback) {\n                    if (LDSDKLogger.isWarnEnabled()) {\n                        LDSDKLogger.warn('ChromeShim: global.chrome.bluetooth.onDeviceAdded.addListener invoked');\n                    }\n\n                    const device = {name: 'hep_1', address: 'AB:CD:DE:FG:12:34'};\n                    setTimeout(() => {\n                        callback(device);\n                    }, 100);\n                }\n            },\n            onDeviceChanged: {\n                addListener: function (callback) {\n                    if (LDSDKLogger.isWarnEnabled()) {\n                        LDSDKLogger.warn('ChromeShim: global.chrome.bluetooth.onDeviceChanged.addListener invoked');\n                    }\n\n                    const device = {name: 'hep_2', address: 'AB:CD:DE:FG:43:21'};\n                    setTimeout(() => {\n                        callback(device);\n                    }, 100);\n                }\n            },\n            onDeviceRemoved: {\n                addListener: function (callback) {\n                    if (LDSDKLogger.isWarnEnabled()) {\n                        LDSDKLogger.warn('ChromeShim: global.chrome.bluetooth.onDeviceRemoved.addListener invoked');\n                    }\n\n                    const device = {name: 'hep_3', address: 'AB:CD:DE:FG:11:22'};\n                    setTimeout(() => {\n                        callback(device);\n                    }, 100);\n                }\n            }\n        };\n\nglobal.chrome.bluetoothLowEnergy = global.chrome.bluetoothLowEnergy || {\n            connect: function (deviceAddress, resultFunc) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetoothLowEnergy.connect ['+ deviceAddress +'] invoked');\n                }\n                setTimeout(() => {\n                    resultFunc();\n                }, 200);\n            },\n\n            disconnect: function (deviceAddress, resultFunc) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetoothLowEnergy.disconnect ['+ deviceAddress +'] invoked');\n                }\n                setTimeout(() => {\n                    resultFunc();\n                }, 200);\n            },\n\n            getServices: function (deviceAddress, resultFunc) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetoothLowEnergy.getServices ['+ deviceAddress +'] invoked');\n                }\n\n                const services = [];\n                services.push({instanceId: '1ABCDEF', uuid: DeviceInfoServiceDefinition.getInstance().getServiceUUID()});\n\n                setTimeout(() => {\n                    resultFunc(services);\n                }, 200);\n            },\n\n            getService: function (serviceInstanceId, resultFunc) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetoothLowEnergy.getService ['+ serviceInstanceId +'] invoked');\n                }\n\n                const service = {};\n                service.instanceId = 'serviceInstanceId';\n                service.uuid = DeviceInfoServiceDefinition.getInstance().getServiceUUID();\n\n                setTimeout(() => {\n                    resultFunc(service);\n                }, 200);\n            },\n\n            getIncludedServices: function(serviceInstanceId, callbackWithCharacteristics) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetoothLowEnergy.getIncludedServices ['+ serviceInstanceId +'] invoked');\n                }\n\n                const characteristics = [];\n                setTimeout(() => {callbackWithCharacteristics(characteristics);}, 100);\n            },\n\n            getCharacteristics: function(serviceInstanceId, callbackWithCharacteristics) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetoothLowEnergy.getCharacteristics ['+ serviceInstanceId +'] invoked');\n                }\n\n                const characteristics = [];\n                if (serviceInstanceId === BluetoothServiceDefinition.deviceInfoServiceDefinition().getServiceUUID()) {\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('In ChromeShim.getCharacteristics - serviceInstanceId === '+ serviceInstanceId +' (deviceInfoServiceDefinition)');\n                    }\n                    characteristics.push(getCharacteristic(UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_FIRMWARE_REVISION_CHARACTERISTIC_UUID)));\n                    characteristics.push(getCharacteristic(UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_HARDWARE_REVISION_CHARACTERISTIC_UUID)));\n                    characteristics.push(getCharacteristic(UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_SOFTWARE_REVISION_CHARACTERISTIC_UUID)));\n                    characteristics.push(getCharacteristic(UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_MANUFACTURER_NAME_CHARACTERISTIC_UUID)));\n                } else if (serviceInstanceId === BluetoothServiceDefinition.deviceServiceDefinition().getServiceUUID()) {\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('In ChromeShim.getCharacteristics - serviceInstanceId === '+ serviceInstanceId +' (deviceServiceDefinition)');\n                    }\n                    characteristics.push(getCharacteristic(UuidHelper.getLegoUuid(DeviceServiceDefinition.HUB_CHARACTERISTIC_NAME_UUID)));\n                    characteristics.push(getCharacteristic(UuidHelper.getLegoUuid(DeviceServiceDefinition.HUB_CHARACTERISTIC_ATTACHED_IO)));\n                    characteristics.push(getCharacteristic(UuidHelper.getLegoUuid(DeviceServiceDefinition.HUB_CHARACTERISTIC_BUTTON_STATE)));\n                    characteristics.push(getCharacteristic(UuidHelper.getLegoUuid(DeviceServiceDefinition.HUB_CHARACTERISTIC_LOW_VOLTAGE_ALERT)));\n                    characteristics.push(getCharacteristic(UuidHelper.getLegoUuid(DeviceServiceDefinition.HUB_CHARACTERISTIC_DISCONNECT)));\n                } else if (serviceInstanceId === BluetoothServiceDefinition.ioServiceDefinition().getServiceUUID()) {\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('In ChromeShim.getCharacteristics - serviceInstanceId === '+ serviceInstanceId +' (ioServiceDefinition)');\n                    }\n                    characteristics.push(getCharacteristic(UuidHelper.getLegoUuid(IOServiceDefinition.CHARACTERISTIC_INPUT_VALUE_UUID)));\n                    characteristics.push(getCharacteristic(UuidHelper.getLegoUuid(IOServiceDefinition.CHARACTERISTIC_INPUT_FORMAT_UUID)));\n                    characteristics.push(getCharacteristic(UuidHelper.getLegoUuid(IOServiceDefinition.CHARACTERISTIC_INPUT_COMMAND_UUID)));\n                    characteristics.push(getCharacteristic(UuidHelper.getLegoUuid(IOServiceDefinition.CHARACTERISTIC_OUTPUT_COMMAND_UUID)));\n                } else if (serviceInstanceId === BluetoothServiceDefinition.batteryServiceDefinition().getServiceUUID()) {\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('In ChromeShim.getCharacteristics - serviceInstanceId === '+ serviceInstanceId +' (batteryServiceDefinition)');\n                    }\n                    characteristics.push(getCharacteristic(UuidHelper.getSpecUuid(BatteryServiceDefinition.BATTERY_LEVEL_CHARACTERISTIC_UUID)));\n                } else {\n                    if (LDSDKLogger.isErrorEnabled()) {\n                        LDSDKLogger.error('*** In ChromeShim.getCharacteristics - Unhandled service instanceId: (chrome.bluetoothLowEnergy.getCharacteristics): ', serviceInstanceId, ' ***');\n                    }\n                }\n\n                setTimeout(() => {\n                    if (callbackWithCharacteristics && callbackWithCharacteristics !== null) {\n                        if (LDSDKLogger.isDebugEnabled()) {\n                            LDSDKLogger.debug('In ChromeShim.getCharacteristics - Calling back - got: ' + characteristics.length + ' characteristics for service instanceId: ' + serviceInstanceId);\n                        }\n                        callbackWithCharacteristics(characteristics);\n                    } else {\n                        LDSDKLogger.error('In ChromeShim.getCharacteristics - The callbackWithCharacteristics argument to chrome.bluetoothLowEnergy.getCharacteristics was not defined - unable to callback with ' + characteristics.length + ' characteristics for service instanceId: ' + serviceInstanceId);\n                    }\n                }, 150);\n            },\n\n            writeCharacteristicValue: function (characteristicIinstanceId,\n                                                buffer,\n                                                replyFunc) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetoothLowEnergy.writeCharacteristicValue ['+ characteristicIinstanceId +'] invoked');\n                }\n\n            },\n\n            readCharacteristicValue: function (characteristicIinstanceId, resultFunc) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetoothLowEnergy.readCharacteristicValue ['+ characteristicIinstanceId +'] invoked');\n                }\n\n                setTimeout(() => {\n                    let characteristic;\n\n                    switch (characteristicIinstanceId) {\n                        case UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_FIRMWARE_REVISION_CHARACTERISTIC_UUID):\n                            characteristic = getCharacteristic(UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_FIRMWARE_REVISION_CHARACTERISTIC_UUID), Uint8Array.from(StringUtils.toUtf8Bytes('1.0.0.0')).buffer);\n                            break;\n                        case UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_HARDWARE_REVISION_CHARACTERISTIC_UUID):\n                            characteristic = getCharacteristic(UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_HARDWARE_REVISION_CHARACTERISTIC_UUID), Uint8Array.from(StringUtils.toUtf8Bytes('2.0.0.0')).buffer);\n                            break;\n                        case UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_SOFTWARE_REVISION_CHARACTERISTIC_UUID):\n                            characteristic = getCharacteristic(UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_SOFTWARE_REVISION_CHARACTERISTIC_UUID), Uint8Array.from(StringUtils.toUtf8Bytes('3.0.0.0')).buffer);\n                            break;\n                        case UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_MANUFACTURER_NAME_CHARACTERISTIC_UUID):\n                            characteristic = getCharacteristic(UuidHelper.getSpecUuid(DeviceInfoServiceDefinition.DEVICE_INFO_MANUFACTURER_NAME_CHARACTERISTIC_UUID), Uint8Array.from(StringUtils.toUtf8Bytes('Trifork')).buffer);\n                            break;\n                        case UuidHelper.getLegoUuid(DeviceServiceDefinition.HUB_CHARACTERISTIC_NAME_UUID):\n                            characteristic = getCharacteristic(UuidHelper.getLegoUuid(DeviceServiceDefinition.HUB_CHARACTERISTIC_NAME_UUID), Uint8Array.from(StringUtils.toUtf8Bytes('Some Hub Name')).buffer);\n                            break;\n\n                        default:\n                            characteristic = getCharacteristic(characteristicIinstanceId, new Uint8Array([0]).buffer);\n                    }\n                    resultFunc(characteristic);\n                }, 100);\n            },\n\n            startCharacteristicNotifications: function (characteristicIinstanceId, resultFunc) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetoothLowEnergy.startCharacteristicNotifications ['+ characteristicIinstanceId +'] invoked');\n                }\n\n                setTimeout(() => {\n                    resultFunc();\n                }, 100);\n            },\n\n            stopCharacteristicNotifications: function (characteristicIinstanceId, resultFunc) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetoothLowEnergy.stopCharacteristicNotifications ['+ characteristicIinstanceId +'] invoked');\n                }\n\n                setTimeout(() => {\n                    resultFunc();\n                }, 100);\n            },\n\n            getDescriptor: function (descriptorUuid, resultFunc) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('ChromeShim: global.chrome.bluetoothLowEnergy.getDescriptor ['+ descriptorUuid +'] invoked');\n                }\n            },\n\n            onCharacteristicValueChanged: {\n                addListener: function(callbackFunc) {\n                    if (LDSDKLogger.isWarnEnabled()) {\n                        LDSDKLogger.warn('ChromeShim: global.chrome.bluetoothLowEnergy.onCharacteristicValueChanged.addListener invoked');\n                    }\n\n                    setTimeout(() => {\n                        const characteristic = getCharacteristic(UuidHelper.getLegoUuid(DeviceServiceDefinition.HUB_CHARACTERISTIC_NAME_UUID));\n                        callbackFunc(characteristic);\n                    }, 200);\n                }\n            },\n\n            onServiceAdded: {\n                addListener: function(callbackFunc) {\n                    if (LDSDKLogger.isWarnEnabled()) {\n                        LDSDKLogger.warn('ChromeShim: global.chrome.bluetoothLowEnergy.onServiceAdded.addListener invoked');\n                    }\n                    setTimeout(() => {\n                        const service = getService('fooaddress', UuidHelper.getLegoUuid('1523'));\n                        callbackFunc(service);\n                    }, 400);\n                }\n            },\n            onServiceChanged: {\n                addListener: function(callbackFunc) {\n                    if (LDSDKLogger.isWarnEnabled()) {\n                        LDSDKLogger.warn('ChromeShim: global.chrome.bluetoothLowEnergy.onServiceChanged.addListener invoked');\n                    }\n\n                    setTimeout(() => {\n                        const service = getService('fooaddress', UuidHelper.getLegoUuid('1523'));\n                        callbackFunc(service);\n                    }, 400);\n                }\n            },\n            onServiceRemoved: {\n                addListener: function(callbackFunc) {\n                    if (LDSDKLogger.isWarnEnabled()) {\n                        LDSDKLogger.warn('ChromeShim: global.chrome.bluetoothLowEnergy.onServiceRemoved.addListener invoked');\n                    }\n\n                    setTimeout(() => {\n                        const service = getService('fooaddress', UuidHelper.getLegoUuid('1523'));\n                        callbackFunc(service);\n                    }, 400);\n                }\n            }\n\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/ChromeShim.js","import LegoDeviceManagerImpl from '../device/LegoDeviceManagerImpl';\nimport LDSDKLogger from './LDSDKLogger';\n\nLDSDKLogger.error('INSERTING DEBUG CALLBACKS - TO BE REMOVED');\nglobal.debugDeviceServices = new Map();\nglobal.startDebugPollingServices = (interval = 4000) => {\n    if (!LDSDKLogger.isWarnEnabled()) {\n        LDSDKLogger.enable(3);\n    }\n    if (!global.hasOwnProperty('debugPollingServicesId')) {\n        global.debugPollingServicesId = setInterval(() => {\n            const allDevices = LegoDeviceManagerImpl.getInstance().allDevices();\n            if (allDevices && Array.isArray(allDevices.simpleList)) {\n                for (let idx = 0; idx < allDevices.simpleList.length; idx++) {\n                    const device = allDevices.simpleList[idx];\n                    if (device.connectState < 3) {\n                        if (global.debugDeviceServices.has(device.deviceId)) {\n                            global.debugDeviceServices.delete(device.deviceId);\n                        }\n                    } else {\n                        if (!global.debugDeviceServices.has(device.deviceId)) {\n                            setTimeout(() => {\n                                chrome.bluetoothLowEnergy.getServices(allDevices.simpleList[idx].deviceId, (services) => {\n                                    if (chrome.runtime.lastError) {\n                                        LDSDKLogger.warn('#1 Failed getServices for ' + device.deviceName + ' [' + device.deviceId + '] - Error: ' + chrome.runtime.lastError.message);\n                                        return;\n                                    }\n                                    if (Array.isArray(services) && services.length > 0) {\n                                        LDSDKLogger.warn('#1 getServices for ' + device.deviceName + ' [' + device.deviceId + '] returned ' + services.length + ' services');\n                                        global.debugDeviceServices.set(device.deviceId, services);\n                                    } else {\n                                        LDSDKLogger.warn('#1 getServices for ' + device.deviceName + ' [' + device.deviceId + '] returned no services');\n                                    }\n                                });\n                            }, 0);\n                        }\n                    }\n                }\n            }\n        }, interval);\n        LDSDKLogger.warn('startDebugPollingServices started polling of getServices with intervalId=' + global.debugPollingServicesId + ' use stopDebugPollingServices to stop it');\n    } else {\n        LDSDKLogger.warn('startDebugPollingServices is already started with intervalId=' + global.debugPollingServicesId);\n    }\n\n};\n\nglobal.stopDebugPollingServices = () => {\n    if (!LDSDKLogger.isWarnEnabled()) {\n        LDSDKLogger.enable(3);\n    }\n    if (global.hasOwnProperty('debugPollingServicesId')) {\n        clearInterval(global.debugPollingServicesId);\n        delete global.debugPollingServicesId;\n        LDSDKLogger.warn('stopDebugPollingServices has stopped intervalId=' + global.debugPollingServicesId);\n    }\n};\n\nglobal.addDebugServiceLister = (prefix='2#') => {\n    if (!LDSDKLogger.isWarnEnabled()) {\n        LDSDKLogger.enable(3);\n    }\n    const listenerAdded = chrome.bluetoothLowEnergy.onServiceAdded.addListener((service) => {\n        const device = LegoDeviceManagerImpl.getInstance().getDevice(service.deviceAddress);\n        LDSDKLogger.warn(prefix + ' - onServiceAdded for ' + device.deviceName + ' [' + device.deviceId + '] - ' + service.uuid);\n    });\n    LDSDKLogger.warn('addDebugServiceLister added \"onServiceAdded\" listener - addListener returned: ', listenerAdded);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/DebugHelper.js","import LDSDKLogger from './LDSDKLogger';\nimport IdHelper from './IdHelper';\n/**\n * Created by frj on 19/02/16.\n */\n\n/**\n * @ignore Internal use only\n */\nexport default class IoCallbackHelper {\n\n    /**\n     * Map of callback listeners\n     * @type {Map<string, LegoService>}\n     */\n    callbackListeners = new Map();\n\n    /**\n     * Register a new service for receiving service value callbacks\n     * @param {LegoService} callback - Any instance object extending LegoService\n     * @return {string} - Returns a Callback id that can be used when unregistering for Io callbacks\n     */\n    registerCallbackListener(service) {\n        this.checkCallbackListener(service);\n\n        const callbackIdKey = 'generatedCallbackId';\n        let callbackId;\n        if (service.hasOwnProperty(callbackIdKey)) {\n            callbackId = service[callbackIdKey];\n            if (!this.callbackListeners.has(callbackId)) {\n                this.callbackListeners.set(callbackId, service);\n            }\n        } else {\n            callbackId = IdHelper.generateID();\n            while(this.callbackListeners.has(callbackId)) {\n                // in case the map already has a key === callbackId we generate a new one\n                callbackId = IdHelper.generateID();\n            }\n            this.callbackListeners.set(callbackId, service);\n        }\n        return callbackId;\n    }\n\n    /**\n     *\n     * @param {string} callbackId - The callback id returned when registering for callbacks\n     * @param {LegoService} service - The service to unregister\n     * @return {boolean} - Returns true if a callback listener was found and unregistered, false otherwise\n     */\n    unregisterCallbackListener(callbackId = null, service = null) {\n        if (callbackId !== null) {\n            if (LDSDKLogger.isDebugEnabled()) {\n                LDSDKLogger.debug('Unregistering callback listener with callbackId: ' + callbackId);\n            }\n            return this.callbackListeners.delete(callbackId);\n        }\n\n        if (service !== null) {\n            for (const [callbackId, callbackListener] of this.callbackListeners.entries()) {\n                if (callbackListener.getConnectInfo().getConnectId() === service.getConnectInfo().getConnectId()) {\n                    if (LDSDKLogger.isDebugEnabled()) {\n                        LDSDKLogger.debug('Service connectId matches callback listener connectId: ' + service.getConnectInfo().getConnectId() + ' - Unregistering callbackId: ' + callbackId);\n                    }\n                    this.unregisterCallbackListener(callbackId);\n                }\n            }\n\n        }\n\n    }\n\n    /**\n     *\n     * @param {LegoService} service\n     * @return {string} callbackId\n     */\n    checkOrRegisterAsCallbackListener(service) {\n        for (const [callbackId, callbackListener] of this.callbackListeners.entries()) {\n            if (callbackListener.getConnectInfo().getConnectId() === service.getConnectInfo().getConnectId()) {\n                if (callbackListener.getConnectInfo().getTypeEnum() === service.getConnectInfo().getTypeEnum()) {\n                    return callbackId; // Found identical connectId and type - no reason for changes\n                } else {\n                    // Different type for the connectId - unregister existing listener\n                    this.unregisterCallbackListener(callbackId);\n                }\n\n            }\n        }\n        return this.registerCallbackListener(service);\n    }\n\n    performDidRequestConnectInfo(io) {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('performDidRequestConnectInfo: ', io);\n        }\n\n        setTimeout(() => {\n            if (this.callbackListeners.size === 0) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('performDidRequestConnectInfo :: No callbacklisteners found - unable' +\n                                     ' to call back didRequestConnectInfo');\n                }\n/*\n                if (io.associatedDevice.cachedListener && io.associatedDevice.cachedListener !== null) {\n                    if (io.associatedDevice.cachedListener.hasOwnProperty('serviceCallbackListener')) {\n                        this.registerCallbackListener(io.associatedDevice.cachedListener.serviceCallbackListener);\n                    }\n                }\n*/\n            }\n\n            for (const callbackListener of this.callbackListeners.values()) {\n                if (callbackListener !== null) {\n                    callbackListener.didRequestConnectInfo(io);\n                }\n            }\n        }, 0);\n    }\n\n    /**\n     *\n     * @param io\n     * @param {Map<>} idToValue\n     */\n    performDidReceiveValueDataCallback(io, idToValue) {\n        setTimeout(() => {\n            if (this.callbackListeners.size === 0) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('performDidReceiveValueDataCallback :: No callbacklisteners found - unable' +\n                                     ' to call back didReceiveValueData');\n                }\n/*\n                if (io.associatedDevice.cachedListener && io.associatedDevice.cachedListener !== null) {\n                    if (io.associatedDevice.cachedListener.hasOwnProperty('serviceCallbackListener')) {\n                        this.registerCallbackListener(io.associatedDevice.cachedListener.serviceCallbackListener);\n                    }\n                }\n*/\n            }\n\n            for (const callbackListener of this.callbackListeners.values()) {\n                if (callbackListener !== null) {\n                    const connectInfo = callbackListener.didRequestConnectInfo(io);\n                    const cachedService = callbackListener.getDevice().getService(connectInfo.getConnectId());\n                    if (cachedService !== null && cachedService.getConnectInfo().getTypeEnum() === connectInfo.getTypeEnum()) {\n                        if (idToValue.has(connectInfo.getConnectId())) {\n                            const value = idToValue.get(connectInfo.getConnectId());\n                            if (value) {\n                                callbackListener.didReceiveValueData(io, value);\n                            }\n\n                        }\n                    }\n                }\n            }\n\n        }, 0);\n    }\n\n    performDidReceiveInputFormatCallback(io, inputFormat) {\n        if (LDSDKLogger.isInfoEnabled()) {\n            LDSDKLogger.info('performDidReceiveInputFormatCallback - inputFormat: ', inputFormat);\n        }\n\n        setTimeout(async () => {\n            if (this.callbackListeners.size === 0) {\n                if (LDSDKLogger.isWarnEnabled()) {\n                    LDSDKLogger.warn('performDidReceiveInputFormatCallback :: No callbacklisteners found - unable' +\n                                      ' to call back didReceiveInputFormat' );\n                }\n/*\n                if (io.associatedDevice.cachedListener && io.associatedDevice.cachedListener !== null) {\n                    if (io.associatedDevice.cachedListener.hasOwnProperty('serviceCallbackListener')) {\n                        this.registerCallbackListener(io.associatedDevice.cachedListener.serviceCallbackListener);\n                    }\n                }\n*/\n\n            }\n            for (const callbackListener of this.callbackListeners.values()) {\n                if (callbackListener !== null) {\n                    const connectInfo = callbackListener.didRequestConnectInfo(io);\n                    const cachedService = callbackListener.getDevice().getService(connectInfo.getConnectId());\n                    if (cachedService !== null && cachedService.getConnectInfo().getTypeEnum() === connectInfo.getTypeEnum()) {\n                        if (inputFormat && inputFormat !== null && (connectInfo.getConnectId() !== inputFormat.getConnectId() || connectInfo.getTypeEnum() !== inputFormat.getType())) {\n                            if (LDSDKLogger.isTraceEnabled()) {\n                                LDSDKLogger.debug('Ignoring input format. The inputformat ' + inputFormat.toString() + 'does not match this service - check that the connectId and/or type matches. Service: ' + callbackListener.getServiceName() + ', ConnectId: ' + connectInfo.getConnectId() + ', Type: ' + connectInfo.getTypeEnum());\n                            }\n                            continue;\n                        }\n                        callbackListener.didReceiveInputFormat(io, inputFormat);\n                    }\n                }\n            }\n        }, 0);\n    }\n\n    checkCallbackListener(callbackListener) {\n        if (callbackListener === null || callbackListener === undefined) {\n            LDSDKLogger.error(`Attempt to add undefined callback listener to ${this.constructor.name} ignored`);\n            return false;\n        }\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/helpers/IoCallbackHelper.js","/**\n * Created by frj on 11/02/16.\n */\n\nimport IoCallbackHelper from '../helpers/IoCallbackHelper';\n\n/**\n * @abstract\n * This is an abstract class not meant to be used directly\n */\nexport default class IO {\n    /**\n     * @private\n     * @type {LegoBluetoothDeviceImpl}\n     */\n    associatedDevice = null;\n\n    /**\n    * @private\n     * @type {IoCallbackHelper}\n     */\n    ioCallbackHelper = new IoCallbackHelper();\n\n    writeInputFormat(newFormat, connectId) {};\n    readInputFormatForConnectId(connectId) {};\n    // writeMotorPower(power, connectId) {};\n    writeMotorPower(power, offset, connectId) {};\n    writePiezoToneFrequency(frequency, duration, connectId) {};\n    writePiezoToneStop(connectId) {};\n    writeColor(red, green, blue, connectId) {};\n    writeColorIndex(index, connectId) {};\n    writeData(dataBuffer, connectId) {};\n    readValueForConnectId(connectId) {};\n    resetStateForConnectId(connectId) {};\n\n    /**\n     *\n     * @return {IoCallbackHelper}\n     */\n    getCallbackHelper() {\n        return this.ioCallbackHelper;\n    }\n\n    /**\n     * Register a callback listener\n     *\n     * @param {LegoService} ioCallbackListener\n     * @return {string}\n     */\n    registerCallbackListener(ioCallbackListener) {\n        if (ioCallbackListener === null || ioCallbackListener === undefined) {\n            throw new Error('null cannot be registered as a callbacklistener');\n        }\n        return this.getCallbackHelper().checkOrRegisterAsCallbackListener(ioCallbackListener);\n    }\n\n    /**\n     * Unregister the callback listener\n     * @param ioCallbackListener\n     * @return {*}\n     */\n    unregisterCallbackListener(ioCallbackListener) {\n        if (ioCallbackListener === null || ioCallbackListener === undefined) {\n            throw new Error('null cannot be unregistered as a callbacklistener');\n        }\n        return this.getCallbackHelper().unregisterIOCallbackListener(ioCallbackListener);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/IO.js","import IdHelper from '../../helpers/IdHelper';\nimport LDSDKLogger from '../../helpers/LDSDKLogger';\n/**\n * Created by frj on 01/03/16.\n */\n\n/**\n * The LEGO Service Callbackhelper is used for registering and holding service listeners and for notifying the service listeners about\n * value changes and updated input formats.\n */\nexport default class LegoServiceCallbackHelper {\n    /**\n     * @private\n     * @type {Map<string, object>}\n     */\n    callbackListeners = new Map();\n\n    /**\n     * Register the callback as a listener to be notified when the service input format or any of its values changes.\n     * @param {{didUpdateInputFormat: function, didUpdateValueData: function, didUpdateDistance: function, didUpdateCount: function, didReadInitialColor: function, didUpdateRGBValue: function, didUpdateRGBColorIndex: function, didUpdateDirection: function, didUpdateAngle: function, didUpdateCrash: function, didUpdateMilliVolts: function, didUpdateMilliAmps: function}} callback - All the functions that can be called back are optional. If they don't exist the callback helper will just skip that notification.\n     * @return {string} - A unique id for the registered listener. The id must be used if you need to unregister the listener again.\n     */\n    registerCallbackListener(callback) {\n        this.checkCallbackListener(callback);\n        const callbackIdKey = 'generatedCallbackId';\n        let callbackId;\n\n        if (callback.hasOwnProperty(callbackIdKey)) {\n            callbackId = callback[callbackIdKey];\n            if (!this.callbackListeners.has(callbackId)) {\n                this.callbackListeners.set(callbackId, callback);\n            }\n        } else {\n            callbackId = IdHelper.generateID();\n            while(this.callbackListeners.has(callbackId)) {\n                // in case the map already has a key === callbackId we generate a new one\n                callbackId = IdHelper.generateID();\n            }\n            this.callbackListeners.set(callbackId, callback);\n        }\n\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug(this.constructor.name + '.registerCallbackListener - Id: '+callbackId+', Type: ' + callback.constructor.name + ' callbackListeners size: ' + this.callbackListeners.size);\n        }\n        return callbackId;\n    }\n\n    /**\n     * Unregister a callback to stop receiving callbacks.\n     *\n     * @param {string} callbackId\n     * @return {boolean} Returns true if a callback was unregistered\n     */\n    unregisterCallbackListener(callbackId) {\n        const deleted = this.callbackListeners.delete(callbackId);\n        if (LDSDKLogger.isDebugEnabled()) {\n            LDSDKLogger.debug(this.constructor.name + '.unregisterCallbackListener - Id: ' + callbackId + ' callbackListeners size: ' + this.callbackListeners.size);\n        }\n        return deleted;\n    }\n\n    /**\n     * @ignore\n     * Get all the callback listeners\n     * @return {Iterator.<object>}\n     */\n    getCallbackListeners() {\n        return this.callbackListeners.values();\n    }\n\n    /**\n     * @ignore\n     * @param {LegoService} legoService\n     * @param {InputFormat} oldFormat\n     * @param {InputFormat} inputFormat\n     * @return {Promise} - The promise resolves once the callback listeners have been notified\n     */\n    performDidUpdateInputFormatCallback(legoService, oldFormat, inputFormat) {\n        return new Promise((resolve, reject) => {\n            try {\n                setTimeout(() => {\n                    let previousFormat, currentFormat;\n                    if (oldFormat && oldFormat !== null) {\n                        previousFormat = oldFormat.getSimpleInputFormat();\n                    }\n                    if (inputFormat && inputFormat !== null) {\n                        currentFormat = inputFormat.getSimpleInputFormat();\n                    }\n                    if (this.callbackListeners.size === 0) {\n                        if (LDSDKLogger.isWarnEnabled()) {\n                            LDSDKLogger.warn('No callbacklisteners found on ' + this.constructor.name + ' unable to callback didUpdateInputFormat');\n                        }\n                    }\n\n                    for (const callbackListener of this.callbackListeners.values()) {\n                        if (typeof callbackListener.didUpdateInputFormat === 'function') {\n                            callbackListener.didUpdateInputFormat(legoService.getSimpleService(), previousFormat, currentFormat);\n                        }\n                    }\n                }, 0);\n                return resolve();\n            } catch (err) {\n                return reject(err);\n            }\n        });\n    }\n\n    /**\n     * @ignore\n     * @param {LegoService} legoService\n     * @param {*} oldData\n     * @param {*} valueData\n     * @return {Promise} - The promise resolves once the callback listeners have been notified\n     */\n    performDidUpdateValueDataCallback(legoService, oldData, valueData) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    const simpleService = legoService.getSimpleService();\n                    if (this.callbackListeners.size === 0) {\n                        if (LDSDKLogger.isWarnEnabled()) {\n                            LDSDKLogger.warn('No callbacklisteners found on ' + this.constructor.name + ' unable to callback didUpdateValueData');\n                        }\n                    }\n\n                    for (const callbackListener of this.callbackListeners.values()) {\n                        if (typeof callbackListener.didUpdateValueData === 'function') {\n                            callbackListener.didUpdateValueData(simpleService, oldData, valueData);\n                        }\n                    }\n                    return resolve();\n                } catch (err) {\n                    return reject(err);\n                }\n            }, 0);\n        });\n    }\n\n    /**\n     * @ignore\n     * @param {MotionSensor} motionSensor\n     * @param {number} oldDistance\n     * @param {number} newDistance\n     * @return {Promise} - The promise resolves once the callback listeners have been notified\n     */\n    performDidUpdateMotionSensorDistanceCallback(motionSensor, oldDistance, newDistance) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    const simpleService = motionSensor.getSimpleService();\n                    if (this.callbackListeners.size === 0) {\n                        if (LDSDKLogger.isWarnEnabled()) {\n                            LDSDKLogger.warn('No callbacklisteners found on ' + this.constructor.name + ' unable to callback didUpdateDistance');\n                        }\n                    }\n\n                    for (const callbackListener of this.callbackListeners.values()) {\n                        if (typeof callbackListener.didUpdateDistance === 'function') {\n                            callbackListener.didUpdateDistance(simpleService, oldDistance, newDistance);\n                        }\n                    }\n                    return resolve();\n                } catch (err) {\n                    return reject(err);\n                }\n            }, 0);\n        });\n    }\n\n    /**\n     * @ignore\n     * @param {MotionSensor} motionSensor\n     * @param {number} count\n     * @return {Promise} - The promise resolves once the callback listeners have been notified\n     */\n    performDidUpdateMotionSensorCountCallback(motionSensor, count) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    const simpleService = motionSensor.getSimpleService();\n                    if (this.callbackListeners.size === 0) {\n                        if (LDSDKLogger.isWarnEnabled()) {\n                            LDSDKLogger.warn('No callbacklisteners found on ' + this.constructor.name + ' unable to callback didUpdateCount');\n                        }\n                    }\n                    for (const callbackListener of this.callbackListeners.values()) {\n                        if (typeof callbackListener.didUpdateCount === 'function') {\n                            callbackListener.didUpdateCount(simpleService, count);\n                        }\n                    }\n                    return resolve();\n                } catch (err) {\n                    return reject(err);\n                }\n            }, 0);\n        });\n    }\n\n    /**\n     * @ignore\n     * @param {RGBLight} rgbLight\n     * @return {Promise} - The promise resolves once the callback listeners have been notified\n     */\n    performRGBLightDefaultColorInitializedCallback(rgbLight) {\n        return new Promise((resolve, reject) => {\n            try {\n                setTimeout(() => {\n                    const simpleService = rgbLight.getSimpleService();\n                    if (this.callbackListeners.size === 0) {\n                        if (LDSDKLogger.isWarnEnabled()) {\n                            LDSDKLogger.warn('No callbacklisteners found on ' + this.constructor.name + ' unable to callback didReadInitialColor');\n                        }\n                    }\n\n                    for (const callbackListener of this.callbackListeners.values()) {\n                        if (typeof callbackListener.didReadInitialColor === 'function') {\n                            callbackListener.didReadInitialColor(simpleService);\n                        }\n                    }\n                }, 0);\n                return resolve();\n            } catch (err) {\n                return reject(err);\n            }\n        });\n    }\n\n    /**\n     * @ignore\n     * @param {RGBLight} rgbLight\n     * @param {RGBColor} oldColor\n     * @param {RGBColor} color\n     * @return {Promise} - The promise resolves once the callback listeners have been notified\n     */\n    performRGBLightDidUpdateValueCallback(rgbLight, oldColor, color) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    const simpleService = rgbLight.getSimpleService();\n                    if (this.callbackListeners.size === 0) {\n                        if (LDSDKLogger.isWarnEnabled()) {\n                            LDSDKLogger.warn('No callbacklisteners found on ' + this.constructor.name + ' unable to callback didUpdateRGBValue');\n                        }\n                    }\n\n                    for (const callbackListener of this.callbackListeners.values()) {\n                        if (typeof callbackListener.didUpdateRGBValue === 'function') {\n                            callbackListener.didUpdateRGBValue(simpleService, oldColor, color);\n                        }\n                    }\n                    return resolve();\n                } catch (err) {\n                    return reject(err);\n                }\n            }, 0);\n        });\n    }\n\n    /**\n     * @ignore\n     * @param {RGBLight} rgbLight\n     * @param {number} oldColorIndex\n     * @param {number} newColorIndex\n     * @return {Promise} - The promise resolves once the callback listeners have been notified\n     */\n    performRGBLightDidUpdateColorIndexCallback(rgbLight, oldColorIndex, newColorIndex) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    const simpleService = rgbLight.getSimpleService();\n                    if (this.callbackListeners.size === 0) {\n                        if (LDSDKLogger.isWarnEnabled()) {\n                            LDSDKLogger.warn('No callbacklisteners found on ' + this.constructor.name + ' unable to callback didUpdateRGBColorIndex');\n                        }\n                    }\n\n                    for (const callbackListener of this.callbackListeners.values()) {\n                        if (typeof callbackListener.didUpdateRGBColorIndex === 'function') {\n                            callbackListener.didUpdateRGBColorIndex(simpleService, oldColorIndex, newColorIndex);\n                        }\n                    }\n                    return resolve();\n                } catch (err) {\n                    return reject(err);\n                }\n            }, 0);\n        });\n    }\n\n    /**\n     * @ignore\n     * @param {TiltSensor} tiltSensor\n     * @param {TiltSensorDirection} oldDirection\n     * @param {TiltSensorDirection} direction\n     * @return {Promise} - The promise resolves once the callback listeners have been notified\n     */\n    performDidUpdateTiltDirection(tiltSensor, oldDirection, direction) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    const simpleService = tiltSensor.getSimpleService();\n                    if (this.callbackListeners.size === 0) {\n                        if (LDSDKLogger.isWarnEnabled()) {\n                            LDSDKLogger.warn('No callbacklisteners found on ' + this.constructor.name + ' unable to callback didUpdateDirection');\n                        }\n                    }\n\n                    for (const callbackListener of this.callbackListeners.values()) {\n                        if (typeof callbackListener.didUpdateDirection === 'function') {\n                            callbackListener.didUpdateDirection(simpleService, oldDirection, direction);\n                        }\n                    }\n                    return resolve();\n                } catch (err) {\n                    return reject(err);\n                }\n            }, 0);\n        });\n    }\n\n    /**\n     * @ignore\n     * @param {TiltSensor} tiltSensor\n     * @param {TiltSensorAngle} oldAngle\n     * @param {TiltSensorAngle} angle\n     * @return {Promise} - The promise resolves once the callback listeners have been notified\n     */\n    performDidUpdateTiltAngle(tiltSensor, oldAngle, angle) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    const simpleService = tiltSensor.getSimpleService();\n                    if (this.callbackListeners.size === 0) {\n                        if (LDSDKLogger.isWarnEnabled()) {\n                            LDSDKLogger.warn('No callbacklisteners found on ' + this.constructor.name + ' unable to callback didUpdateAngle');\n                        }\n                    }\n\n                    for (const callbackListener of this.callbackListeners.values()) {\n                        if (typeof callbackListener.didUpdateAngle === 'function') {\n                            callbackListener.didUpdateAngle(simpleService, oldAngle, angle);\n                        }\n                    }\n                    return resolve();\n                } catch (err) {\n                    return reject(err);\n                }\n            }, 0);\n        });\n    }\n\n    /**\n     * @ignore\n     * @param {TiltSensor} tiltSensor\n     * @param {TiltSensorCrash} oldCrash\n     * @param {TiltSensorCrash} crash\n     * @return {Promise} - The promise resolves once the callback listeners have been notified\n     */\n    performDidUpdateTiltCrash(tiltSensor, oldCrash, crash) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    const simpleService = tiltSensor.getSimpleService();\n                    if (this.callbackListeners.size === 0) {\n                        if (LDSDKLogger.isWarnEnabled()) {\n                            LDSDKLogger.warn('No callbacklisteners found on ' + this.constructor.name + ' unable to callback didUpdateCrash');\n                        }\n                    }\n\n                    for (const callbackListener of this.callbackListeners.values()) {\n                        if (typeof callbackListener.didUpdateCrash === 'function') {\n                            callbackListener.didUpdateCrash(simpleService, oldCrash, crash);\n                        }\n                    }\n                    return resolve();\n                } catch (err) {\n                    return reject(err);\n                }\n            }, 0);\n        });\n    }\n\n    /**\n     * @ignore\n     * @param {VoltageSensor} voltageSensor\n     * @param {number} milliVolts\n     * @return {Promise} - The promise resolves once the callback listeners have been notified\n     */\n    performDidUpdateMilliVolts(voltageSensor, milliVolts) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    const simpleService = voltageSensor.getSimpleService();\n                    if (this.callbackListeners.size === 0) {\n                        if (LDSDKLogger.isWarnEnabled()) {\n                            LDSDKLogger.warn('No callbacklisteners found on ' + this.constructor.name + ' unable to callback didUpdateMilliVolts');\n                        }\n                    }\n\n                    for (const callbackListener of this.callbackListeners.values()) {\n                        if (typeof callbackListener.didUpdateMilliVolts === 'function') {\n                            callbackListener.didUpdateMilliVolts(simpleService, milliVolts);\n                        }\n                    }\n                    return resolve();\n                } catch (err) {\n                    return reject(err);\n                }\n            }, 0);\n        });\n    }\n\n    /**\n     * @ignore\n     * @param {CurrentSensor} currentSensor\n     * @param {number} milliAmps\n     * @return {Promise} - The promise resolves once the callback listeners have been notified\n     */\n    performDidUpdateMilliAmps(currentSensor, milliAmps) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    const simpleService = currentSensor.getSimpleService();\n                    if (this.callbackListeners.size === 0) {\n                        if (LDSDKLogger.isWarnEnabled()) {\n                            LDSDKLogger.warn('No callbacklisteners found on ' + this.constructor.name + ' unable to callback didUpdateMilliAmps');\n                        }\n                    }\n\n                    for (const callbackListener of this.callbackListeners.values()) {\n                        if (typeof callbackListener.didUpdateMilliAmps === 'function') {\n                            callbackListener.didUpdateMilliAmps(simpleService, milliAmps);\n                        }\n                    }\n                    return resolve();\n                } catch (err) {\n                    return reject(err);\n                }\n            }, 0);\n        });\n    }\n\n    /**\n     * @ignore\n     * @param callbackListener\n     */\n    checkCallbackListener(callbackListener) {\n        if (callbackListener === null || callbackListener === undefined) {\n            if (LDSDKLogger.isErrorEnabled()) {\n                LDSDKLogger.error(`Attempt to add undefined callback listener to ${this.constructor.name} ignored`);\n            }\n            return;\n        }\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/io/services/LegoServiceCallbackHelper.js","/**\n * Created by frj on 17/02/16.\n */\nconst ChromeShim = require('./helpers/ChromeShim');\nconst DebugHelper = require('./helpers/DebugHelper');\nconst StorageHelper = require('./helpers/StorageHelper');\n\nimport ChromeOsBluetoothAdapterWrapper from './bluetooth/ChromeOsBluetoothAdapterWrapper';\nimport ChromeOsBluetoothDeviceWrapper from './bluetooth/ChromeOsBluetoothDeviceWrapper';\nimport LegoBluetoothDeviceImpl from './bluetooth/LegoBluetoothDeviceImpl';\nimport LegoBluetoothDeviceManagerImpl from './bluetooth/LegoBluetoothDeviceManagerImpl';\n\nimport ConnectInfo, { IOType } from './device/ConnectInfo';\nimport DeviceInfo from './device/DeviceInfo';\nimport LegoDeviceImpl, { DeviceCategoryEnum, DeviceFunctionEnum, StateEnum } from './device/LegoDeviceImpl';\nimport Revision  from './device/Revision';\nimport LegoDeviceManager from './device/LegoDeviceManager';\nimport LegoDeviceManagerImpl, {LegoDeviceManagerConfig} from './device/LegoDeviceManagerImpl';\n\nimport LDSDKLogger from './helpers/LDSDKLogger';\n\nimport CurrentSensor from './io/services/CurrentSensor';\nimport GenericService from './io/services/GenericService';\nimport LegoService from './io/services/LegoService';\nimport LegoServiceFactory from './io/services/LegoServiceFactory';\nimport MotionSensor, {MotionSensorMode} from './io/services/MotionSensor';\nimport RGBLight, { RGBColor, RGBLightMode } from './io/services/RGBLight';\nimport SimpleMotor, {MotorDirection} from './io/services/SimpleMotor';\nimport TiltSensor, {TiltSensorDirection, TiltSensorMode, TiltSensorAngle, TiltSensorCrash} from './io/services/TiltSensor';\nimport VoltageSensor from './io/services/VoltageSensor';\nimport PiezoTonePlayer, {PiezoTonePlayerNote} from './io/services/PiezoTonePlayer';\n\nimport DataFormat from './io/DataFormat';\nimport InputCommand from './io/InputCommands';\nimport InputFormat, { InputFormatUnit } from './io/InputFormat';\nimport OutputCommand from './io/OutputCommand';\n\nimport BaseServiceDefinition from './service_definitions/BaseServiceDefinition';\nimport BatteryServiceDefinition from './service_definitions/BatteryServiceDefinition';\nimport BluetoothServiceDefinition from './service_definitions/BluetoothServiceDefinition';\nimport CharacteristicDefinition from './service_definitions/CharacteristicDefinition';\nimport DeviceInfoServiceDefinition from './service_definitions/DeviceInfoServiceDefinition';\nimport DeviceServiceDefinition from './service_definitions/DeviceServiceDefinition';\nimport IOServiceDefinition from './service_definitions/IOServiceDefinition';\n\n\n// Define the exports that need to be accessible for consumers of the library\n// These exports will be available as named exports meaning the user needs to import them like:\n// import { ConnectInfo } from 'smarthub_commlib';\n//\nmodule.exports = {\n    // bluetooth package exports\n    ChromeOsBluetoothAdapterWrapper: ChromeOsBluetoothAdapterWrapper,\n    ChromeOsBluetoothDeviceWrapper: ChromeOsBluetoothDeviceWrapper,\n    LegoBluetoothDeviceImpl: LegoBluetoothDeviceImpl,\n    LegoBluetoothDeviceManagerImpl: LegoBluetoothDeviceManagerImpl,\n\n    // device package exports\n    ConnectInfo: ConnectInfo, IOType: IOType,\n    DeviceInfo: DeviceInfo,\n    LegoDeviceImpl: LegoDeviceImpl, DeviceCategoryEnum: DeviceCategoryEnum, DeviceFunctionEnum: DeviceFunctionEnum, StateEnum: StateEnum,\n    LegoDeviceManager: LegoDeviceManager,\n    LegoDeviceManagerImpl: LegoDeviceManagerImpl,\n    LegoDeviceManagerConfig: LegoDeviceManagerConfig,\n    Revision: Revision,\n\n    // helpers package exports\n    LDSDKLogger: LDSDKLogger,\n    StorageHelper: StorageHelper,\n\n    // io/services package exports\n    CurrentSensor: CurrentSensor,\n    VoltageSensor: VoltageSensor,\n    GenericService: GenericService,\n    LegoService: LegoService,\n    LegoServiceFactory: LegoServiceFactory,\n    MotionSensor: MotionSensor, MotionSensorMode: MotionSensorMode,\n    RGBLight: RGBLight, RGBColor: RGBColor, RGBLightMode: RGBLightMode,\n    SimpleMotor: SimpleMotor, MotorDirection: MotorDirection,\n    TiltSensor: TiltSensor, TiltSensorDirection: TiltSensorDirection, TiltSensorMode: TiltSensorMode, TiltSensorAngle: TiltSensorAngle, TiltSensorCrash: TiltSensorCrash,\n    PiezoTonePlayer: PiezoTonePlayer, PiezoTonePlayerNote: PiezoTonePlayerNote,\n\n    // io package exports\n    DataFormat: DataFormat,\n    InputCommand: InputCommand,\n    InputFormat: InputFormat, InputFormatUnit: InputFormatUnit,\n    OutputCommand: OutputCommand,\n\n    // Service definitions package\n    BaseServiceDefinition: BaseServiceDefinition,\n    BatteryServiceDefinition: BatteryServiceDefinition,\n    BluetoothServiceDefinition: BluetoothServiceDefinition,\n    CharacteristicDefinition: CharacteristicDefinition,\n    DeviceInfoServiceDefinition: DeviceInfoServiceDefinition,\n    DeviceServiceDefinition: DeviceServiceDefinition,\n    IOServiceDefinition: IOServiceDefinition\n\n    // ChromeShim: ChromeShim\n    // DebugHelper: DebugHelper\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/main.js","module.exports = { \"default\": require(\"core-js/library/fn/is-iterable\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/is-iterable.js\n// module id = 123\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/create.js\n// module id = 124\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/define-property.js\n// module id = 125\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/get-own-property-descriptor\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/get-own-property-descriptor.js\n// module id = 126\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/is\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/is.js\n// module id = 127\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/set-prototype-of\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/set-prototype-of.js\n// module id = 128\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/symbol\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/symbol.js\n// module id = 129\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/symbol/iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/symbol/iterator.js\n// module id = 130\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _isIterable2 = require(\"../core-js/is-iterable\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = require(\"../core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/slicedToArray.js\n// module id = 131\n// module chunks = 0","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/get-iterator.js\n// module id = 132\n// module chunks = 0","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/is-iterable.js\n// module id = 133\n// module chunks = 0","var core  = require('../../modules/_core')\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/json/stringify.js\n// module id = 134\n// module chunks = 0","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nrequire('../modules/es7.map.to-json');\nmodule.exports = require('../modules/_core').Map;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/map.js\n// module id = 135\n// module chunks = 0","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D){\n  return $Object.create(P, D);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/create.js\n// module id = 136\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/define-property.js\n// module id = 137\n// module chunks = 0","require('../../modules/es6.object.get-own-property-descriptor');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key){\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/get-own-property-descriptor.js\n// module id = 138\n// module chunks = 0","require('../../modules/es6.object.get-prototype-of');\nmodule.exports = require('../../modules/_core').Object.getPrototypeOf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/get-prototype-of.js\n// module id = 139\n// module chunks = 0","require('../../modules/es6.object.is');\nmodule.exports = require('../../modules/_core').Object.is;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/is.js\n// module id = 140\n// module chunks = 0","require('../../modules/es6.object.set-prototype-of');\nmodule.exports = require('../../modules/_core').Object.setPrototypeOf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/set-prototype-of.js\n// module id = 141\n// module chunks = 0","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nmodule.exports = require('../modules/_core').Promise;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/promise.js\n// module id = 142\n// module chunks = 0","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/symbol/index.js\n// module id = 143\n// module chunks = 0","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/symbol/iterator.js\n// module id = 144\n// module chunks = 0","module.exports = function(){ /* empty */ };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_add-to-unscopables.js\n// module id = 145\n// module chunks = 0","var forOf = require('./_for-of');\n\nmodule.exports = function(iter, ITERATOR){\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_array-from-iterable.js\n// module id = 146\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_array-includes.js\n// module id = 147\n// module chunks = 0","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx      = require('./_ctx')\n  , IObject  = require('./_iobject')\n  , toObject = require('./_to-object')\n  , toLength = require('./_to-length')\n  , asc      = require('./_array-species-create');\nmodule.exports = function(TYPE, $create){\n  var IS_MAP        = TYPE == 1\n    , IS_FILTER     = TYPE == 2\n    , IS_SOME       = TYPE == 3\n    , IS_EVERY      = TYPE == 4\n    , IS_FIND_INDEX = TYPE == 6\n    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX\n    , create        = $create || asc;\n  return function($this, callbackfn, that){\n    var O      = toObject($this)\n      , self   = IObject(O)\n      , f      = ctx(callbackfn, that, 3)\n      , length = toLength(self.length)\n      , index  = 0\n      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined\n      , val, res;\n    for(;length > index; index++)if(NO_HOLES || index in self){\n      val = self[index];\n      res = f(val, index, O);\n      if(TYPE){\n        if(IS_MAP)result[index] = res;            // map\n        else if(res)switch(TYPE){\n          case 3: return true;                    // some\n          case 5: return val;                     // find\n          case 6: return index;                   // findIndex\n          case 2: result.push(val);               // filter\n        } else if(IS_EVERY)return false;          // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_array-methods.js\n// module id = 148\n// module chunks = 0","var isObject = require('./_is-object')\n  , isArray  = require('./_is-array')\n  , SPECIES  = require('./_wks')('species');\n\nmodule.exports = function(original){\n  var C;\n  if(isArray(original)){\n    C = original.constructor;\n    // cross-realm fallback\n    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;\n    if(isObject(C)){\n      C = C[SPECIES];\n      if(C === null)C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_array-species-constructor.js\n// module id = 149\n// module chunks = 0","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function(original, length){\n  return new (speciesConstructor(original))(length);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_array-species-create.js\n// module id = 150\n// module chunks = 0","'use strict';\nvar dP          = require('./_object-dp').f\n  , create      = require('./_object-create')\n  , redefineAll = require('./_redefine-all')\n  , ctx         = require('./_ctx')\n  , anInstance  = require('./_an-instance')\n  , defined     = require('./_defined')\n  , forOf       = require('./_for-of')\n  , $iterDefine = require('./_iter-define')\n  , step        = require('./_iter-step')\n  , setSpecies  = require('./_set-species')\n  , DESCRIPTORS = require('./_descriptors')\n  , fastKey     = require('./_meta').fastKey\n  , SIZE        = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      anInstance(that, C, NAME, '_i');\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        anInstance(this, C, 'forEach');\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)dP(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_collection-strong.js\n// module id = 151\n// module chunks = 0","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof')\n  , from    = require('./_array-from-iterable');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_collection-to-json.js\n// module id = 152\n// module chunks = 0","'use strict';\nvar global         = require('./_global')\n  , $export        = require('./_export')\n  , meta           = require('./_meta')\n  , fails          = require('./_fails')\n  , hide           = require('./_hide')\n  , redefineAll    = require('./_redefine-all')\n  , forOf          = require('./_for-of')\n  , anInstance     = require('./_an-instance')\n  , isObject       = require('./_is-object')\n  , setToStringTag = require('./_set-to-string-tag')\n  , dP             = require('./_object-dp').f\n  , each           = require('./_array-methods')(0)\n  , DESCRIPTORS    = require('./_descriptors');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function(target, iterable){\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base;\n      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','),function(KEY){\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){\n        anInstance(this, C, KEY);\n        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    if('size' in proto)dP(C.prototype, 'size', {\n      get: function(){\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_collection.js\n// module id = 153\n// module chunks = 0","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys')\n  , gOPS    = require('./_object-gops')\n  , pIE     = require('./_object-pie');\nmodule.exports = function(it){\n  var result     = getKeys(it)\n    , getSymbols = gOPS.f;\n  if(getSymbols){\n    var symbols = getSymbols(it)\n      , isEnum  = pIE.f\n      , i       = 0\n      , key;\n    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);\n  } return result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_enum-keys.js\n// module id = 154\n// module chunks = 0","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_invoke.js\n// module id = 155\n// module chunks = 0","// check on default Array iterator\nvar Iterators  = require('./_iterators')\n  , ITERATOR   = require('./_wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-array-iter.js\n// module id = 156\n// module chunks = 0","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-call.js\n// module id = 157\n// module chunks = 0","'use strict';\nvar create         = require('./_object-create')\n  , descriptor     = require('./_property-desc')\n  , setToStringTag = require('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-create.js\n// module id = 158\n// module chunks = 0","var ITERATOR     = require('./_wks')('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ return {done: safe = true}; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-detect.js\n// module id = 159\n// module chunks = 0","var getKeys   = require('./_object-keys')\n  , toIObject = require('./_to-iobject');\nmodule.exports = function(object, el){\n  var O      = toIObject(object)\n    , keys   = getKeys(O)\n    , length = keys.length\n    , index  = 0\n    , key;\n  while(length > index)if(O[key = keys[index++]] === el)return key;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_keyof.js\n// module id = 160\n// module chunks = 0","var global    = require('./_global')\n  , macrotask = require('./_task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = require('./_cof')(process) == 'process';\n\nmodule.exports = function(){\n  var head, last, notify;\n\n  var flush = function(){\n    var parent, fn;\n    if(isNode && (parent = process.domain))parent.exit();\n    while(head){\n      fn   = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch(e){\n        if(head)notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if(parent)parent.enter();\n  };\n\n  // Node.js\n  if(isNode){\n    notify = function(){\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver\n  } else if(Observer){\n    var toggle = true\n      , node   = document.createTextNode('');\n    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n    notify = function(){\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if(Promise && Promise.resolve){\n    var promise = Promise.resolve();\n    notify = function(){\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function(){\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function(fn){\n    var task = {fn: fn, next: undefined};\n    if(last)last.next = task;\n    if(!head){\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_microtask.js\n// module id = 161\n// module chunks = 0","var dP       = require('./_object-dp')\n  , anObject = require('./_an-object')\n  , getKeys  = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties){\n  anObject(O);\n  var keys   = getKeys(Properties)\n    , length = keys.length\n    , i = 0\n    , P;\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-dps.js\n// module id = 162\n// module chunks = 0","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject')\n  , gOPN      = require('./_object-gopn').f\n  , toString  = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function(it){\n  try {\n    return gOPN(it);\n  } catch(e){\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it){\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gopn-ext.js\n// module id = 163\n// module chunks = 0","// 7.2.9 SameValue(x, y)\nmodule.exports = Object.is || function is(x, y){\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_same-value.js\n// module id = 164\n// module chunks = 0","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object')\n  , anObject = require('./_an-object');\nvar check = function(O, proto){\n  anObject(O);\n  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function(test, buggy, set){\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch(e){ buggy = true; }\n      return function setPrototypeOf(O, proto){\n        check(O, proto);\n        if(buggy)O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_set-proto.js\n// module id = 165\n// module chunks = 0","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject  = require('./_an-object')\n  , aFunction = require('./_a-function')\n  , SPECIES   = require('./_wks')('species');\nmodule.exports = function(O, D){\n  var C = anObject(O).constructor, S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_species-constructor.js\n// module id = 166\n// module chunks = 0","var toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_string-at.js\n// module id = 167\n// module chunks = 0","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-index.js\n// module id = 168\n// module chunks = 0","var anObject = require('./_an-object')\n  , get      = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function(it){\n  var iterFn = get(it);\n  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.get-iterator.js\n// module id = 169\n// module chunks = 0","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function(it){\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    || Iterators.hasOwnProperty(classof(O));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.is-iterable.js\n// module id = 170\n// module chunks = 0","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.array.iterator.js\n// module id = 171\n// module chunks = 0","'use strict';\nvar strong = require('./_collection-strong');\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.map.js\n// module id = 172\n// module chunks = 0","var $export = require('./_export')\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', {create: require('./_object-create')});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.create.js\n// module id = 173\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.define-property.js\n// module id = 174\n// module chunks = 0","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject                 = require('./_to-iobject')\n  , $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function(){\n  return function getOwnPropertyDescriptor(it, key){\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.get-own-property-descriptor.js\n// module id = 175\n// module chunks = 0","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject        = require('./_to-object')\n  , $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function(){\n  return function getPrototypeOf(it){\n    return $getPrototypeOf(toObject(it));\n  };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.get-prototype-of.js\n// module id = 176\n// module chunks = 0","// 19.1.3.10 Object.is(value1, value2)\nvar $export = require('./_export');\n$export($export.S, 'Object', {is: require('./_same-value')});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.is.js\n// module id = 177\n// module chunks = 0","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', {setPrototypeOf: require('./_set-proto').set});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.set-prototype-of.js\n// module id = 178\n// module chunks = 0","'use strict';\nvar LIBRARY            = require('./_library')\n  , global             = require('./_global')\n  , ctx                = require('./_ctx')\n  , classof            = require('./_classof')\n  , $export            = require('./_export')\n  , isObject           = require('./_is-object')\n  , aFunction          = require('./_a-function')\n  , anInstance         = require('./_an-instance')\n  , forOf              = require('./_for-of')\n  , speciesConstructor = require('./_species-constructor')\n  , task               = require('./_task').set\n  , microtask          = require('./_microtask')()\n  , PROMISE            = 'Promise'\n  , TypeError          = global.TypeError\n  , process            = global.process\n  , $Promise           = global[PROMISE]\n  , process            = global.process\n  , isNode             = classof(process) == 'process'\n  , empty              = function(){ /* empty */ }\n  , Internal, GenericPromiseCapability, Wrapper;\n\nvar USE_NATIVE = !!function(){\n  try {\n    // correct subclassing with @@species support\n    var promise     = $Promise.resolve(1)\n      , FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function(exec){ exec(empty, empty); };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch(e){ /* empty */ }\n}();\n\n// helpers\nvar sameConstructor = function(a, b){\n  // with library wrapper special case\n  return a === b || a === $Promise && b === Wrapper;\n};\nvar isThenable = function(it){\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar newPromiseCapability = function(C){\n  return sameConstructor($Promise, C)\n    ? new PromiseCapability(C)\n    : new GenericPromiseCapability(C);\n};\nvar PromiseCapability = GenericPromiseCapability = function(C){\n  var resolve, reject;\n  this.promise = new C(function($$resolve, $$reject){\n    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject  = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject  = aFunction(reject);\n};\nvar perform = function(exec){\n  try {\n    exec();\n  } catch(e){\n    return {error: e};\n  }\n};\nvar notify = function(promise, isReject){\n  if(promise._n)return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function(){\n    var value = promise._v\n      , ok    = promise._s == 1\n      , i     = 0;\n    var run = function(reaction){\n      var handler = ok ? reaction.ok : reaction.fail\n        , resolve = reaction.resolve\n        , reject  = reaction.reject\n        , domain  = reaction.domain\n        , result, then;\n      try {\n        if(handler){\n          if(!ok){\n            if(promise._h == 2)onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if(handler === true)result = value;\n          else {\n            if(domain)domain.enter();\n            result = handler(value);\n            if(domain)domain.exit();\n          }\n          if(result === reaction.promise){\n            reject(TypeError('Promise-chain cycle'));\n          } else if(then = isThenable(result)){\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch(e){\n        reject(e);\n      }\n    };\n    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if(isReject && !promise._h)onUnhandled(promise);\n  });\n};\nvar onUnhandled = function(promise){\n  task.call(global, function(){\n    var value = promise._v\n      , abrupt, handler, console;\n    if(isUnhandled(promise)){\n      abrupt = perform(function(){\n        if(isNode){\n          process.emit('unhandledRejection', value, promise);\n        } else if(handler = global.onunhandledrejection){\n          handler({promise: promise, reason: value});\n        } else if((console = global.console) && console.error){\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if(abrupt)throw abrupt.error;\n  });\n};\nvar isUnhandled = function(promise){\n  if(promise._h == 1)return false;\n  var chain = promise._a || promise._c\n    , i     = 0\n    , reaction;\n  while(chain.length > i){\n    reaction = chain[i++];\n    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n  } return true;\n};\nvar onHandleUnhandled = function(promise){\n  task.call(global, function(){\n    var handler;\n    if(isNode){\n      process.emit('rejectionHandled', promise);\n    } else if(handler = global.onrejectionhandled){\n      handler({promise: promise, reason: promise._v});\n    }\n  });\n};\nvar $reject = function(value){\n  var promise = this;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if(!promise._a)promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function(value){\n  var promise = this\n    , then;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if(promise === value)throw TypeError(\"Promise can't be resolved itself\");\n    if(then = isThenable(value)){\n      microtask(function(){\n        var wrapper = {_w: promise, _d: false}; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch(e){\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch(e){\n    $reject.call({_w: promise, _d: false}, e); // wrap\n  }\n};\n\n// constructor polyfill\nif(!USE_NATIVE){\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor){\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch(err){\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor){\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail   = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if(this._a)this._a.push(reaction);\n      if(this._s)notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n  PromiseCapability = function(){\n    var promise  = new Internal;\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject  = ctx($reject, promise, 1);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    var capability = newPromiseCapability(this)\n      , $$reject   = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;\n    var capability = newPromiseCapability(this)\n      , $$resolve  = capability.resolve;\n    $$resolve(x);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function(iter){\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , resolve    = capability.resolve\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      var values    = []\n        , index     = 0\n        , remaining = 1;\n      forOf(iterable, false, function(promise){\n        var $index        = index++\n          , alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function(value){\n          if(alreadyCalled)return;\n          alreadyCalled  = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.promise.js\n// module id = 179\n// module chunks = 0","'use strict';\n// ECMAScript 6 symbols shim\nvar global         = require('./_global')\n  , has            = require('./_has')\n  , DESCRIPTORS    = require('./_descriptors')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , META           = require('./_meta').KEY\n  , $fails         = require('./_fails')\n  , shared         = require('./_shared')\n  , setToStringTag = require('./_set-to-string-tag')\n  , uid            = require('./_uid')\n  , wks            = require('./_wks')\n  , wksExt         = require('./_wks-ext')\n  , wksDefine      = require('./_wks-define')\n  , keyOf          = require('./_keyof')\n  , enumKeys       = require('./_enum-keys')\n  , isArray        = require('./_is-array')\n  , anObject       = require('./_an-object')\n  , toIObject      = require('./_to-iobject')\n  , toPrimitive    = require('./_to-primitive')\n  , createDesc     = require('./_property-desc')\n  , _create        = require('./_object-create')\n  , gOPNExt        = require('./_object-gopn-ext')\n  , $GOPD          = require('./_object-gopd')\n  , $DP            = require('./_object-dp')\n  , $keys          = require('./_object-keys')\n  , gOPD           = $GOPD.f\n  , dP             = $DP.f\n  , gOPN           = gOPNExt.f\n  , $Symbol        = global.Symbol\n  , $JSON          = global.JSON\n  , _stringify     = $JSON && $JSON.stringify\n  , PROTOTYPE      = 'prototype'\n  , HIDDEN         = wks('_hidden')\n  , TO_PRIMITIVE   = wks('toPrimitive')\n  , isEnum         = {}.propertyIsEnumerable\n  , SymbolRegistry = shared('symbol-registry')\n  , AllSymbols     = shared('symbols')\n  , OPSymbols      = shared('op-symbols')\n  , ObjectProto    = Object[PROTOTYPE]\n  , USE_NATIVE     = typeof $Symbol == 'function'\n  , QObject        = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function(){\n  return _create(dP({}, 'a', {\n    get: function(){ return dP(this, 'a', {value: 7}).a; }\n  })).a != 7;\n}) ? function(it, key, D){\n  var protoDesc = gOPD(ObjectProto, key);\n  if(protoDesc)delete ObjectProto[key];\n  dP(it, key, D);\n  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function(tag){\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){\n  return typeof it == 'symbol';\n} : function(it){\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D){\n  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if(has(AllSymbols, key)){\n    if(!D.enumerable){\n      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;\n      D = _create(D, {enumerable: createDesc(0, false)});\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P){\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P))\n    , i    = 0\n    , l = keys.length\n    , key;\n  while(l > i)$defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P){\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key){\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){\n  it  = toIObject(it);\n  key = toPrimitive(key, true);\n  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;\n  var D = gOPD(it, key);\n  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it){\n  var names  = gOPN(toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it){\n  var IS_OP  = it === ObjectProto\n    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif(!USE_NATIVE){\n  $Symbol = function Symbol(){\n    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function(value){\n      if(this === ObjectProto)$set.call(OPSymbols, value);\n      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString(){\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f   = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f  = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if(DESCRIPTORS && !require('./_library')){\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function(name){\n    return wrap(wks(name));\n  }\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});\n\nfor(var symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);\n\nfor(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function(key){\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(key){\n    if(isSymbol(key))return keyOf(SymbolRegistry, key);\n    throw TypeError(key + ' is not a symbol!');\n  },\n  useSetter: function(){ setter = true; },\n  useSimple: function(){ setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it){\n    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined\n    var args = [it]\n      , i    = 1\n      , replacer, $replacer;\n    while(arguments.length > i)args.push(arguments[i++]);\n    replacer = args[1];\n    if(typeof replacer == 'function')$replacer = replacer;\n    if($replacer || !isArray(replacer))replacer = function(key, value){\n      if($replacer)value = $replacer.call(this, key, value);\n      if(!isSymbol(value))return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.symbol.js\n// module id = 180\n// module chunks = 0","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = require('./_export');\n\n$export($export.P + $export.R, 'Map', {toJSON: require('./_collection-to-json')('Map')});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es7.map.to-json.js\n// module id = 181\n// module chunks = 0","require('./_wks-define')('asyncIterator');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es7.symbol.async-iterator.js\n// module id = 182\n// module chunks = 0","require('./_wks-define')('observable');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es7.symbol.observable.js\n// module id = 183\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 184\n// module chunks = 0","// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g =\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this;\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/regenerator-runtime/runtime-module.js\n// module id = 185\n// module chunks = 0","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/regenerator-runtime/runtime.js\n// module id = 186\n// module chunks = 0"],"sourceRoot":""}